
Communication_Module.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  00001204  00001298  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001204  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000055  0080013c  0080013c  000012d4  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  000012d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000097  00000000  00000000  000019a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00001a37  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000218  00000000  00000000  00001a66  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000031c6  00000000  00000000  00001c7e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000007e6  00000000  00000000  00004e44  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000157d  00000000  00000000  0000562a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000698  00000000  00000000  00006ba8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000007b6  00000000  00000000  00007240  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001c30  00000000  00000000  000079f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000218  00000000  00000000  00009626  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	8c c0       	rjmp	.+280    	; 0x122 <__vector_2>
       a:	00 00       	nop
       c:	f8 c0       	rjmp	.+496    	; 0x1fe <__vector_3>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	e1 c1       	rjmp	.+962    	; 0x3e0 <__vector_7>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	0b c1       	rjmp	.+534    	; 0x258 <__vector_16>
      42:	00 00       	nop
      44:	34 c1       	rjmp	.+616    	; 0x2ae <__vector_17>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ee c1       	rjmp	.+988    	; 0x42e <__vector_20>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	4c c1       	rjmp	.+664    	; 0x30a <__vector_28>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e4 e0       	ldi	r30, 0x04	; 4
      a0:	f2 e1       	ldi	r31, 0x12	; 18
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	ac 33       	cpi	r26, 0x3C	; 60
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	21 e0       	ldi	r18, 0x01	; 1
      b4:	ac e3       	ldi	r26, 0x3C	; 60
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a1 39       	cpi	r26, 0x91	; 145
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	69 d1       	rcall	.+722    	; 0x396 <main>
      c4:	0c 94 00 09 	jmp	0x1200	; 0x1200 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <handleData>:
#include "Master_communication.h"


void handleData(uint8_t temp)
{
	switch(temp) {
      ca:	82 30       	cpi	r24, 0x02	; 2
      cc:	49 f0       	breq	.+18     	; 0xe0 <handleData+0x16>
      ce:	83 30       	cpi	r24, 0x03	; 3
      d0:	59 f0       	breq	.+22     	; 0xe8 <handleData+0x1e>
      d2:	81 30       	cpi	r24, 0x01	; 1
      d4:	71 f4       	brne	.+28     	; 0xf2 <handleData+0x28>
		case 0x01: //START PICKUP button pressed
		pickUpItem = 1;
      d6:	80 93 58 01 	sts	0x0158, r24
		waitingForStartAbort = 1;
      da:	80 93 5e 01 	sts	0x015E, r24
		break;
      de:	08 95       	ret
		case 0x02: //END PICKUP button pressed
		waitingForEndPickup = 1;
      e0:	81 e0       	ldi	r24, 0x01	; 1
      e2:	80 93 8a 01 	sts	0x018A, r24
		break;
      e6:	08 95       	ret
		case 0x03: //ABORT PICKUP button pressed
		pickUpItem = 0;
      e8:	10 92 58 01 	sts	0x0158, r1
		waitingForStartAbort = 1;
      ec:	81 e0       	ldi	r24, 0x01	; 1
      ee:	80 93 5e 01 	sts	0x015E, r24
      f2:	08 95       	ret

000000f4 <bluetoothTX>:
}

void bluetoothTX(uint8_t txdata) {
	
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) );
      f4:	e0 ec       	ldi	r30, 0xC0	; 192
      f6:	f0 e0       	ldi	r31, 0x00	; 0
      f8:	90 81       	ld	r25, Z
      fa:	95 ff       	sbrs	r25, 5
      fc:	fd cf       	rjmp	.-6      	; 0xf8 <bluetoothTX+0x4>
	
	/* Put data into buffer, sends the data */
	UDR0 = txdata;
      fe:	80 93 c6 00 	sts	0x00C6, r24
     102:	08 95       	ret

00000104 <setupBluetoothRXTX>:
}

void setupBluetoothRXTX()
{
	waiting_for_instruction = 1;
     104:	81 e0       	ldi	r24, 0x01	; 1
     106:	80 93 84 01 	sts	0x0184, r24
	UCSR0B = (1<<RXEN0) | (1<<TXEN0) | (1 << RXCIE0); //Enable RX0, TX0 and RX complete interrupt
     10a:	88 e9       	ldi	r24, 0x98	; 152
     10c:	80 93 c1 00 	sts	0x00C1, r24
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); //set data length to 8-bit;
     110:	86 e0       	ldi	r24, 0x06	; 6
     112:	80 93 c2 00 	sts	0x00C2, r24
	UBRR0H = 0x00;
     116:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = 0x07; //Sets baudvalue in AVR to 7, which gives baude rate 115200. baudvalue = (Fcpu/baudrate*16)-1	
     11a:	87 e0       	ldi	r24, 0x07	; 7
     11c:	80 93 c4 00 	sts	0x00C4, r24
     120:	08 95       	ret

00000122 <__vector_2>:
#include "Bluetooth.h"
#include "warehouseMode.h"
#include "hd44780_low.h"

ISR(INT1_vect)			//Receive function. Data is transmitted from the sensor slave
{
     122:	1f 92       	push	r1
     124:	0f 92       	push	r0
     126:	0f b6       	in	r0, 0x3f	; 63
     128:	0f 92       	push	r0
     12a:	11 24       	eor	r1, r1
     12c:	0b b6       	in	r0, 0x3b	; 59
     12e:	0f 92       	push	r0
     130:	2f 93       	push	r18
     132:	3f 93       	push	r19
     134:	4f 93       	push	r20
     136:	5f 93       	push	r21
     138:	6f 93       	push	r22
     13a:	7f 93       	push	r23
     13c:	8f 93       	push	r24
     13e:	9f 93       	push	r25
     140:	af 93       	push	r26
     142:	bf 93       	push	r27
     144:	ef 93       	push	r30
     146:	ff 93       	push	r31
	if(sensor_data == 0b00001111 || sensor_data == 0b00011111)
     148:	80 91 3f 01 	lds	r24, 0x013F
     14c:	8f 30       	cpi	r24, 0x0F	; 15
     14e:	21 f0       	breq	.+8      	; 0x158 <__vector_2+0x36>
     150:	80 91 3f 01 	lds	r24, 0x013F
     154:	8f 31       	cpi	r24, 0x1F	; 31
     156:	a9 f4       	brne	.+42     	; 0x182 <__vector_2+0x60>
	{
		stationLeftSensCounter++;
     158:	80 91 4f 01 	lds	r24, 0x014F
     15c:	8f 5f       	subi	r24, 0xFF	; 255
     15e:	80 93 4f 01 	sts	0x014F, r24
		if (stationLeftSensCounter == 40)
     162:	88 32       	cpi	r24, 0x28	; 40
     164:	b1 f5       	brne	.+108    	; 0x1d2 <__vector_2+0xb0>
		{
			wheel_steering_data = 0;
     166:	10 92 50 01 	sts	0x0150, r1
			TX_wheel_data();
     16a:	6b d6       	rcall	.+3286   	; 0xe42 <TX_wheel_data>
			//TX_sensor_data();
			stationRightSide = 0;
     16c:	10 92 5d 01 	sts	0x015D, r1
			stationModeEnable = 1;
     170:	81 e0       	ldi	r24, 0x01	; 1
     172:	80 93 4b 01 	sts	0x014B, r24
			bluetoothTX(sensor_data);
     176:	80 91 3f 01 	lds	r24, 0x013F
     17a:	bc df       	rcall	.-136    	; 0xf4 <bluetoothTX>
			stationLeftSensCounter = 0;
     17c:	10 92 4f 01 	sts	0x014F, r1
     180:	28 c0       	rjmp	.+80     	; 0x1d2 <__vector_2+0xb0>
		}
	}	else if(sensor_data == 0b01111000 || sensor_data == 0b01111100)
     182:	80 91 3f 01 	lds	r24, 0x013F
     186:	88 37       	cpi	r24, 0x78	; 120
     188:	21 f0       	breq	.+8      	; 0x192 <__vector_2+0x70>
     18a:	80 91 3f 01 	lds	r24, 0x013F
     18e:	8c 37       	cpi	r24, 0x7C	; 124
     190:	a9 f4       	brne	.+42     	; 0x1bc <__vector_2+0x9a>
	{
		stationRightSensCounter++;
     192:	80 91 56 01 	lds	r24, 0x0156
     196:	8f 5f       	subi	r24, 0xFF	; 255
     198:	80 93 56 01 	sts	0x0156, r24
		if(stationRightSensCounter == 40)
     19c:	88 32       	cpi	r24, 0x28	; 40
     19e:	c9 f4       	brne	.+50     	; 0x1d2 <__vector_2+0xb0>
		{
			wheel_steering_data = 0;
     1a0:	10 92 50 01 	sts	0x0150, r1
			TX_wheel_data();
     1a4:	4e d6       	rcall	.+3228   	; 0xe42 <TX_wheel_data>
			stationRightSide = 1;
     1a6:	81 e0       	ldi	r24, 0x01	; 1
     1a8:	80 93 5d 01 	sts	0x015D, r24
			stationModeEnable = 1;
     1ac:	80 93 4b 01 	sts	0x014B, r24
			bluetoothTX(sensor_data);
     1b0:	80 91 3f 01 	lds	r24, 0x013F
     1b4:	9f df       	rcall	.-194    	; 0xf4 <bluetoothTX>
			stationRightSensCounter = 0;
     1b6:	10 92 56 01 	sts	0x0156, r1
     1ba:	0b c0       	rjmp	.+22     	; 0x1d2 <__vector_2+0xb0>
		}
		
		
	} else
	{
		Slave_Select(Sensor_Slave);	//slave select
     1bc:	80 91 86 01 	lds	r24, 0x0186
     1c0:	cb d5       	rcall	.+2966   	; 0xd58 <Slave_Select>
		sensor_data = Master_RX(0x01); //sending dummy
     1c2:	81 e0       	ldi	r24, 0x01	; 1
     1c4:	b9 d5       	rcall	.+2930   	; 0xd38 <Master_RX>
     1c6:	80 93 3f 01 	sts	0x013F, r24
		stationLeftSensCounter = 0;
     1ca:	10 92 4f 01 	sts	0x014F, r1
		stationRightSensCounter = 0;
     1ce:	10 92 56 01 	sts	0x0156, r1
	}
	Slave_Select(Control_Slave);
     1d2:	80 91 90 01 	lds	r24, 0x0190
     1d6:	c0 d5       	rcall	.+2944   	; 0xd58 <Slave_Select>
}
     1d8:	ff 91       	pop	r31
     1da:	ef 91       	pop	r30
     1dc:	bf 91       	pop	r27
     1de:	af 91       	pop	r26
     1e0:	9f 91       	pop	r25
     1e2:	8f 91       	pop	r24
     1e4:	7f 91       	pop	r23
     1e6:	6f 91       	pop	r22
     1e8:	5f 91       	pop	r21
     1ea:	4f 91       	pop	r20
     1ec:	3f 91       	pop	r19
     1ee:	2f 91       	pop	r18
     1f0:	0f 90       	pop	r0
     1f2:	0b be       	out	0x3b, r0	; 59
     1f4:	0f 90       	pop	r0
     1f6:	0f be       	out	0x3f, r0	; 63
     1f8:	0f 90       	pop	r0
     1fa:	1f 90       	pop	r1
     1fc:	18 95       	reti

000001fe <__vector_3>:

ISR(INT2_vect)
{
     1fe:	1f 92       	push	r1
     200:	0f 92       	push	r0
     202:	0f b6       	in	r0, 0x3f	; 63
     204:	0f 92       	push	r0
     206:	11 24       	eor	r1, r1
     208:	0b b6       	in	r0, 0x3b	; 59
     20a:	0f 92       	push	r0
     20c:	2f 93       	push	r18
     20e:	3f 93       	push	r19
     210:	4f 93       	push	r20
     212:	5f 93       	push	r21
     214:	6f 93       	push	r22
     216:	7f 93       	push	r23
     218:	8f 93       	push	r24
     21a:	9f 93       	push	r25
     21c:	af 93       	push	r26
     21e:	bf 93       	push	r27
     220:	ef 93       	push	r30
     222:	ff 93       	push	r31
	Slave_Select(Control_Slave);
     224:	80 91 90 01 	lds	r24, 0x0190
     228:	97 d5       	rcall	.+2862   	; 0xd58 <Slave_Select>
	finishedDrop = Master_RX(0x01);
     22a:	81 e0       	ldi	r24, 0x01	; 1
     22c:	85 d5       	rcall	.+2826   	; 0xd38 <Master_RX>
     22e:	80 93 51 01 	sts	0x0151, r24
}
     232:	ff 91       	pop	r31
     234:	ef 91       	pop	r30
     236:	bf 91       	pop	r27
     238:	af 91       	pop	r26
     23a:	9f 91       	pop	r25
     23c:	8f 91       	pop	r24
     23e:	7f 91       	pop	r23
     240:	6f 91       	pop	r22
     242:	5f 91       	pop	r21
     244:	4f 91       	pop	r20
     246:	3f 91       	pop	r19
     248:	2f 91       	pop	r18
     24a:	0f 90       	pop	r0
     24c:	0b be       	out	0x3b, r0	; 59
     24e:	0f 90       	pop	r0
     250:	0f be       	out	0x3f, r0	; 63
     252:	0f 90       	pop	r0
     254:	1f 90       	pop	r1
     256:	18 95       	reti

00000258 <__vector_16>:

/* Timer interrupt routine handling sensor data receive */
ISR(TIMER0_COMPA_vect)
{
     258:	1f 92       	push	r1
     25a:	0f 92       	push	r0
     25c:	0f b6       	in	r0, 0x3f	; 63
     25e:	0f 92       	push	r0
     260:	11 24       	eor	r1, r1
     262:	0b b6       	in	r0, 0x3b	; 59
     264:	0f 92       	push	r0
     266:	2f 93       	push	r18
     268:	3f 93       	push	r19
     26a:	4f 93       	push	r20
     26c:	5f 93       	push	r21
     26e:	6f 93       	push	r22
     270:	7f 93       	push	r23
     272:	8f 93       	push	r24
     274:	9f 93       	push	r25
     276:	af 93       	push	r26
     278:	bf 93       	push	r27
     27a:	ef 93       	push	r30
     27c:	ff 93       	push	r31
	if(stationModeEnable == 0)
     27e:	80 91 4b 01 	lds	r24, 0x014B
     282:	81 11       	cpse	r24, r1
     284:	01 c0       	rjmp	.+2      	; 0x288 <__vector_16+0x30>
	{
		RX_sensor_data();
     286:	d0 d5       	rcall	.+2976   	; 0xe28 <RX_sensor_data>
	}
}
     288:	ff 91       	pop	r31
     28a:	ef 91       	pop	r30
     28c:	bf 91       	pop	r27
     28e:	af 91       	pop	r26
     290:	9f 91       	pop	r25
     292:	8f 91       	pop	r24
     294:	7f 91       	pop	r23
     296:	6f 91       	pop	r22
     298:	5f 91       	pop	r21
     29a:	4f 91       	pop	r20
     29c:	3f 91       	pop	r19
     29e:	2f 91       	pop	r18
     2a0:	0f 90       	pop	r0
     2a2:	0b be       	out	0x3b, r0	; 59
     2a4:	0f 90       	pop	r0
     2a6:	0f be       	out	0x3f, r0	; 63
     2a8:	0f 90       	pop	r0
     2aa:	1f 90       	pop	r1
     2ac:	18 95       	reti

000002ae <__vector_17>:

/* Timer interrupt routine handling sensor data transmission*/
ISR(TIMER0_COMPB_vect)
{
     2ae:	1f 92       	push	r1
     2b0:	0f 92       	push	r0
     2b2:	0f b6       	in	r0, 0x3f	; 63
     2b4:	0f 92       	push	r0
     2b6:	11 24       	eor	r1, r1
     2b8:	0b b6       	in	r0, 0x3b	; 59
     2ba:	0f 92       	push	r0
     2bc:	2f 93       	push	r18
     2be:	3f 93       	push	r19
     2c0:	4f 93       	push	r20
     2c2:	5f 93       	push	r21
     2c4:	6f 93       	push	r22
     2c6:	7f 93       	push	r23
     2c8:	8f 93       	push	r24
     2ca:	9f 93       	push	r25
     2cc:	af 93       	push	r26
     2ce:	bf 93       	push	r27
     2d0:	ef 93       	push	r30
     2d2:	ff 93       	push	r31
	if(stationModeEnable == 0)
     2d4:	80 91 4b 01 	lds	r24, 0x014B
     2d8:	81 11       	cpse	r24, r1
     2da:	04 c0       	rjmp	.+8      	; 0x2e4 <__vector_17+0x36>
	{
		TX_sensor_data();
     2dc:	90 d5       	rcall	.+2848   	; 0xdfe <TX_sensor_data>
		bluetoothTX(sensor_data);
     2de:	80 91 3f 01 	lds	r24, 0x013F
     2e2:	08 df       	rcall	.-496    	; 0xf4 <bluetoothTX>
	}
}
     2e4:	ff 91       	pop	r31
     2e6:	ef 91       	pop	r30
     2e8:	bf 91       	pop	r27
     2ea:	af 91       	pop	r26
     2ec:	9f 91       	pop	r25
     2ee:	8f 91       	pop	r24
     2f0:	7f 91       	pop	r23
     2f2:	6f 91       	pop	r22
     2f4:	5f 91       	pop	r21
     2f6:	4f 91       	pop	r20
     2f8:	3f 91       	pop	r19
     2fa:	2f 91       	pop	r18
     2fc:	0f 90       	pop	r0
     2fe:	0b be       	out	0x3b, r0	; 59
     300:	0f 90       	pop	r0
     302:	0f be       	out	0x3f, r0	; 63
     304:	0f 90       	pop	r0
     306:	1f 90       	pop	r1
     308:	18 95       	reti

0000030a <__vector_28>:
}

/*
When the receive of one byte is complete, this interrupt will run.
*/
ISR(USART1_RX_vect){
     30a:	1f 92       	push	r1
     30c:	0f 92       	push	r0
     30e:	0f b6       	in	r0, 0x3f	; 63
     310:	0f 92       	push	r0
     312:	11 24       	eor	r1, r1
     314:	0b b6       	in	r0, 0x3b	; 59
     316:	0f 92       	push	r0
     318:	2f 93       	push	r18
     31a:	3f 93       	push	r19
     31c:	4f 93       	push	r20
     31e:	5f 93       	push	r21
     320:	6f 93       	push	r22
     322:	7f 93       	push	r23
     324:	8f 93       	push	r24
     326:	9f 93       	push	r25
     328:	af 93       	push	r26
     32a:	bf 93       	push	r27
     32c:	ef 93       	push	r30
     32e:	ff 93       	push	r31
	newStream[digit] = UDR1;
     330:	80 91 3e 01 	lds	r24, 0x013E
     334:	90 91 ce 00 	lds	r25, 0x00CE
     338:	e8 2f       	mov	r30, r24
     33a:	f0 e0       	ldi	r31, 0x00	; 0
     33c:	e0 5d       	subi	r30, 0xD0	; 208
     33e:	fe 4f       	sbci	r31, 0xFE	; 254
     340:	90 83       	st	Z, r25
	digit++;
     342:	8f 5f       	subi	r24, 0xFF	; 255
	if (digit == 12) {
     344:	8c 30       	cpi	r24, 0x0C	; 12
     346:	19 f0       	breq	.+6      	; 0x34e <__vector_28+0x44>
/*
When the receive of one byte is complete, this interrupt will run.
*/
ISR(USART1_RX_vect){
	newStream[digit] = UDR1;
	digit++;
     348:	80 93 3e 01 	sts	0x013E, r24
     34c:	07 c0       	rjmp	.+14     	; 0x35c <__vector_28+0x52>
	if (digit == 12) {
		digit = 0;
     34e:	10 92 3e 01 	sts	0x013E, r1
		streamFilled = 1;
     352:	81 e0       	ldi	r24, 0x01	; 1
     354:	80 93 57 01 	sts	0x0157, r24
		powerRFID(0);
     358:	80 e0       	ldi	r24, 0x00	; 0
     35a:	15 d6       	rcall	.+3114   	; 0xf86 <powerRFID>
	}
}
     35c:	ff 91       	pop	r31
     35e:	ef 91       	pop	r30
     360:	bf 91       	pop	r27
     362:	af 91       	pop	r26
     364:	9f 91       	pop	r25
     366:	8f 91       	pop	r24
     368:	7f 91       	pop	r23
     36a:	6f 91       	pop	r22
     36c:	5f 91       	pop	r21
     36e:	4f 91       	pop	r20
     370:	3f 91       	pop	r19
     372:	2f 91       	pop	r18
     374:	0f 90       	pop	r0
     376:	0b be       	out	0x3b, r0	; 59
     378:	0f 90       	pop	r0
     37a:	0f be       	out	0x3f, r0	; 63
     37c:	0f 90       	pop	r0
     37e:	1f 90       	pop	r1
     380:	18 95       	reti

00000382 <initManualMode>:
/*Function that initiates manual mode*/
void initManualMode()
{	
	//PCICR = 0x08; //sets PCINT31..24 as possible external interrupt port
	//PCMSK3 = 0x40; //enables external interrupt on PORT PCINT30   - pin 20
	automaticModeEnabled = 0;
     382:	10 92 3d 01 	sts	0x013D, r1
	manualModeEnabled = 1;
     386:	81 e0       	ldi	r24, 0x01	; 1
     388:	80 93 8e 01 	sts	0x018E, r24
	stationLeftSensCounter = 0;
     38c:	10 92 4f 01 	sts	0x014F, r1
	stationRightSensCounter = 0;
     390:	10 92 56 01 	sts	0x0156, r1
     394:	08 95       	ret

00000396 <main>:
	toggleMode();
}

int main(void)
{
	setupRFID();
     396:	a3 d6       	rcall	.+3398   	; 0x10de <setupRFID>
	setupLCD();
     398:	c8 d6       	rcall	.+3472   	; 0x112a <setupLCD>
	setupWarehouse();
     39a:	b4 d6       	rcall	.+3432   	; 0x1104 <setupWarehouse>
	initManualMode();
     39c:	f2 df       	rcall	.-28     	; 0x382 <initManualMode>
	SPI_Init_Master();
     39e:	83 d4       	rcall	.+2310   	; 0xca6 <SPI_Init_Master>
	setupBluetoothRXTX();
     3a0:	b1 de       	rcall	.-670    	; 0x104 <setupBluetoothRXTX>
	
	
	while(1)
	{
		if(stationModeEnable == 1)
     3a2:	80 91 4b 01 	lds	r24, 0x014B
     3a6:	88 23       	and	r24, r24
     3a8:	e1 f3       	breq	.-8      	; 0x3a2 <main+0xc>
		{
			stationMode();
     3aa:	86 d6       	rcall	.+3340   	; 0x10b8 <stationMode>
     3ac:	fa cf       	rjmp	.-12     	; 0x3a2 <main+0xc>

000003ae <toggleMode>:
	stationRightSensCounter = 0;
}

void toggleMode()
{
	if(automaticModeEnabled == 0)
     3ae:	80 91 3d 01 	lds	r24, 0x013D
     3b2:	81 11       	cpse	r24, r1
     3b4:	09 c0       	rjmp	.+18     	; 0x3c8 <toggleMode+0x1a>
	{
		automaticModeEnabled = 1;
     3b6:	81 e0       	ldi	r24, 0x01	; 1
     3b8:	80 93 3d 01 	sts	0x013D, r24
		manualModeEnabled = 0;
     3bc:	10 92 8e 01 	sts	0x018E, r1
		TIMSK0 = 0x06;
     3c0:	86 e0       	ldi	r24, 0x06	; 6
     3c2:	80 93 6e 00 	sts	0x006E, r24
     3c6:	08 95       	ret
		
	} else if (manualModeEnabled == 0)
     3c8:	80 91 8e 01 	lds	r24, 0x018E
     3cc:	81 11       	cpse	r24, r1
     3ce:	07 c0       	rjmp	.+14     	; 0x3de <toggleMode+0x30>
	{
		automaticModeEnabled = 0;
     3d0:	10 92 3d 01 	sts	0x013D, r1
		manualModeEnabled = 1;
     3d4:	81 e0       	ldi	r24, 0x01	; 1
     3d6:	80 93 8e 01 	sts	0x018E, r24
		TIMSK0 = 0;
     3da:	10 92 6e 00 	sts	0x006E, r1
     3de:	08 95       	ret

000003e0 <__vector_7>:
		powerRFID(0);
	}
}

ISR(PCINT3_vect)
{
     3e0:	1f 92       	push	r1
     3e2:	0f 92       	push	r0
     3e4:	0f b6       	in	r0, 0x3f	; 63
     3e6:	0f 92       	push	r0
     3e8:	11 24       	eor	r1, r1
     3ea:	0b b6       	in	r0, 0x3b	; 59
     3ec:	0f 92       	push	r0
     3ee:	2f 93       	push	r18
     3f0:	3f 93       	push	r19
     3f2:	4f 93       	push	r20
     3f4:	5f 93       	push	r21
     3f6:	6f 93       	push	r22
     3f8:	7f 93       	push	r23
     3fa:	8f 93       	push	r24
     3fc:	9f 93       	push	r25
     3fe:	af 93       	push	r26
     400:	bf 93       	push	r27
     402:	ef 93       	push	r30
     404:	ff 93       	push	r31
	toggleMode();
     406:	d3 df       	rcall	.-90     	; 0x3ae <toggleMode>
}
     408:	ff 91       	pop	r31
     40a:	ef 91       	pop	r30
     40c:	bf 91       	pop	r27
     40e:	af 91       	pop	r26
     410:	9f 91       	pop	r25
     412:	8f 91       	pop	r24
     414:	7f 91       	pop	r23
     416:	6f 91       	pop	r22
     418:	5f 91       	pop	r21
     41a:	4f 91       	pop	r20
     41c:	3f 91       	pop	r19
     41e:	2f 91       	pop	r18
     420:	0f 90       	pop	r0
     422:	0b be       	out	0x3b, r0	; 59
     424:	0f 90       	pop	r0
     426:	0f be       	out	0x3f, r0	; 63
     428:	0f 90       	pop	r0
     42a:	1f 90       	pop	r1
     42c:	18 95       	reti

0000042e <__vector_20>:
}


/* Interrupt routine for receiving bluetooth data */
ISR(USART0_RX_vect)
{
     42e:	1f 92       	push	r1
     430:	0f 92       	push	r0
     432:	0f b6       	in	r0, 0x3f	; 63
     434:	0f 92       	push	r0
     436:	11 24       	eor	r1, r1
     438:	0b b6       	in	r0, 0x3b	; 59
     43a:	0f 92       	push	r0
     43c:	2f 93       	push	r18
     43e:	3f 93       	push	r19
     440:	4f 93       	push	r20
     442:	5f 93       	push	r21
     444:	6f 93       	push	r22
     446:	7f 93       	push	r23
     448:	8f 93       	push	r24
     44a:	9f 93       	push	r25
     44c:	af 93       	push	r26
     44e:	bf 93       	push	r27
     450:	ef 93       	push	r30
     452:	ff 93       	push	r31
	btdata = UDR0;
     454:	80 91 c6 00 	lds	r24, 0x00C6
     458:	80 93 5c 01 	sts	0x015C, r24
	if (waiting_for_instruction == 1) {
     45c:	90 91 84 01 	lds	r25, 0x0184
     460:	91 30       	cpi	r25, 0x01	; 1
     462:	39 f5       	brne	.+78     	; 0x4b2 <__vector_20+0x84>
		waiting_for_instruction = 0;
     464:	10 92 84 01 	sts	0x0184, r1
		if (btdata == 1) {
     468:	81 30       	cpi	r24, 0x01	; 1
     46a:	19 f4       	brne	.+6      	; 0x472 <__vector_20+0x44>
			component = WHEEL;
     46c:	80 93 55 01 	sts	0x0155, r24
     470:	46 c0       	rjmp	.+140    	; 0x4fe <__vector_20+0xd0>
		}
		else if(btdata == 2) {
     472:	82 30       	cpi	r24, 0x02	; 2
     474:	19 f4       	brne	.+6      	; 0x47c <__vector_20+0x4e>
			component = ARM;
     476:	80 93 55 01 	sts	0x0155, r24
     47a:	41 c0       	rjmp	.+130    	; 0x4fe <__vector_20+0xd0>
		}
		else if(btdata == 3) {
     47c:	83 30       	cpi	r24, 0x03	; 3
     47e:	19 f4       	brne	.+6      	; 0x486 <__vector_20+0x58>
			component = CALINSTR;
     480:	80 93 55 01 	sts	0x0155, r24
     484:	3c c0       	rjmp	.+120    	; 0x4fe <__vector_20+0xd0>
		}
		else if(btdata == 4) {
     486:	84 30       	cpi	r24, 0x04	; 4
     488:	19 f4       	brne	.+6      	; 0x490 <__vector_20+0x62>
			component = PCONINSTR;
     48a:	80 93 55 01 	sts	0x0155, r24
     48e:	37 c0       	rjmp	.+110    	; 0x4fe <__vector_20+0xd0>
		} 
		else if(btdata == 5) {
     490:	85 30       	cpi	r24, 0x05	; 5
     492:	19 f4       	brne	.+6      	; 0x49a <__vector_20+0x6c>
			component = KPINSTR;
     494:	80 93 55 01 	sts	0x0155, r24
     498:	32 c0       	rjmp	.+100    	; 0x4fe <__vector_20+0xd0>
		}
		else if(btdata == 6) {
     49a:	86 30       	cpi	r24, 0x06	; 6
     49c:	19 f4       	brne	.+6      	; 0x4a4 <__vector_20+0x76>
			component = KDINSTR;
     49e:	80 93 55 01 	sts	0x0155, r24
     4a2:	2d c0       	rjmp	.+90     	; 0x4fe <__vector_20+0xd0>
		} 
		else if(btdata == 7) { //Toggle mode instruction
     4a4:	87 30       	cpi	r24, 0x07	; 7
     4a6:	59 f5       	brne	.+86     	; 0x4fe <__vector_20+0xd0>
			waiting_for_instruction = 1;
     4a8:	81 e0       	ldi	r24, 0x01	; 1
     4aa:	80 93 84 01 	sts	0x0184, r24
			toggleMode();
     4ae:	7f df       	rcall	.-258    	; 0x3ae <toggleMode>
     4b0:	26 c0       	rjmp	.+76     	; 0x4fe <__vector_20+0xd0>
		}
	}
	else {
		waiting_for_instruction = 1;
     4b2:	91 e0       	ldi	r25, 0x01	; 1
     4b4:	90 93 84 01 	sts	0x0184, r25
		if (component == WHEEL) {
     4b8:	90 91 55 01 	lds	r25, 0x0155
     4bc:	91 30       	cpi	r25, 0x01	; 1
     4be:	41 f4       	brne	.+16     	; 0x4d0 <__vector_20+0xa2>
			if(manualModeEnabled == 1) {
     4c0:	90 91 8e 01 	lds	r25, 0x018E
     4c4:	91 30       	cpi	r25, 0x01	; 1
     4c6:	d9 f4       	brne	.+54     	; 0x4fe <__vector_20+0xd0>
			wheel_steering_data = btdata;
     4c8:	80 93 50 01 	sts	0x0150, r24
			TX_wheel_data();
     4cc:	ba d4       	rcall	.+2420   	; 0xe42 <TX_wheel_data>
     4ce:	17 c0       	rjmp	.+46     	; 0x4fe <__vector_20+0xd0>
			}
		}
		else if (component == ARM) {
     4d0:	92 30       	cpi	r25, 0x02	; 2
     4d2:	21 f4       	brne	.+8      	; 0x4dc <__vector_20+0xae>
			robot_arm_data = btdata;
     4d4:	80 93 3c 01 	sts	0x013C, r24
			TX_arm_data();
     4d8:	c0 d4       	rcall	.+2432   	; 0xe5a <TX_arm_data>
     4da:	11 c0       	rjmp	.+34     	; 0x4fe <__vector_20+0xd0>
		}
		else if (component == CALINSTR) {
     4dc:	93 30       	cpi	r25, 0x03	; 3
     4de:	79 f0       	breq	.+30     	; 0x4fe <__vector_20+0xd0>
			//calibration();	
		}
		else if (component == PCONINSTR) {
     4e0:	94 30       	cpi	r25, 0x04	; 4
     4e2:	11 f4       	brne	.+4      	; 0x4e8 <__vector_20+0xba>
			handleData(btdata);
     4e4:	f2 dd       	rcall	.-1052   	; 0xca <handleData>
     4e6:	0b c0       	rjmp	.+22     	; 0x4fe <__vector_20+0xd0>
		}
		else if (component == KPINSTR) {
     4e8:	95 30       	cpi	r25, 0x05	; 5
     4ea:	21 f4       	brne	.+8      	; 0x4f4 <__vector_20+0xc6>
			Kp = btdata;
     4ec:	80 93 87 01 	sts	0x0187, r24
			TXKpData();
     4f0:	bd d4       	rcall	.+2426   	; 0xe6c <TXKpData>
     4f2:	05 c0       	rjmp	.+10     	; 0x4fe <__vector_20+0xd0>
		}
		else if (component == KDINSTR) {
     4f4:	96 30       	cpi	r25, 0x06	; 6
     4f6:	19 f4       	brne	.+6      	; 0x4fe <__vector_20+0xd0>
			Kd = btdata;
     4f8:	80 93 85 01 	sts	0x0185, r24
			TXKpData();
     4fc:	b7 d4       	rcall	.+2414   	; 0xe6c <TXKpData>
		}
	}
}
     4fe:	ff 91       	pop	r31
     500:	ef 91       	pop	r30
     502:	bf 91       	pop	r27
     504:	af 91       	pop	r26
     506:	9f 91       	pop	r25
     508:	8f 91       	pop	r24
     50a:	7f 91       	pop	r23
     50c:	6f 91       	pop	r22
     50e:	5f 91       	pop	r21
     510:	4f 91       	pop	r20
     512:	3f 91       	pop	r19
     514:	2f 91       	pop	r18
     516:	0f 90       	pop	r0
     518:	0b be       	out	0x3b, r0	; 59
     51a:	0f 90       	pop	r0
     51c:	0f be       	out	0x3f, r0	; 63
     51e:	0f 90       	pop	r0
     520:	1f 90       	pop	r1
     522:	18 95       	reti

00000524 <_hd44780_l_func>:
     524:	0f 93       	push	r16
     526:	1f 93       	push	r17
     528:	cf 93       	push	r28
     52a:	df 93       	push	r29
     52c:	fc 01       	movw	r30, r24
     52e:	90 81       	ld	r25, Z
     530:	a3 85       	ldd	r26, Z+11	; 0x0b
     532:	b4 85       	ldd	r27, Z+12	; 0x0c
     534:	61 11       	cpse	r22, r1
     536:	0e c0       	rjmp	.+28     	; 0x554 <_hd44780_l_func+0x30>
     538:	3c 91       	ld	r19, X
     53a:	61 e0       	ldi	r22, 0x01	; 1
     53c:	70 e0       	ldi	r23, 0x00	; 0
     53e:	eb 01       	movw	r28, r22
     540:	02 c0       	rjmp	.+4      	; 0x546 <_hd44780_l_func+0x22>
     542:	cc 0f       	add	r28, r28
     544:	dd 1f       	adc	r29, r29
     546:	9a 95       	dec	r25
     548:	e2 f7       	brpl	.-8      	; 0x542 <_hd44780_l_func+0x1e>
     54a:	ce 01       	movw	r24, r28
     54c:	80 95       	com	r24
     54e:	83 23       	and	r24, r19
     550:	8c 93       	st	X, r24
     552:	0c c0       	rjmp	.+24     	; 0x56c <_hd44780_l_func+0x48>
     554:	3c 91       	ld	r19, X
     556:	61 e0       	ldi	r22, 0x01	; 1
     558:	70 e0       	ldi	r23, 0x00	; 0
     55a:	eb 01       	movw	r28, r22
     55c:	02 c0       	rjmp	.+4      	; 0x562 <_hd44780_l_func+0x3e>
     55e:	cc 0f       	add	r28, r28
     560:	dd 1f       	adc	r29, r29
     562:	9a 95       	dec	r25
     564:	e2 f7       	brpl	.-8      	; 0x55e <_hd44780_l_func+0x3a>
     566:	ce 01       	movw	r24, r28
     568:	83 2b       	or	r24, r19
     56a:	8c 93       	st	X, r24
     56c:	91 81       	ldd	r25, Z+1	; 0x01
     56e:	a5 85       	ldd	r26, Z+13	; 0x0d
     570:	b6 85       	ldd	r27, Z+14	; 0x0e
     572:	41 11       	cpse	r20, r1
     574:	0e c0       	rjmp	.+28     	; 0x592 <_hd44780_l_func+0x6e>
     576:	3c 91       	ld	r19, X
     578:	41 e0       	ldi	r20, 0x01	; 1
     57a:	50 e0       	ldi	r21, 0x00	; 0
     57c:	ba 01       	movw	r22, r20
     57e:	02 c0       	rjmp	.+4      	; 0x584 <_hd44780_l_func+0x60>
     580:	66 0f       	add	r22, r22
     582:	77 1f       	adc	r23, r23
     584:	9a 95       	dec	r25
     586:	e2 f7       	brpl	.-8      	; 0x580 <_hd44780_l_func+0x5c>
     588:	cb 01       	movw	r24, r22
     58a:	80 95       	com	r24
     58c:	83 23       	and	r24, r19
     58e:	8c 93       	st	X, r24
     590:	0c c0       	rjmp	.+24     	; 0x5aa <_hd44780_l_func+0x86>
     592:	3c 91       	ld	r19, X
     594:	41 e0       	ldi	r20, 0x01	; 1
     596:	50 e0       	ldi	r21, 0x00	; 0
     598:	ea 01       	movw	r28, r20
     59a:	02 c0       	rjmp	.+4      	; 0x5a0 <_hd44780_l_func+0x7c>
     59c:	cc 0f       	add	r28, r28
     59e:	dd 1f       	adc	r29, r29
     5a0:	9a 95       	dec	r25
     5a2:	e2 f7       	brpl	.-8      	; 0x59c <_hd44780_l_func+0x78>
     5a4:	ce 01       	movw	r24, r28
     5a6:	83 2b       	or	r24, r19
     5a8:	8c 93       	st	X, r24
     5aa:	93 81       	ldd	r25, Z+3	; 0x03
     5ac:	a1 89       	ldd	r26, Z+17	; 0x11
     5ae:	b2 89       	ldd	r27, Z+18	; 0x12
     5b0:	22 23       	and	r18, r18
     5b2:	74 f0       	brlt	.+28     	; 0x5d0 <_hd44780_l_func+0xac>
     5b4:	3c 91       	ld	r19, X
     5b6:	41 e0       	ldi	r20, 0x01	; 1
     5b8:	50 e0       	ldi	r21, 0x00	; 0
     5ba:	ba 01       	movw	r22, r20
     5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <_hd44780_l_func+0x9e>
     5be:	66 0f       	add	r22, r22
     5c0:	77 1f       	adc	r23, r23
     5c2:	9a 95       	dec	r25
     5c4:	e2 f7       	brpl	.-8      	; 0x5be <_hd44780_l_func+0x9a>
     5c6:	cb 01       	movw	r24, r22
     5c8:	80 95       	com	r24
     5ca:	83 23       	and	r24, r19
     5cc:	8c 93       	st	X, r24
     5ce:	0c c0       	rjmp	.+24     	; 0x5e8 <_hd44780_l_func+0xc4>
     5d0:	3c 91       	ld	r19, X
     5d2:	41 e0       	ldi	r20, 0x01	; 1
     5d4:	50 e0       	ldi	r21, 0x00	; 0
     5d6:	ea 01       	movw	r28, r20
     5d8:	02 c0       	rjmp	.+4      	; 0x5de <_hd44780_l_func+0xba>
     5da:	cc 0f       	add	r28, r28
     5dc:	dd 1f       	adc	r29, r29
     5de:	9a 95       	dec	r25
     5e0:	e2 f7       	brpl	.-8      	; 0x5da <_hd44780_l_func+0xb6>
     5e2:	ce 01       	movw	r24, r28
     5e4:	83 2b       	or	r24, r19
     5e6:	8c 93       	st	X, r24
     5e8:	94 81       	ldd	r25, Z+4	; 0x04
     5ea:	a3 89       	ldd	r26, Z+19	; 0x13
     5ec:	b4 89       	ldd	r27, Z+20	; 0x14
     5ee:	26 fd       	sbrc	r18, 6
     5f0:	0e c0       	rjmp	.+28     	; 0x60e <_hd44780_l_func+0xea>
     5f2:	3c 91       	ld	r19, X
     5f4:	41 e0       	ldi	r20, 0x01	; 1
     5f6:	50 e0       	ldi	r21, 0x00	; 0
     5f8:	ba 01       	movw	r22, r20
     5fa:	02 c0       	rjmp	.+4      	; 0x600 <_hd44780_l_func+0xdc>
     5fc:	66 0f       	add	r22, r22
     5fe:	77 1f       	adc	r23, r23
     600:	9a 95       	dec	r25
     602:	e2 f7       	brpl	.-8      	; 0x5fc <_hd44780_l_func+0xd8>
     604:	cb 01       	movw	r24, r22
     606:	80 95       	com	r24
     608:	83 23       	and	r24, r19
     60a:	8c 93       	st	X, r24
     60c:	0c c0       	rjmp	.+24     	; 0x626 <_hd44780_l_func+0x102>
     60e:	3c 91       	ld	r19, X
     610:	41 e0       	ldi	r20, 0x01	; 1
     612:	50 e0       	ldi	r21, 0x00	; 0
     614:	ea 01       	movw	r28, r20
     616:	02 c0       	rjmp	.+4      	; 0x61c <_hd44780_l_func+0xf8>
     618:	cc 0f       	add	r28, r28
     61a:	dd 1f       	adc	r29, r29
     61c:	9a 95       	dec	r25
     61e:	e2 f7       	brpl	.-8      	; 0x618 <_hd44780_l_func+0xf4>
     620:	ce 01       	movw	r24, r28
     622:	83 2b       	or	r24, r19
     624:	8c 93       	st	X, r24
     626:	95 81       	ldd	r25, Z+5	; 0x05
     628:	a5 89       	ldd	r26, Z+21	; 0x15
     62a:	b6 89       	ldd	r27, Z+22	; 0x16
     62c:	25 fd       	sbrc	r18, 5
     62e:	0e c0       	rjmp	.+28     	; 0x64c <_hd44780_l_func+0x128>
     630:	3c 91       	ld	r19, X
     632:	41 e0       	ldi	r20, 0x01	; 1
     634:	50 e0       	ldi	r21, 0x00	; 0
     636:	ba 01       	movw	r22, r20
     638:	02 c0       	rjmp	.+4      	; 0x63e <_hd44780_l_func+0x11a>
     63a:	66 0f       	add	r22, r22
     63c:	77 1f       	adc	r23, r23
     63e:	9a 95       	dec	r25
     640:	e2 f7       	brpl	.-8      	; 0x63a <_hd44780_l_func+0x116>
     642:	cb 01       	movw	r24, r22
     644:	80 95       	com	r24
     646:	83 23       	and	r24, r19
     648:	8c 93       	st	X, r24
     64a:	0c c0       	rjmp	.+24     	; 0x664 <_hd44780_l_func+0x140>
     64c:	3c 91       	ld	r19, X
     64e:	41 e0       	ldi	r20, 0x01	; 1
     650:	50 e0       	ldi	r21, 0x00	; 0
     652:	ea 01       	movw	r28, r20
     654:	02 c0       	rjmp	.+4      	; 0x65a <_hd44780_l_func+0x136>
     656:	cc 0f       	add	r28, r28
     658:	dd 1f       	adc	r29, r29
     65a:	9a 95       	dec	r25
     65c:	e2 f7       	brpl	.-8      	; 0x656 <_hd44780_l_func+0x132>
     65e:	ce 01       	movw	r24, r28
     660:	83 2b       	or	r24, r19
     662:	8c 93       	st	X, r24
     664:	96 81       	ldd	r25, Z+6	; 0x06
     666:	a7 89       	ldd	r26, Z+23	; 0x17
     668:	b0 8d       	ldd	r27, Z+24	; 0x18
     66a:	24 fd       	sbrc	r18, 4
     66c:	0e c0       	rjmp	.+28     	; 0x68a <_hd44780_l_func+0x166>
     66e:	3c 91       	ld	r19, X
     670:	41 e0       	ldi	r20, 0x01	; 1
     672:	50 e0       	ldi	r21, 0x00	; 0
     674:	ba 01       	movw	r22, r20
     676:	02 c0       	rjmp	.+4      	; 0x67c <_hd44780_l_func+0x158>
     678:	66 0f       	add	r22, r22
     67a:	77 1f       	adc	r23, r23
     67c:	9a 95       	dec	r25
     67e:	e2 f7       	brpl	.-8      	; 0x678 <_hd44780_l_func+0x154>
     680:	cb 01       	movw	r24, r22
     682:	80 95       	com	r24
     684:	83 23       	and	r24, r19
     686:	8c 93       	st	X, r24
     688:	0c c0       	rjmp	.+24     	; 0x6a2 <_hd44780_l_func+0x17e>
     68a:	3c 91       	ld	r19, X
     68c:	41 e0       	ldi	r20, 0x01	; 1
     68e:	50 e0       	ldi	r21, 0x00	; 0
     690:	ea 01       	movw	r28, r20
     692:	02 c0       	rjmp	.+4      	; 0x698 <_hd44780_l_func+0x174>
     694:	cc 0f       	add	r28, r28
     696:	dd 1f       	adc	r29, r29
     698:	9a 95       	dec	r25
     69a:	e2 f7       	brpl	.-8      	; 0x694 <_hd44780_l_func+0x170>
     69c:	ce 01       	movw	r24, r28
     69e:	83 2b       	or	r24, r19
     6a0:	8c 93       	st	X, r24
     6a2:	83 a1       	ldd	r24, Z+35	; 0x23
     6a4:	81 11       	cpse	r24, r1
     6a6:	1f c0       	rjmp	.+62     	; 0x6e6 <_hd44780_l_func+0x1c2>
     6a8:	00 c0       	rjmp	.+0      	; 0x6aa <_hd44780_l_func+0x186>
     6aa:	a7 85       	ldd	r26, Z+15	; 0x0f
     6ac:	b0 89       	ldd	r27, Z+16	; 0x10
     6ae:	3c 91       	ld	r19, X
     6b0:	81 e0       	ldi	r24, 0x01	; 1
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	ac 01       	movw	r20, r24
     6b6:	02 80       	ldd	r0, Z+2	; 0x02
     6b8:	02 c0       	rjmp	.+4      	; 0x6be <_hd44780_l_func+0x19a>
     6ba:	44 0f       	add	r20, r20
     6bc:	55 1f       	adc	r21, r21
     6be:	0a 94       	dec	r0
     6c0:	e2 f7       	brpl	.-8      	; 0x6ba <_hd44780_l_func+0x196>
     6c2:	43 2b       	or	r20, r19
     6c4:	4c 93       	st	X, r20
     6c6:	00 c0       	rjmp	.+0      	; 0x6c8 <_hd44780_l_func+0x1a4>
     6c8:	00 c0       	rjmp	.+0      	; 0x6ca <_hd44780_l_func+0x1a6>
     6ca:	a7 85       	ldd	r26, Z+15	; 0x0f
     6cc:	b0 89       	ldd	r27, Z+16	; 0x10
     6ce:	3c 91       	ld	r19, X
     6d0:	02 80       	ldd	r0, Z+2	; 0x02
     6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <_hd44780_l_func+0x1b4>
     6d4:	88 0f       	add	r24, r24
     6d6:	99 1f       	adc	r25, r25
     6d8:	0a 94       	dec	r0
     6da:	e2 f7       	brpl	.-8      	; 0x6d4 <_hd44780_l_func+0x1b0>
     6dc:	80 95       	com	r24
     6de:	83 23       	and	r24, r19
     6e0:	8c 93       	st	X, r24
     6e2:	00 c0       	rjmp	.+0      	; 0x6e4 <_hd44780_l_func+0x1c0>
     6e4:	00 c0       	rjmp	.+0      	; 0x6e6 <_hd44780_l_func+0x1c2>
     6e6:	83 a1       	ldd	r24, Z+35	; 0x23
     6e8:	81 30       	cpi	r24, 0x01	; 1
     6ea:	09 f0       	breq	.+2      	; 0x6ee <_hd44780_l_func+0x1ca>
     6ec:	7d c0       	rjmp	.+250    	; 0x7e8 <_hd44780_l_func+0x2c4>
     6ee:	97 81       	ldd	r25, Z+7	; 0x07
     6f0:	a1 8d       	ldd	r26, Z+25	; 0x19
     6f2:	b2 8d       	ldd	r27, Z+26	; 0x1a
     6f4:	23 fd       	sbrc	r18, 3
     6f6:	0e c0       	rjmp	.+28     	; 0x714 <_hd44780_l_func+0x1f0>
     6f8:	3c 91       	ld	r19, X
     6fa:	41 e0       	ldi	r20, 0x01	; 1
     6fc:	50 e0       	ldi	r21, 0x00	; 0
     6fe:	ba 01       	movw	r22, r20
     700:	02 c0       	rjmp	.+4      	; 0x706 <_hd44780_l_func+0x1e2>
     702:	66 0f       	add	r22, r22
     704:	77 1f       	adc	r23, r23
     706:	9a 95       	dec	r25
     708:	e2 f7       	brpl	.-8      	; 0x702 <_hd44780_l_func+0x1de>
     70a:	cb 01       	movw	r24, r22
     70c:	80 95       	com	r24
     70e:	83 23       	and	r24, r19
     710:	8c 93       	st	X, r24
     712:	0c c0       	rjmp	.+24     	; 0x72c <_hd44780_l_func+0x208>
     714:	3c 91       	ld	r19, X
     716:	41 e0       	ldi	r20, 0x01	; 1
     718:	50 e0       	ldi	r21, 0x00	; 0
     71a:	ea 01       	movw	r28, r20
     71c:	02 c0       	rjmp	.+4      	; 0x722 <_hd44780_l_func+0x1fe>
     71e:	cc 0f       	add	r28, r28
     720:	dd 1f       	adc	r29, r29
     722:	9a 95       	dec	r25
     724:	e2 f7       	brpl	.-8      	; 0x71e <_hd44780_l_func+0x1fa>
     726:	ce 01       	movw	r24, r28
     728:	83 2b       	or	r24, r19
     72a:	8c 93       	st	X, r24
     72c:	90 85       	ldd	r25, Z+8	; 0x08
     72e:	a3 8d       	ldd	r26, Z+27	; 0x1b
     730:	b4 8d       	ldd	r27, Z+28	; 0x1c
     732:	22 fd       	sbrc	r18, 2
     734:	0e c0       	rjmp	.+28     	; 0x752 <_hd44780_l_func+0x22e>
     736:	3c 91       	ld	r19, X
     738:	41 e0       	ldi	r20, 0x01	; 1
     73a:	50 e0       	ldi	r21, 0x00	; 0
     73c:	ba 01       	movw	r22, r20
     73e:	02 c0       	rjmp	.+4      	; 0x744 <_hd44780_l_func+0x220>
     740:	66 0f       	add	r22, r22
     742:	77 1f       	adc	r23, r23
     744:	9a 95       	dec	r25
     746:	e2 f7       	brpl	.-8      	; 0x740 <_hd44780_l_func+0x21c>
     748:	cb 01       	movw	r24, r22
     74a:	80 95       	com	r24
     74c:	83 23       	and	r24, r19
     74e:	8c 93       	st	X, r24
     750:	0c c0       	rjmp	.+24     	; 0x76a <_hd44780_l_func+0x246>
     752:	3c 91       	ld	r19, X
     754:	41 e0       	ldi	r20, 0x01	; 1
     756:	50 e0       	ldi	r21, 0x00	; 0
     758:	ea 01       	movw	r28, r20
     75a:	02 c0       	rjmp	.+4      	; 0x760 <_hd44780_l_func+0x23c>
     75c:	cc 0f       	add	r28, r28
     75e:	dd 1f       	adc	r29, r29
     760:	9a 95       	dec	r25
     762:	e2 f7       	brpl	.-8      	; 0x75c <_hd44780_l_func+0x238>
     764:	ce 01       	movw	r24, r28
     766:	83 2b       	or	r24, r19
     768:	8c 93       	st	X, r24
     76a:	91 85       	ldd	r25, Z+9	; 0x09
     76c:	a5 8d       	ldd	r26, Z+29	; 0x1d
     76e:	b6 8d       	ldd	r27, Z+30	; 0x1e
     770:	21 fd       	sbrc	r18, 1
     772:	0e c0       	rjmp	.+28     	; 0x790 <_hd44780_l_func+0x26c>
     774:	3c 91       	ld	r19, X
     776:	41 e0       	ldi	r20, 0x01	; 1
     778:	50 e0       	ldi	r21, 0x00	; 0
     77a:	ba 01       	movw	r22, r20
     77c:	02 c0       	rjmp	.+4      	; 0x782 <_hd44780_l_func+0x25e>
     77e:	66 0f       	add	r22, r22
     780:	77 1f       	adc	r23, r23
     782:	9a 95       	dec	r25
     784:	e2 f7       	brpl	.-8      	; 0x77e <_hd44780_l_func+0x25a>
     786:	cb 01       	movw	r24, r22
     788:	80 95       	com	r24
     78a:	83 23       	and	r24, r19
     78c:	8c 93       	st	X, r24
     78e:	0c c0       	rjmp	.+24     	; 0x7a8 <_hd44780_l_func+0x284>
     790:	3c 91       	ld	r19, X
     792:	41 e0       	ldi	r20, 0x01	; 1
     794:	50 e0       	ldi	r21, 0x00	; 0
     796:	ea 01       	movw	r28, r20
     798:	02 c0       	rjmp	.+4      	; 0x79e <_hd44780_l_func+0x27a>
     79a:	cc 0f       	add	r28, r28
     79c:	dd 1f       	adc	r29, r29
     79e:	9a 95       	dec	r25
     7a0:	e2 f7       	brpl	.-8      	; 0x79a <_hd44780_l_func+0x276>
     7a2:	ce 01       	movw	r24, r28
     7a4:	83 2b       	or	r24, r19
     7a6:	8c 93       	st	X, r24
     7a8:	92 85       	ldd	r25, Z+10	; 0x0a
     7aa:	a7 8d       	ldd	r26, Z+31	; 0x1f
     7ac:	b0 a1       	ldd	r27, Z+32	; 0x20
     7ae:	20 fd       	sbrc	r18, 0
     7b0:	0e c0       	rjmp	.+28     	; 0x7ce <_hd44780_l_func+0x2aa>
     7b2:	4c 91       	ld	r20, X
     7b4:	21 e0       	ldi	r18, 0x01	; 1
     7b6:	30 e0       	ldi	r19, 0x00	; 0
     7b8:	b9 01       	movw	r22, r18
     7ba:	02 c0       	rjmp	.+4      	; 0x7c0 <_hd44780_l_func+0x29c>
     7bc:	66 0f       	add	r22, r22
     7be:	77 1f       	adc	r23, r23
     7c0:	9a 95       	dec	r25
     7c2:	e2 f7       	brpl	.-8      	; 0x7bc <_hd44780_l_func+0x298>
     7c4:	cb 01       	movw	r24, r22
     7c6:	80 95       	com	r24
     7c8:	84 23       	and	r24, r20
     7ca:	8c 93       	st	X, r24
     7cc:	89 c0       	rjmp	.+274    	; 0x8e0 <_hd44780_l_func+0x3bc>
     7ce:	4c 91       	ld	r20, X
     7d0:	21 e0       	ldi	r18, 0x01	; 1
     7d2:	30 e0       	ldi	r19, 0x00	; 0
     7d4:	e9 01       	movw	r28, r18
     7d6:	02 c0       	rjmp	.+4      	; 0x7dc <_hd44780_l_func+0x2b8>
     7d8:	cc 0f       	add	r28, r28
     7da:	dd 1f       	adc	r29, r29
     7dc:	9a 95       	dec	r25
     7de:	e2 f7       	brpl	.-8      	; 0x7d8 <_hd44780_l_func+0x2b4>
     7e0:	ce 01       	movw	r24, r28
     7e2:	84 2b       	or	r24, r20
     7e4:	8c 93       	st	X, r24
     7e6:	7c c0       	rjmp	.+248    	; 0x8e0 <_hd44780_l_func+0x3bc>
     7e8:	93 81       	ldd	r25, Z+3	; 0x03
     7ea:	a1 89       	ldd	r26, Z+17	; 0x11
     7ec:	b2 89       	ldd	r27, Z+18	; 0x12
     7ee:	23 fd       	sbrc	r18, 3
     7f0:	0e c0       	rjmp	.+28     	; 0x80e <_hd44780_l_func+0x2ea>
     7f2:	3c 91       	ld	r19, X
     7f4:	41 e0       	ldi	r20, 0x01	; 1
     7f6:	50 e0       	ldi	r21, 0x00	; 0
     7f8:	ba 01       	movw	r22, r20
     7fa:	02 c0       	rjmp	.+4      	; 0x800 <_hd44780_l_func+0x2dc>
     7fc:	66 0f       	add	r22, r22
     7fe:	77 1f       	adc	r23, r23
     800:	9a 95       	dec	r25
     802:	e2 f7       	brpl	.-8      	; 0x7fc <_hd44780_l_func+0x2d8>
     804:	cb 01       	movw	r24, r22
     806:	80 95       	com	r24
     808:	83 23       	and	r24, r19
     80a:	8c 93       	st	X, r24
     80c:	0c c0       	rjmp	.+24     	; 0x826 <_hd44780_l_func+0x302>
     80e:	3c 91       	ld	r19, X
     810:	41 e0       	ldi	r20, 0x01	; 1
     812:	50 e0       	ldi	r21, 0x00	; 0
     814:	ea 01       	movw	r28, r20
     816:	02 c0       	rjmp	.+4      	; 0x81c <_hd44780_l_func+0x2f8>
     818:	cc 0f       	add	r28, r28
     81a:	dd 1f       	adc	r29, r29
     81c:	9a 95       	dec	r25
     81e:	e2 f7       	brpl	.-8      	; 0x818 <_hd44780_l_func+0x2f4>
     820:	ce 01       	movw	r24, r28
     822:	83 2b       	or	r24, r19
     824:	8c 93       	st	X, r24
     826:	94 81       	ldd	r25, Z+4	; 0x04
     828:	a3 89       	ldd	r26, Z+19	; 0x13
     82a:	b4 89       	ldd	r27, Z+20	; 0x14
     82c:	22 fd       	sbrc	r18, 2
     82e:	0e c0       	rjmp	.+28     	; 0x84c <_hd44780_l_func+0x328>
     830:	3c 91       	ld	r19, X
     832:	41 e0       	ldi	r20, 0x01	; 1
     834:	50 e0       	ldi	r21, 0x00	; 0
     836:	ba 01       	movw	r22, r20
     838:	02 c0       	rjmp	.+4      	; 0x83e <_hd44780_l_func+0x31a>
     83a:	66 0f       	add	r22, r22
     83c:	77 1f       	adc	r23, r23
     83e:	9a 95       	dec	r25
     840:	e2 f7       	brpl	.-8      	; 0x83a <_hd44780_l_func+0x316>
     842:	cb 01       	movw	r24, r22
     844:	80 95       	com	r24
     846:	83 23       	and	r24, r19
     848:	8c 93       	st	X, r24
     84a:	0c c0       	rjmp	.+24     	; 0x864 <_hd44780_l_func+0x340>
     84c:	3c 91       	ld	r19, X
     84e:	41 e0       	ldi	r20, 0x01	; 1
     850:	50 e0       	ldi	r21, 0x00	; 0
     852:	ea 01       	movw	r28, r20
     854:	02 c0       	rjmp	.+4      	; 0x85a <_hd44780_l_func+0x336>
     856:	cc 0f       	add	r28, r28
     858:	dd 1f       	adc	r29, r29
     85a:	9a 95       	dec	r25
     85c:	e2 f7       	brpl	.-8      	; 0x856 <_hd44780_l_func+0x332>
     85e:	ce 01       	movw	r24, r28
     860:	83 2b       	or	r24, r19
     862:	8c 93       	st	X, r24
     864:	95 81       	ldd	r25, Z+5	; 0x05
     866:	a5 89       	ldd	r26, Z+21	; 0x15
     868:	b6 89       	ldd	r27, Z+22	; 0x16
     86a:	21 fd       	sbrc	r18, 1
     86c:	0e c0       	rjmp	.+28     	; 0x88a <_hd44780_l_func+0x366>
     86e:	3c 91       	ld	r19, X
     870:	41 e0       	ldi	r20, 0x01	; 1
     872:	50 e0       	ldi	r21, 0x00	; 0
     874:	ba 01       	movw	r22, r20
     876:	02 c0       	rjmp	.+4      	; 0x87c <_hd44780_l_func+0x358>
     878:	66 0f       	add	r22, r22
     87a:	77 1f       	adc	r23, r23
     87c:	9a 95       	dec	r25
     87e:	e2 f7       	brpl	.-8      	; 0x878 <_hd44780_l_func+0x354>
     880:	cb 01       	movw	r24, r22
     882:	80 95       	com	r24
     884:	83 23       	and	r24, r19
     886:	8c 93       	st	X, r24
     888:	0c c0       	rjmp	.+24     	; 0x8a2 <_hd44780_l_func+0x37e>
     88a:	3c 91       	ld	r19, X
     88c:	41 e0       	ldi	r20, 0x01	; 1
     88e:	50 e0       	ldi	r21, 0x00	; 0
     890:	ea 01       	movw	r28, r20
     892:	02 c0       	rjmp	.+4      	; 0x898 <_hd44780_l_func+0x374>
     894:	cc 0f       	add	r28, r28
     896:	dd 1f       	adc	r29, r29
     898:	9a 95       	dec	r25
     89a:	e2 f7       	brpl	.-8      	; 0x894 <_hd44780_l_func+0x370>
     89c:	ce 01       	movw	r24, r28
     89e:	83 2b       	or	r24, r19
     8a0:	8c 93       	st	X, r24
     8a2:	96 81       	ldd	r25, Z+6	; 0x06
     8a4:	a7 89       	ldd	r26, Z+23	; 0x17
     8a6:	b0 8d       	ldd	r27, Z+24	; 0x18
     8a8:	20 fd       	sbrc	r18, 0
     8aa:	0e c0       	rjmp	.+28     	; 0x8c8 <_hd44780_l_func+0x3a4>
     8ac:	4c 91       	ld	r20, X
     8ae:	21 e0       	ldi	r18, 0x01	; 1
     8b0:	30 e0       	ldi	r19, 0x00	; 0
     8b2:	b9 01       	movw	r22, r18
     8b4:	02 c0       	rjmp	.+4      	; 0x8ba <_hd44780_l_func+0x396>
     8b6:	66 0f       	add	r22, r22
     8b8:	77 1f       	adc	r23, r23
     8ba:	9a 95       	dec	r25
     8bc:	e2 f7       	brpl	.-8      	; 0x8b6 <_hd44780_l_func+0x392>
     8be:	cb 01       	movw	r24, r22
     8c0:	80 95       	com	r24
     8c2:	84 23       	and	r24, r20
     8c4:	8c 93       	st	X, r24
     8c6:	0c c0       	rjmp	.+24     	; 0x8e0 <_hd44780_l_func+0x3bc>
     8c8:	4c 91       	ld	r20, X
     8ca:	21 e0       	ldi	r18, 0x01	; 1
     8cc:	30 e0       	ldi	r19, 0x00	; 0
     8ce:	e9 01       	movw	r28, r18
     8d0:	02 c0       	rjmp	.+4      	; 0x8d6 <_hd44780_l_func+0x3b2>
     8d2:	cc 0f       	add	r28, r28
     8d4:	dd 1f       	adc	r29, r29
     8d6:	9a 95       	dec	r25
     8d8:	e2 f7       	brpl	.-8      	; 0x8d2 <_hd44780_l_func+0x3ae>
     8da:	ce 01       	movw	r24, r28
     8dc:	84 2b       	or	r24, r20
     8de:	8c 93       	st	X, r24
     8e0:	00 c0       	rjmp	.+0      	; 0x8e2 <_hd44780_l_func+0x3be>
     8e2:	a7 85       	ldd	r26, Z+15	; 0x0f
     8e4:	b0 89       	ldd	r27, Z+16	; 0x10
     8e6:	4c 91       	ld	r20, X
     8e8:	81 e0       	ldi	r24, 0x01	; 1
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	9c 01       	movw	r18, r24
     8ee:	02 80       	ldd	r0, Z+2	; 0x02
     8f0:	02 c0       	rjmp	.+4      	; 0x8f6 <_hd44780_l_func+0x3d2>
     8f2:	22 0f       	add	r18, r18
     8f4:	33 1f       	adc	r19, r19
     8f6:	0a 94       	dec	r0
     8f8:	e2 f7       	brpl	.-8      	; 0x8f2 <_hd44780_l_func+0x3ce>
     8fa:	24 2b       	or	r18, r20
     8fc:	2c 93       	st	X, r18
     8fe:	00 c0       	rjmp	.+0      	; 0x900 <_hd44780_l_func+0x3dc>
     900:	00 c0       	rjmp	.+0      	; 0x902 <_hd44780_l_func+0x3de>
     902:	a7 85       	ldd	r26, Z+15	; 0x0f
     904:	b0 89       	ldd	r27, Z+16	; 0x10
     906:	2c 91       	ld	r18, X
     908:	02 80       	ldd	r0, Z+2	; 0x02
     90a:	02 c0       	rjmp	.+4      	; 0x910 <_hd44780_l_func+0x3ec>
     90c:	88 0f       	add	r24, r24
     90e:	99 1f       	adc	r25, r25
     910:	0a 94       	dec	r0
     912:	e2 f7       	brpl	.-8      	; 0x90c <_hd44780_l_func+0x3e8>
     914:	80 95       	com	r24
     916:	82 23       	and	r24, r18
     918:	8c 93       	st	X, r24
     91a:	00 c0       	rjmp	.+0      	; 0x91c <_hd44780_l_func+0x3f8>
     91c:	00 c0       	rjmp	.+0      	; 0x91e <_hd44780_l_func+0x3fa>
     91e:	01 15       	cp	r16, r1
     920:	11 05       	cpc	r17, r1
     922:	49 f0       	breq	.+18     	; 0x936 <_hd44780_l_func+0x412>
     924:	80 e0       	ldi	r24, 0x00	; 0
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	d5 e0       	ldi	r29, 0x05	; 5
     92a:	da 95       	dec	r29
     92c:	f1 f7       	brne	.-4      	; 0x92a <_hd44780_l_func+0x406>
     92e:	01 96       	adiw	r24, 0x01	; 1
     930:	80 17       	cp	r24, r16
     932:	91 07       	cpc	r25, r17
     934:	c9 f7       	brne	.-14     	; 0x928 <_hd44780_l_func+0x404>
     936:	df 91       	pop	r29
     938:	cf 91       	pop	r28
     93a:	1f 91       	pop	r17
     93c:	0f 91       	pop	r16
     93e:	08 95       	ret

00000940 <hd44780_l_clear_disp>:
     940:	0f 93       	push	r16
     942:	1f 93       	push	r17
     944:	08 e6       	ldi	r16, 0x68	; 104
     946:	16 e0       	ldi	r17, 0x06	; 6
     948:	21 e0       	ldi	r18, 0x01	; 1
     94a:	40 e0       	ldi	r20, 0x00	; 0
     94c:	60 e0       	ldi	r22, 0x00	; 0
     94e:	ea dd       	rcall	.-1068   	; 0x524 <_hd44780_l_func>
     950:	1f 91       	pop	r17
     952:	0f 91       	pop	r16
     954:	08 95       	ret

00000956 <hd44780_l_ems>:
     956:	0f 93       	push	r16
     958:	1f 93       	push	r17
     95a:	e6 2f       	mov	r30, r22
     95c:	f0 e0       	ldi	r31, 0x00	; 0
     95e:	bf 01       	movw	r22, r30
     960:	66 0f       	add	r22, r22
     962:	77 1f       	adc	r23, r23
     964:	64 60       	ori	r22, 0x04	; 4
     966:	24 2f       	mov	r18, r20
     968:	26 2b       	or	r18, r22
     96a:	08 e2       	ldi	r16, 0x28	; 40
     96c:	10 e0       	ldi	r17, 0x00	; 0
     96e:	40 e0       	ldi	r20, 0x00	; 0
     970:	60 e0       	ldi	r22, 0x00	; 0
     972:	d8 dd       	rcall	.-1104   	; 0x524 <_hd44780_l_func>
     974:	1f 91       	pop	r17
     976:	0f 91       	pop	r16
     978:	08 95       	ret

0000097a <hd44780_l_disp>:
     97a:	0f 93       	push	r16
     97c:	1f 93       	push	r17
     97e:	e6 2f       	mov	r30, r22
     980:	f0 e0       	ldi	r31, 0x00	; 0
     982:	bf 01       	movw	r22, r30
     984:	66 0f       	add	r22, r22
     986:	77 1f       	adc	r23, r23
     988:	66 0f       	add	r22, r22
     98a:	77 1f       	adc	r23, r23
     98c:	68 60       	ori	r22, 0x08	; 8
     98e:	44 0f       	add	r20, r20
     990:	64 2b       	or	r22, r20
     992:	26 2b       	or	r18, r22
     994:	08 e2       	ldi	r16, 0x28	; 40
     996:	10 e0       	ldi	r17, 0x00	; 0
     998:	40 e0       	ldi	r20, 0x00	; 0
     99a:	60 e0       	ldi	r22, 0x00	; 0
     99c:	c3 dd       	rcall	.-1146   	; 0x524 <_hd44780_l_func>
     99e:	1f 91       	pop	r17
     9a0:	0f 91       	pop	r16
     9a2:	08 95       	ret

000009a4 <hd44780_l_fs>:
     9a4:	0f 93       	push	r16
     9a6:	1f 93       	push	r17
     9a8:	44 0f       	add	r20, r20
     9aa:	44 0f       	add	r20, r20
     9ac:	44 0f       	add	r20, r20
     9ae:	30 e1       	ldi	r19, 0x10	; 16
     9b0:	63 9f       	mul	r22, r19
     9b2:	b0 01       	movw	r22, r0
     9b4:	11 24       	eor	r1, r1
     9b6:	60 62       	ori	r22, 0x20	; 32
     9b8:	64 2b       	or	r22, r20
     9ba:	22 0f       	add	r18, r18
     9bc:	22 0f       	add	r18, r18
     9be:	26 2b       	or	r18, r22
     9c0:	08 e2       	ldi	r16, 0x28	; 40
     9c2:	10 e0       	ldi	r17, 0x00	; 0
     9c4:	40 e0       	ldi	r20, 0x00	; 0
     9c6:	60 e0       	ldi	r22, 0x00	; 0
     9c8:	ad dd       	rcall	.-1190   	; 0x524 <_hd44780_l_func>
     9ca:	1f 91       	pop	r17
     9cc:	0f 91       	pop	r16
     9ce:	08 95       	ret

000009d0 <hd44780_l_write>:
     9d0:	0f 93       	push	r16
     9d2:	1f 93       	push	r17
     9d4:	26 2f       	mov	r18, r22
     9d6:	0d e2       	ldi	r16, 0x2D	; 45
     9d8:	10 e0       	ldi	r17, 0x00	; 0
     9da:	40 e0       	ldi	r20, 0x00	; 0
     9dc:	61 e0       	ldi	r22, 0x01	; 1
     9de:	a2 dd       	rcall	.-1212   	; 0x524 <_hd44780_l_func>
     9e0:	1f 91       	pop	r17
     9e2:	0f 91       	pop	r16
     9e4:	08 95       	ret

000009e6 <hd44780_l_init>:
     9e6:	0f 93       	push	r16
     9e8:	1f 93       	push	r17
     9ea:	cf 93       	push	r28
     9ec:	df 93       	push	r29
     9ee:	ec 01       	movw	r28, r24
     9f0:	12 2f       	mov	r17, r18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9f2:	8f ef       	ldi	r24, 0xFF	; 255
     9f4:	97 ed       	ldi	r25, 0xD7	; 215
     9f6:	01 97       	sbiw	r24, 0x01	; 1
     9f8:	f1 f7       	brne	.-4      	; 0x9f6 <hd44780_l_init+0x10>
     9fa:	00 c0       	rjmp	.+0      	; 0x9fc <hd44780_l_init+0x16>
     9fc:	00 00       	nop
     9fe:	eb 85       	ldd	r30, Y+11	; 0x0b
     a00:	fc 85       	ldd	r31, Y+12	; 0x0c
     a02:	50 81       	ld	r21, Z
     a04:	81 e0       	ldi	r24, 0x01	; 1
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	9c 01       	movw	r18, r24
     a0a:	08 80       	ld	r0, Y
     a0c:	02 c0       	rjmp	.+4      	; 0xa12 <hd44780_l_init+0x2c>
     a0e:	22 0f       	add	r18, r18
     a10:	33 1f       	adc	r19, r19
     a12:	0a 94       	dec	r0
     a14:	e2 f7       	brpl	.-8      	; 0xa0e <hd44780_l_init+0x28>
     a16:	20 95       	com	r18
     a18:	25 23       	and	r18, r21
     a1a:	20 83       	st	Z, r18
     a1c:	ed 85       	ldd	r30, Y+13	; 0x0d
     a1e:	fe 85       	ldd	r31, Y+14	; 0x0e
     a20:	50 81       	ld	r21, Z
     a22:	9c 01       	movw	r18, r24
     a24:	09 80       	ldd	r0, Y+1	; 0x01
     a26:	02 c0       	rjmp	.+4      	; 0xa2c <hd44780_l_init+0x46>
     a28:	22 0f       	add	r18, r18
     a2a:	33 1f       	adc	r19, r19
     a2c:	0a 94       	dec	r0
     a2e:	e2 f7       	brpl	.-8      	; 0xa28 <hd44780_l_init+0x42>
     a30:	20 95       	com	r18
     a32:	25 23       	and	r18, r21
     a34:	20 83       	st	Z, r18
     a36:	ef 85       	ldd	r30, Y+15	; 0x0f
     a38:	f8 89       	ldd	r31, Y+16	; 0x10
     a3a:	50 81       	ld	r21, Z
     a3c:	9c 01       	movw	r18, r24
     a3e:	0a 80       	ldd	r0, Y+2	; 0x02
     a40:	02 c0       	rjmp	.+4      	; 0xa46 <hd44780_l_init+0x60>
     a42:	22 0f       	add	r18, r18
     a44:	33 1f       	adc	r19, r19
     a46:	0a 94       	dec	r0
     a48:	e2 f7       	brpl	.-8      	; 0xa42 <hd44780_l_init+0x5c>
     a4a:	20 95       	com	r18
     a4c:	25 23       	and	r18, r21
     a4e:	20 83       	st	Z, r18
     a50:	e9 89       	ldd	r30, Y+17	; 0x11
     a52:	fa 89       	ldd	r31, Y+18	; 0x12
     a54:	50 81       	ld	r21, Z
     a56:	9c 01       	movw	r18, r24
     a58:	0b 80       	ldd	r0, Y+3	; 0x03
     a5a:	02 c0       	rjmp	.+4      	; 0xa60 <hd44780_l_init+0x7a>
     a5c:	22 0f       	add	r18, r18
     a5e:	33 1f       	adc	r19, r19
     a60:	0a 94       	dec	r0
     a62:	e2 f7       	brpl	.-8      	; 0xa5c <hd44780_l_init+0x76>
     a64:	20 95       	com	r18
     a66:	25 23       	and	r18, r21
     a68:	20 83       	st	Z, r18
     a6a:	eb 89       	ldd	r30, Y+19	; 0x13
     a6c:	fc 89       	ldd	r31, Y+20	; 0x14
     a6e:	50 81       	ld	r21, Z
     a70:	9c 01       	movw	r18, r24
     a72:	0c 80       	ldd	r0, Y+4	; 0x04
     a74:	02 c0       	rjmp	.+4      	; 0xa7a <hd44780_l_init+0x94>
     a76:	22 0f       	add	r18, r18
     a78:	33 1f       	adc	r19, r19
     a7a:	0a 94       	dec	r0
     a7c:	e2 f7       	brpl	.-8      	; 0xa76 <hd44780_l_init+0x90>
     a7e:	20 95       	com	r18
     a80:	25 23       	and	r18, r21
     a82:	20 83       	st	Z, r18
     a84:	ed 89       	ldd	r30, Y+21	; 0x15
     a86:	fe 89       	ldd	r31, Y+22	; 0x16
     a88:	50 81       	ld	r21, Z
     a8a:	9c 01       	movw	r18, r24
     a8c:	0d 80       	ldd	r0, Y+5	; 0x05
     a8e:	02 c0       	rjmp	.+4      	; 0xa94 <hd44780_l_init+0xae>
     a90:	22 0f       	add	r18, r18
     a92:	33 1f       	adc	r19, r19
     a94:	0a 94       	dec	r0
     a96:	e2 f7       	brpl	.-8      	; 0xa90 <hd44780_l_init+0xaa>
     a98:	20 95       	com	r18
     a9a:	25 23       	and	r18, r21
     a9c:	20 83       	st	Z, r18
     a9e:	ef 89       	ldd	r30, Y+23	; 0x17
     aa0:	f8 8d       	ldd	r31, Y+24	; 0x18
     aa2:	20 81       	ld	r18, Z
     aa4:	0e 80       	ldd	r0, Y+6	; 0x06
     aa6:	02 c0       	rjmp	.+4      	; 0xaac <hd44780_l_init+0xc6>
     aa8:	88 0f       	add	r24, r24
     aaa:	99 1f       	adc	r25, r25
     aac:	0a 94       	dec	r0
     aae:	e2 f7       	brpl	.-8      	; 0xaa8 <hd44780_l_init+0xc2>
     ab0:	80 95       	com	r24
     ab2:	82 23       	and	r24, r18
     ab4:	80 83       	st	Z, r24
     ab6:	8b a1       	ldd	r24, Y+35	; 0x23
     ab8:	81 30       	cpi	r24, 0x01	; 1
     aba:	a9 f5       	brne	.+106    	; 0xb26 <hd44780_l_init+0x140>
     abc:	e9 8d       	ldd	r30, Y+25	; 0x19
     abe:	fa 8d       	ldd	r31, Y+26	; 0x1a
     ac0:	50 81       	ld	r21, Z
     ac2:	81 e0       	ldi	r24, 0x01	; 1
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	9c 01       	movw	r18, r24
     ac8:	0f 80       	ldd	r0, Y+7	; 0x07
     aca:	02 c0       	rjmp	.+4      	; 0xad0 <hd44780_l_init+0xea>
     acc:	22 0f       	add	r18, r18
     ace:	33 1f       	adc	r19, r19
     ad0:	0a 94       	dec	r0
     ad2:	e2 f7       	brpl	.-8      	; 0xacc <hd44780_l_init+0xe6>
     ad4:	20 95       	com	r18
     ad6:	25 23       	and	r18, r21
     ad8:	20 83       	st	Z, r18
     ada:	eb 8d       	ldd	r30, Y+27	; 0x1b
     adc:	fc 8d       	ldd	r31, Y+28	; 0x1c
     ade:	50 81       	ld	r21, Z
     ae0:	9c 01       	movw	r18, r24
     ae2:	08 84       	ldd	r0, Y+8	; 0x08
     ae4:	02 c0       	rjmp	.+4      	; 0xaea <hd44780_l_init+0x104>
     ae6:	22 0f       	add	r18, r18
     ae8:	33 1f       	adc	r19, r19
     aea:	0a 94       	dec	r0
     aec:	e2 f7       	brpl	.-8      	; 0xae6 <hd44780_l_init+0x100>
     aee:	20 95       	com	r18
     af0:	25 23       	and	r18, r21
     af2:	20 83       	st	Z, r18
     af4:	ed 8d       	ldd	r30, Y+29	; 0x1d
     af6:	fe 8d       	ldd	r31, Y+30	; 0x1e
     af8:	50 81       	ld	r21, Z
     afa:	9c 01       	movw	r18, r24
     afc:	09 84       	ldd	r0, Y+9	; 0x09
     afe:	02 c0       	rjmp	.+4      	; 0xb04 <hd44780_l_init+0x11e>
     b00:	22 0f       	add	r18, r18
     b02:	33 1f       	adc	r19, r19
     b04:	0a 94       	dec	r0
     b06:	e2 f7       	brpl	.-8      	; 0xb00 <hd44780_l_init+0x11a>
     b08:	20 95       	com	r18
     b0a:	25 23       	and	r18, r21
     b0c:	20 83       	st	Z, r18
     b0e:	ef 8d       	ldd	r30, Y+31	; 0x1f
     b10:	f8 a1       	ldd	r31, Y+32	; 0x20
     b12:	20 81       	ld	r18, Z
     b14:	0a 84       	ldd	r0, Y+10	; 0x0a
     b16:	02 c0       	rjmp	.+4      	; 0xb1c <hd44780_l_init+0x136>
     b18:	88 0f       	add	r24, r24
     b1a:	99 1f       	adc	r25, r25
     b1c:	0a 94       	dec	r0
     b1e:	e2 f7       	brpl	.-8      	; 0xb18 <hd44780_l_init+0x132>
     b20:	80 95       	com	r24
     b22:	82 23       	and	r24, r18
     b24:	80 83       	st	Z, r24
     b26:	ed 89       	ldd	r30, Y+21	; 0x15
     b28:	fe 89       	ldd	r31, Y+22	; 0x16
     b2a:	50 81       	ld	r21, Z
     b2c:	81 e0       	ldi	r24, 0x01	; 1
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	9c 01       	movw	r18, r24
     b32:	0d 80       	ldd	r0, Y+5	; 0x05
     b34:	02 c0       	rjmp	.+4      	; 0xb3a <hd44780_l_init+0x154>
     b36:	22 0f       	add	r18, r18
     b38:	33 1f       	adc	r19, r19
     b3a:	0a 94       	dec	r0
     b3c:	e2 f7       	brpl	.-8      	; 0xb36 <hd44780_l_init+0x150>
     b3e:	25 2b       	or	r18, r21
     b40:	20 83       	st	Z, r18
     b42:	ef 89       	ldd	r30, Y+23	; 0x17
     b44:	f8 8d       	ldd	r31, Y+24	; 0x18
     b46:	50 81       	ld	r21, Z
     b48:	9c 01       	movw	r18, r24
     b4a:	0e 80       	ldd	r0, Y+6	; 0x06
     b4c:	02 c0       	rjmp	.+4      	; 0xb52 <hd44780_l_init+0x16c>
     b4e:	22 0f       	add	r18, r18
     b50:	33 1f       	adc	r19, r19
     b52:	0a 94       	dec	r0
     b54:	e2 f7       	brpl	.-8      	; 0xb4e <hd44780_l_init+0x168>
     b56:	25 2b       	or	r18, r21
     b58:	20 83       	st	Z, r18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b5a:	00 c0       	rjmp	.+0      	; 0xb5c <hd44780_l_init+0x176>
     b5c:	ef 85       	ldd	r30, Y+15	; 0x0f
     b5e:	f8 89       	ldd	r31, Y+16	; 0x10
     b60:	50 81       	ld	r21, Z
     b62:	9c 01       	movw	r18, r24
     b64:	0a 80       	ldd	r0, Y+2	; 0x02
     b66:	02 c0       	rjmp	.+4      	; 0xb6c <hd44780_l_init+0x186>
     b68:	22 0f       	add	r18, r18
     b6a:	33 1f       	adc	r19, r19
     b6c:	0a 94       	dec	r0
     b6e:	e2 f7       	brpl	.-8      	; 0xb68 <hd44780_l_init+0x182>
     b70:	25 2b       	or	r18, r21
     b72:	20 83       	st	Z, r18
     b74:	00 c0       	rjmp	.+0      	; 0xb76 <hd44780_l_init+0x190>
     b76:	00 c0       	rjmp	.+0      	; 0xb78 <hd44780_l_init+0x192>
     b78:	ef 85       	ldd	r30, Y+15	; 0x0f
     b7a:	f8 89       	ldd	r31, Y+16	; 0x10
     b7c:	50 81       	ld	r21, Z
     b7e:	9c 01       	movw	r18, r24
     b80:	0a 80       	ldd	r0, Y+2	; 0x02
     b82:	02 c0       	rjmp	.+4      	; 0xb88 <hd44780_l_init+0x1a2>
     b84:	22 0f       	add	r18, r18
     b86:	33 1f       	adc	r19, r19
     b88:	0a 94       	dec	r0
     b8a:	e2 f7       	brpl	.-8      	; 0xb84 <hd44780_l_init+0x19e>
     b8c:	20 95       	com	r18
     b8e:	25 23       	and	r18, r21
     b90:	20 83       	st	Z, r18
     b92:	00 c0       	rjmp	.+0      	; 0xb94 <hd44780_l_init+0x1ae>
     b94:	00 c0       	rjmp	.+0      	; 0xb96 <hd44780_l_init+0x1b0>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b96:	ea e0       	ldi	r30, 0x0A	; 10
     b98:	fb e3       	ldi	r31, 0x3B	; 59
     b9a:	31 97       	sbiw	r30, 0x01	; 1
     b9c:	f1 f7       	brne	.-4      	; 0xb9a <hd44780_l_init+0x1b4>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b9e:	00 c0       	rjmp	.+0      	; 0xba0 <hd44780_l_init+0x1ba>
     ba0:	ef 85       	ldd	r30, Y+15	; 0x0f
     ba2:	f8 89       	ldd	r31, Y+16	; 0x10
     ba4:	50 81       	ld	r21, Z
     ba6:	9c 01       	movw	r18, r24
     ba8:	0a 80       	ldd	r0, Y+2	; 0x02
     baa:	02 c0       	rjmp	.+4      	; 0xbb0 <hd44780_l_init+0x1ca>
     bac:	22 0f       	add	r18, r18
     bae:	33 1f       	adc	r19, r19
     bb0:	0a 94       	dec	r0
     bb2:	e2 f7       	brpl	.-8      	; 0xbac <hd44780_l_init+0x1c6>
     bb4:	25 2b       	or	r18, r21
     bb6:	20 83       	st	Z, r18
     bb8:	00 c0       	rjmp	.+0      	; 0xbba <hd44780_l_init+0x1d4>
     bba:	00 c0       	rjmp	.+0      	; 0xbbc <hd44780_l_init+0x1d6>
     bbc:	ef 85       	ldd	r30, Y+15	; 0x0f
     bbe:	f8 89       	ldd	r31, Y+16	; 0x10
     bc0:	50 81       	ld	r21, Z
     bc2:	9c 01       	movw	r18, r24
     bc4:	0a 80       	ldd	r0, Y+2	; 0x02
     bc6:	02 c0       	rjmp	.+4      	; 0xbcc <hd44780_l_init+0x1e6>
     bc8:	22 0f       	add	r18, r18
     bca:	33 1f       	adc	r19, r19
     bcc:	0a 94       	dec	r0
     bce:	e2 f7       	brpl	.-8      	; 0xbc8 <hd44780_l_init+0x1e2>
     bd0:	20 95       	com	r18
     bd2:	25 23       	and	r18, r21
     bd4:	20 83       	st	Z, r18
     bd6:	00 c0       	rjmp	.+0      	; 0xbd8 <hd44780_l_init+0x1f2>
     bd8:	00 c0       	rjmp	.+0      	; 0xbda <hd44780_l_init+0x1f4>
     bda:	e0 e7       	ldi	r30, 0x70	; 112
     bdc:	f1 e0       	ldi	r31, 0x01	; 1
     bde:	31 97       	sbiw	r30, 0x01	; 1
     be0:	f1 f7       	brne	.-4      	; 0xbde <hd44780_l_init+0x1f8>
     be2:	00 c0       	rjmp	.+0      	; 0xbe4 <hd44780_l_init+0x1fe>
     be4:	00 c0       	rjmp	.+0      	; 0xbe6 <hd44780_l_init+0x200>
     be6:	ef 85       	ldd	r30, Y+15	; 0x0f
     be8:	f8 89       	ldd	r31, Y+16	; 0x10
     bea:	50 81       	ld	r21, Z
     bec:	9c 01       	movw	r18, r24
     bee:	0a 80       	ldd	r0, Y+2	; 0x02
     bf0:	02 c0       	rjmp	.+4      	; 0xbf6 <hd44780_l_init+0x210>
     bf2:	22 0f       	add	r18, r18
     bf4:	33 1f       	adc	r19, r19
     bf6:	0a 94       	dec	r0
     bf8:	e2 f7       	brpl	.-8      	; 0xbf2 <hd44780_l_init+0x20c>
     bfa:	25 2b       	or	r18, r21
     bfc:	20 83       	st	Z, r18
     bfe:	00 c0       	rjmp	.+0      	; 0xc00 <hd44780_l_init+0x21a>
     c00:	00 c0       	rjmp	.+0      	; 0xc02 <hd44780_l_init+0x21c>
     c02:	ef 85       	ldd	r30, Y+15	; 0x0f
     c04:	f8 89       	ldd	r31, Y+16	; 0x10
     c06:	20 81       	ld	r18, Z
     c08:	0a 80       	ldd	r0, Y+2	; 0x02
     c0a:	02 c0       	rjmp	.+4      	; 0xc10 <hd44780_l_init+0x22a>
     c0c:	88 0f       	add	r24, r24
     c0e:	99 1f       	adc	r25, r25
     c10:	0a 94       	dec	r0
     c12:	e2 f7       	brpl	.-8      	; 0xc0c <hd44780_l_init+0x226>
     c14:	80 95       	com	r24
     c16:	82 23       	and	r24, r18
     c18:	80 83       	st	Z, r24
     c1a:	00 c0       	rjmp	.+0      	; 0xc1c <hd44780_l_init+0x236>
     c1c:	00 c0       	rjmp	.+0      	; 0xc1e <hd44780_l_init+0x238>
     c1e:	8b a1       	ldd	r24, Y+35	; 0x23
     c20:	81 11       	cpse	r24, r1
     c22:	2c c0       	rjmp	.+88     	; 0xc7c <hd44780_l_init+0x296>
     c24:	ef 89       	ldd	r30, Y+23	; 0x17
     c26:	f8 8d       	ldd	r31, Y+24	; 0x18
     c28:	50 81       	ld	r21, Z
     c2a:	81 e0       	ldi	r24, 0x01	; 1
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	9c 01       	movw	r18, r24
     c30:	0e 80       	ldd	r0, Y+6	; 0x06
     c32:	02 c0       	rjmp	.+4      	; 0xc38 <hd44780_l_init+0x252>
     c34:	22 0f       	add	r18, r18
     c36:	33 1f       	adc	r19, r19
     c38:	0a 94       	dec	r0
     c3a:	e2 f7       	brpl	.-8      	; 0xc34 <hd44780_l_init+0x24e>
     c3c:	20 95       	com	r18
     c3e:	25 23       	and	r18, r21
     c40:	20 83       	st	Z, r18
     c42:	00 c0       	rjmp	.+0      	; 0xc44 <hd44780_l_init+0x25e>
     c44:	ef 85       	ldd	r30, Y+15	; 0x0f
     c46:	f8 89       	ldd	r31, Y+16	; 0x10
     c48:	50 81       	ld	r21, Z
     c4a:	9c 01       	movw	r18, r24
     c4c:	0a 80       	ldd	r0, Y+2	; 0x02
     c4e:	02 c0       	rjmp	.+4      	; 0xc54 <hd44780_l_init+0x26e>
     c50:	22 0f       	add	r18, r18
     c52:	33 1f       	adc	r19, r19
     c54:	0a 94       	dec	r0
     c56:	e2 f7       	brpl	.-8      	; 0xc50 <hd44780_l_init+0x26a>
     c58:	25 2b       	or	r18, r21
     c5a:	20 83       	st	Z, r18
     c5c:	00 c0       	rjmp	.+0      	; 0xc5e <hd44780_l_init+0x278>
     c5e:	00 c0       	rjmp	.+0      	; 0xc60 <hd44780_l_init+0x27a>
     c60:	ef 85       	ldd	r30, Y+15	; 0x0f
     c62:	f8 89       	ldd	r31, Y+16	; 0x10
     c64:	20 81       	ld	r18, Z
     c66:	0a 80       	ldd	r0, Y+2	; 0x02
     c68:	02 c0       	rjmp	.+4      	; 0xc6e <hd44780_l_init+0x288>
     c6a:	88 0f       	add	r24, r24
     c6c:	99 1f       	adc	r25, r25
     c6e:	0a 94       	dec	r0
     c70:	e2 f7       	brpl	.-8      	; 0xc6a <hd44780_l_init+0x284>
     c72:	80 95       	com	r24
     c74:	82 23       	and	r24, r18
     c76:	80 83       	st	Z, r24
     c78:	00 c0       	rjmp	.+0      	; 0xc7a <hd44780_l_init+0x294>
     c7a:	00 c0       	rjmp	.+0      	; 0xc7c <hd44780_l_init+0x296>
     c7c:	24 2f       	mov	r18, r20
     c7e:	46 2f       	mov	r20, r22
     c80:	6b a1       	ldd	r22, Y+35	; 0x23
     c82:	ce 01       	movw	r24, r28
     c84:	8f de       	rcall	.-738    	; 0x9a4 <hd44780_l_fs>
     c86:	20 e0       	ldi	r18, 0x00	; 0
     c88:	40 e0       	ldi	r20, 0x00	; 0
     c8a:	60 e0       	ldi	r22, 0x00	; 0
     c8c:	ce 01       	movw	r24, r28
     c8e:	75 de       	rcall	.-790    	; 0x97a <hd44780_l_disp>
     c90:	ce 01       	movw	r24, r28
     c92:	56 de       	rcall	.-852    	; 0x940 <hd44780_l_clear_disp>
     c94:	40 2f       	mov	r20, r16
     c96:	61 2f       	mov	r22, r17
     c98:	ce 01       	movw	r24, r28
     c9a:	5d de       	rcall	.-838    	; 0x956 <hd44780_l_ems>
     c9c:	df 91       	pop	r29
     c9e:	cf 91       	pop	r28
     ca0:	1f 91       	pop	r17
     ca2:	0f 91       	pop	r16
     ca4:	08 95       	ret

00000ca6 <SPI_Init_Master>:
     ca6:	88 eb       	ldi	r24, 0xB8	; 184
     ca8:	84 b9       	out	0x04, r24	; 4
     caa:	53 98       	cbi	0x0a, 3	; 10
     cac:	85 b1       	in	r24, 0x05	; 5
     cae:	88 61       	ori	r24, 0x18	; 24
     cb0:	85 b9       	out	0x05, r24	; 5
     cb2:	8c b5       	in	r24, 0x2c	; 44
     cb4:	83 65       	ori	r24, 0x53	; 83
     cb6:	8c bd       	out	0x2c, r24	; 44
     cb8:	8c e3       	ldi	r24, 0x3C	; 60
     cba:	80 93 69 00 	sts	0x0069, r24
     cbe:	86 e0       	ldi	r24, 0x06	; 6
     cc0:	8d bb       	out	0x1d, r24	; 29
     cc2:	78 94       	sei
     cc4:	14 bc       	out	0x24, r1	; 36
     cc6:	95 e0       	ldi	r25, 0x05	; 5
     cc8:	95 bd       	out	0x25, r25	; 37
     cca:	31 e0       	ldi	r19, 0x01	; 1
     ccc:	30 93 86 01 	sts	0x0186, r19
     cd0:	22 e0       	ldi	r18, 0x02	; 2
     cd2:	20 93 90 01 	sts	0x0190, r18
     cd6:	10 92 8d 01 	sts	0x018D, r1
     cda:	30 93 4e 01 	sts	0x014E, r19
     cde:	20 93 8f 01 	sts	0x018F, r18
     ce2:	23 e0       	ldi	r18, 0x03	; 3
     ce4:	20 93 4d 01 	sts	0x014D, r18
     ce8:	24 e0       	ldi	r18, 0x04	; 4
     cea:	20 93 88 01 	sts	0x0188, r18
     cee:	90 93 5f 01 	sts	0x015F, r25
     cf2:	80 93 89 01 	sts	0x0189, r24
     cf6:	87 e0       	ldi	r24, 0x07	; 7
     cf8:	80 93 53 01 	sts	0x0153, r24
     cfc:	88 e0       	ldi	r24, 0x08	; 8
     cfe:	80 93 59 01 	sts	0x0159, r24
     d02:	89 e0       	ldi	r24, 0x09	; 9
     d04:	80 93 52 01 	sts	0x0152, r24
     d08:	8a e0       	ldi	r24, 0x0A	; 10
     d0a:	80 93 8c 01 	sts	0x018C, r24
     d0e:	8a e7       	ldi	r24, 0x7A	; 122
     d10:	87 bd       	out	0x27, r24	; 39
     d12:	8d e7       	ldi	r24, 0x7D	; 125
     d14:	88 bd       	out	0x28, r24	; 40
     d16:	16 bc       	out	0x26, r1	; 38
     d18:	08 95       	ret

00000d1a <Master_TX>:
     d1a:	cf 93       	push	r28
     d1c:	df 93       	push	r29
     d1e:	1f 92       	push	r1
     d20:	cd b7       	in	r28, 0x3d	; 61
     d22:	de b7       	in	r29, 0x3e	; 62
     d24:	89 83       	std	Y+1, r24	; 0x01
     d26:	89 81       	ldd	r24, Y+1	; 0x01
     d28:	8e bd       	out	0x2e, r24	; 46
     d2a:	0d b4       	in	r0, 0x2d	; 45
     d2c:	07 fe       	sbrs	r0, 7
     d2e:	fd cf       	rjmp	.-6      	; 0xd2a <Master_TX+0x10>
     d30:	0f 90       	pop	r0
     d32:	df 91       	pop	r29
     d34:	cf 91       	pop	r28
     d36:	08 95       	ret

00000d38 <Master_RX>:
     d38:	cf 93       	push	r28
     d3a:	df 93       	push	r29
     d3c:	1f 92       	push	r1
     d3e:	cd b7       	in	r28, 0x3d	; 61
     d40:	de b7       	in	r29, 0x3e	; 62
     d42:	89 83       	std	Y+1, r24	; 0x01
     d44:	89 81       	ldd	r24, Y+1	; 0x01
     d46:	8e bd       	out	0x2e, r24	; 46
     d48:	0d b4       	in	r0, 0x2d	; 45
     d4a:	07 fe       	sbrs	r0, 7
     d4c:	fd cf       	rjmp	.-6      	; 0xd48 <Master_RX+0x10>
     d4e:	8e b5       	in	r24, 0x2e	; 46
     d50:	0f 90       	pop	r0
     d52:	df 91       	pop	r29
     d54:	cf 91       	pop	r28
     d56:	08 95       	ret

00000d58 <Slave_Select>:
     d58:	cf 93       	push	r28
     d5a:	df 93       	push	r29
     d5c:	1f 92       	push	r1
     d5e:	cd b7       	in	r28, 0x3d	; 61
     d60:	de b7       	in	r29, 0x3e	; 62
     d62:	89 83       	std	Y+1, r24	; 0x01
     d64:	99 81       	ldd	r25, Y+1	; 0x01
     d66:	80 91 90 01 	lds	r24, 0x0190
     d6a:	98 13       	cpse	r25, r24
     d6c:	03 c0       	rjmp	.+6      	; 0xd74 <Slave_Select+0x1c>
     d6e:	2b 9a       	sbi	0x05, 3	; 5
     d70:	2c 98       	cbi	0x05, 4	; 5
     d72:	0a c0       	rjmp	.+20     	; 0xd88 <Slave_Select+0x30>
     d74:	99 81       	ldd	r25, Y+1	; 0x01
     d76:	80 91 86 01 	lds	r24, 0x0186
     d7a:	98 13       	cpse	r25, r24
     d7c:	03 c0       	rjmp	.+6      	; 0xd84 <Slave_Select+0x2c>
     d7e:	2c 9a       	sbi	0x05, 4	; 5
     d80:	2b 98       	cbi	0x05, 3	; 5
     d82:	02 c0       	rjmp	.+4      	; 0xd88 <Slave_Select+0x30>
     d84:	2c 9a       	sbi	0x05, 4	; 5
     d86:	2b 9a       	sbi	0x05, 3	; 5
     d88:	0f 90       	pop	r0
     d8a:	df 91       	pop	r29
     d8c:	cf 91       	pop	r28
     d8e:	08 95       	ret

00000d90 <TX_Protocol>:
     d90:	90 91 4e 01 	lds	r25, 0x014E
     d94:	89 13       	cpse	r24, r25
     d96:	02 c0       	rjmp	.+4      	; 0xd9c <TX_Protocol+0xc>
     d98:	84 e8       	ldi	r24, 0x84	; 132
     d9a:	bf cf       	rjmp	.-130    	; 0xd1a <Master_TX>
     d9c:	90 91 4d 01 	lds	r25, 0x014D
     da0:	89 13       	cpse	r24, r25
     da2:	02 c0       	rjmp	.+4      	; 0xda8 <TX_Protocol+0x18>
     da4:	85 e8       	ldi	r24, 0x85	; 133
     da6:	b9 cf       	rjmp	.-142    	; 0xd1a <Master_TX>
     da8:	90 91 5f 01 	lds	r25, 0x015F
     dac:	89 13       	cpse	r24, r25
     dae:	02 c0       	rjmp	.+4      	; 0xdb4 <TX_Protocol+0x24>
     db0:	86 e8       	ldi	r24, 0x86	; 134
     db2:	b3 cf       	rjmp	.-154    	; 0xd1a <Master_TX>
     db4:	90 91 8f 01 	lds	r25, 0x018F
     db8:	89 13       	cpse	r24, r25
     dba:	02 c0       	rjmp	.+4      	; 0xdc0 <TX_Protocol+0x30>
     dbc:	84 e0       	ldi	r24, 0x04	; 4
     dbe:	ad cf       	rjmp	.-166    	; 0xd1a <Master_TX>
     dc0:	90 91 88 01 	lds	r25, 0x0188
     dc4:	89 13       	cpse	r24, r25
     dc6:	02 c0       	rjmp	.+4      	; 0xdcc <TX_Protocol+0x3c>
     dc8:	85 e0       	ldi	r24, 0x05	; 5
     dca:	a7 cf       	rjmp	.-178    	; 0xd1a <Master_TX>
     dcc:	90 91 89 01 	lds	r25, 0x0189
     dd0:	89 13       	cpse	r24, r25
     dd2:	02 c0       	rjmp	.+4      	; 0xdd8 <TX_Protocol+0x48>
     dd4:	86 e0       	ldi	r24, 0x06	; 6
     dd6:	a1 cf       	rjmp	.-190    	; 0xd1a <Master_TX>
     dd8:	90 91 53 01 	lds	r25, 0x0153
     ddc:	89 13       	cpse	r24, r25
     dde:	02 c0       	rjmp	.+4      	; 0xde4 <TX_Protocol+0x54>
     de0:	8b ea       	ldi	r24, 0xAB	; 171
     de2:	9b cf       	rjmp	.-202    	; 0xd1a <Master_TX>
     de4:	90 91 59 01 	lds	r25, 0x0159
     de8:	89 13       	cpse	r24, r25
     dea:	02 c0       	rjmp	.+4      	; 0xdf0 <TX_Protocol+0x60>
     dec:	87 e8       	ldi	r24, 0x87	; 135
     dee:	95 cf       	rjmp	.-214    	; 0xd1a <Master_TX>
     df0:	90 91 52 01 	lds	r25, 0x0152
     df4:	89 13       	cpse	r24, r25
     df6:	02 c0       	rjmp	.+4      	; 0xdfc <TX_Protocol+0x6c>
     df8:	8b e8       	ldi	r24, 0x8B	; 139
     dfa:	8f cf       	rjmp	.-226    	; 0xd1a <Master_TX>
     dfc:	08 95       	ret

00000dfe <TX_sensor_data>:
     dfe:	80 91 90 01 	lds	r24, 0x0190
     e02:	aa df       	rcall	.-172    	; 0xd58 <Slave_Select>
     e04:	80 91 4e 01 	lds	r24, 0x014E
     e08:	c3 df       	rcall	.-122    	; 0xd90 <TX_Protocol>
     e0a:	80 91 8d 01 	lds	r24, 0x018D
     e0e:	a4 df       	rcall	.-184    	; 0xd58 <Slave_Select>
     e10:	80 91 90 01 	lds	r24, 0x0190
     e14:	a1 df       	rcall	.-190    	; 0xd58 <Slave_Select>
     e16:	80 91 40 01 	lds	r24, 0x0140
     e1a:	88 23       	and	r24, r24
     e1c:	11 f0       	breq	.+4      	; 0xe22 <TX_sensor_data+0x24>
     e1e:	88 e0       	ldi	r24, 0x08	; 8
     e20:	7c cf       	rjmp	.-264    	; 0xd1a <Master_TX>
     e22:	80 91 3f 01 	lds	r24, 0x013F
     e26:	79 cf       	rjmp	.-270    	; 0xd1a <Master_TX>

00000e28 <RX_sensor_data>:
     e28:	80 91 8f 01 	lds	r24, 0x018F
     e2c:	80 93 4c 01 	sts	0x014C, r24
     e30:	80 91 86 01 	lds	r24, 0x0186
     e34:	91 df       	rcall	.-222    	; 0xd58 <Slave_Select>
     e36:	80 91 8f 01 	lds	r24, 0x018F
     e3a:	aa df       	rcall	.-172    	; 0xd90 <TX_Protocol>
     e3c:	80 91 8d 01 	lds	r24, 0x018D
     e40:	8b cf       	rjmp	.-234    	; 0xd58 <Slave_Select>

00000e42 <TX_wheel_data>:
     e42:	80 91 90 01 	lds	r24, 0x0190
     e46:	88 df       	rcall	.-240    	; 0xd58 <Slave_Select>
     e48:	80 91 4d 01 	lds	r24, 0x014D
     e4c:	a1 df       	rcall	.-190    	; 0xd90 <TX_Protocol>
     e4e:	80 91 50 01 	lds	r24, 0x0150
     e52:	63 df       	rcall	.-314    	; 0xd1a <Master_TX>
     e54:	80 91 8d 01 	lds	r24, 0x018D
     e58:	7f cf       	rjmp	.-258    	; 0xd58 <Slave_Select>

00000e5a <TX_arm_data>:
     e5a:	80 91 90 01 	lds	r24, 0x0190
     e5e:	7c df       	rcall	.-264    	; 0xd58 <Slave_Select>
     e60:	80 91 5f 01 	lds	r24, 0x015F
     e64:	95 df       	rcall	.-214    	; 0xd90 <TX_Protocol>
     e66:	80 91 3c 01 	lds	r24, 0x013C
     e6a:	57 cf       	rjmp	.-338    	; 0xd1a <Master_TX>

00000e6c <TXKpData>:
     e6c:	80 91 90 01 	lds	r24, 0x0190
     e70:	73 df       	rcall	.-282    	; 0xd58 <Slave_Select>
     e72:	80 91 59 01 	lds	r24, 0x0159
     e76:	8c df       	rcall	.-232    	; 0xd90 <TX_Protocol>
     e78:	80 91 87 01 	lds	r24, 0x0187
     e7c:	4e df       	rcall	.-356    	; 0xd1a <Master_TX>
     e7e:	80 91 8d 01 	lds	r24, 0x018D
     e82:	6a cf       	rjmp	.-300    	; 0xd58 <Slave_Select>

00000e84 <TXDropItem>:
     e84:	80 91 90 01 	lds	r24, 0x0190
     e88:	67 df       	rcall	.-306    	; 0xd58 <Slave_Select>
     e8a:	80 91 8c 01 	lds	r24, 0x018C
     e8e:	80 df       	rcall	.-256    	; 0xd90 <TX_Protocol>
     e90:	80 91 5d 01 	lds	r24, 0x015D
     e94:	42 df       	rcall	.-380    	; 0xd1a <Master_TX>
     e96:	80 91 8d 01 	lds	r24, 0x018D
     e9a:	5e cf       	rjmp	.-324    	; 0xd58 <Slave_Select>

00000e9c <leaveStationMode>:
     e9c:	cf 93       	push	r28
     e9e:	df 93       	push	r29
     ea0:	81 e0       	ldi	r24, 0x01	; 1
     ea2:	80 93 40 01 	sts	0x0140, r24
     ea6:	10 92 6e 00 	sts	0x006E, r1
     eaa:	c1 e3       	ldi	r28, 0x31	; 49
     eac:	d0 e0       	ldi	r29, 0x00	; 0
     eae:	a7 df       	rcall	.-178    	; 0xdfe <TX_sensor_data>
     eb0:	21 97       	sbiw	r28, 0x01	; 1
     eb2:	e9 f7       	brne	.-6      	; 0xeae <leaveStationMode+0x12>
     eb4:	86 e0       	ldi	r24, 0x06	; 6
     eb6:	80 93 6e 00 	sts	0x006E, r24
     eba:	10 92 40 01 	sts	0x0140, r1
     ebe:	df 91       	pop	r29
     ec0:	cf 91       	pop	r28
     ec2:	08 95       	ret

00000ec4 <waitForUserInputStartAbort>:
     ec4:	80 91 5e 01 	lds	r24, 0x015E
     ec8:	88 23       	and	r24, r24
     eca:	e1 f3       	breq	.-8      	; 0xec4 <waitForUserInputStartAbort>
     ecc:	10 92 5e 01 	sts	0x015E, r1
     ed0:	08 95       	ret

00000ed2 <waitForUserInputEndPickup>:
     ed2:	80 91 8a 01 	lds	r24, 0x018A
     ed6:	88 23       	and	r24, r24
     ed8:	e1 f3       	breq	.-8      	; 0xed2 <waitForUserInputEndPickup>
     eda:	10 92 8a 01 	sts	0x018A, r1
     ede:	08 95       	ret

00000ee0 <waitForFinishedDrop>:
     ee0:	80 91 51 01 	lds	r24, 0x0151
     ee4:	88 23       	and	r24, r24
     ee6:	e1 f3       	breq	.-8      	; 0xee0 <waitForFinishedDrop>
     ee8:	10 92 51 01 	sts	0x0151, r1
     eec:	08 95       	ret

00000eee <itemInHistory>:
     eee:	1f 93       	push	r17
     ef0:	cf 93       	push	r28
     ef2:	df 93       	push	r29
     ef4:	d0 91 8b 01 	lds	r29, 0x018B
     ef8:	d1 11       	cpse	r29, r1
     efa:	12 c0       	rjmp	.+36     	; 0xf20 <itemInHistory+0x32>
     efc:	80 e0       	ldi	r24, 0x00	; 0
     efe:	26 c0       	rjmp	.+76     	; 0xf4c <itemInHistory+0x5e>
     f00:	71 91       	ld	r23, Z+
     f02:	6d 91       	ld	r22, X+
     f04:	76 13       	cpse	r23, r22
     f06:	01 c0       	rjmp	.+2      	; 0xf0a <itemInHistory+0x1c>
     f08:	cf 5f       	subi	r28, 0xFF	; 255
     f0a:	cc 30       	cpi	r28, 0x0C	; 12
     f0c:	f1 f0       	breq	.+60     	; 0xf4a <itemInHistory+0x5c>
     f0e:	e8 17       	cp	r30, r24
     f10:	f9 07       	cpc	r31, r25
     f12:	b1 f7       	brne	.-20     	; 0xf00 <itemInHistory+0x12>
     f14:	2f 5f       	subi	r18, 0xFF	; 255
     f16:	3f 4f       	sbci	r19, 0xFF	; 255
     f18:	2d 17       	cp	r18, r29
     f1a:	48 f0       	brcs	.+18     	; 0xf2e <itemInHistory+0x40>
     f1c:	80 e0       	ldi	r24, 0x00	; 0
     f1e:	16 c0       	rjmp	.+44     	; 0xf4c <itemInHistory+0x5e>
     f20:	20 e0       	ldi	r18, 0x00	; 0
     f22:	30 e0       	ldi	r19, 0x00	; 0
     f24:	40 e3       	ldi	r20, 0x30	; 48
     f26:	51 e0       	ldi	r21, 0x01	; 1
     f28:	8c e3       	ldi	r24, 0x3C	; 60
     f2a:	91 e0       	ldi	r25, 0x01	; 1
     f2c:	10 e0       	ldi	r17, 0x00	; 0
     f2e:	fa 01       	movw	r30, r20
     f30:	d9 01       	movw	r26, r18
     f32:	aa 0f       	add	r26, r26
     f34:	bb 1f       	adc	r27, r27
     f36:	a2 0f       	add	r26, r18
     f38:	b3 1f       	adc	r27, r19
     f3a:	aa 0f       	add	r26, r26
     f3c:	bb 1f       	adc	r27, r27
     f3e:	aa 0f       	add	r26, r26
     f40:	bb 1f       	adc	r27, r27
     f42:	a0 50       	subi	r26, 0x00	; 0
     f44:	bf 4f       	sbci	r27, 0xFF	; 255
     f46:	c1 2f       	mov	r28, r17
     f48:	db cf       	rjmp	.-74     	; 0xf00 <itemInHistory+0x12>
     f4a:	81 e0       	ldi	r24, 0x01	; 1
     f4c:	df 91       	pop	r29
     f4e:	cf 91       	pop	r28
     f50:	1f 91       	pop	r17
     f52:	08 95       	ret

00000f54 <cargoEqualsNewStream>:
     f54:	90 91 24 01 	lds	r25, 0x0124
     f58:	80 91 30 01 	lds	r24, 0x0130
     f5c:	98 13       	cpse	r25, r24
     f5e:	0f c0       	rjmp	.+30     	; 0xf7e <cargoEqualsNewStream+0x2a>
     f60:	e5 e2       	ldi	r30, 0x25	; 37
     f62:	f1 e0       	ldi	r31, 0x01	; 1
     f64:	a1 e3       	ldi	r26, 0x31	; 49
     f66:	b1 e0       	ldi	r27, 0x01	; 1
     f68:	80 e3       	ldi	r24, 0x30	; 48
     f6a:	91 e0       	ldi	r25, 0x01	; 1
     f6c:	31 91       	ld	r19, Z+
     f6e:	2d 91       	ld	r18, X+
     f70:	32 13       	cpse	r19, r18
     f72:	07 c0       	rjmp	.+14     	; 0xf82 <cargoEqualsNewStream+0x2e>
     f74:	e8 17       	cp	r30, r24
     f76:	f9 07       	cpc	r31, r25
     f78:	c9 f7       	brne	.-14     	; 0xf6c <cargoEqualsNewStream+0x18>
     f7a:	81 e0       	ldi	r24, 0x01	; 1
     f7c:	08 95       	ret
     f7e:	80 e0       	ldi	r24, 0x00	; 0
     f80:	08 95       	ret
     f82:	80 e0       	ldi	r24, 0x00	; 0
     f84:	08 95       	ret

00000f86 <powerRFID>:
     f86:	88 23       	and	r24, r24
     f88:	11 f0       	breq	.+4      	; 0xf8e <powerRFID+0x8>
     f8a:	5d 98       	cbi	0x0b, 5	; 11
     f8c:	08 95       	ret
     f8e:	5d 9a       	sbi	0x0b, 5	; 11
     f90:	08 95       	ret

00000f92 <printOnLCD>:
     f92:	0f 93       	push	r16
     f94:	1f 93       	push	r17
     f96:	cf 93       	push	r28
     f98:	df 93       	push	r29
     f9a:	c8 2f       	mov	r28, r24
     f9c:	80 e6       	ldi	r24, 0x60	; 96
     f9e:	91 e0       	ldi	r25, 0x01	; 1
     fa0:	cf dc       	rcall	.-1634   	; 0x940 <hd44780_l_clear_disp>
     fa2:	cc 23       	and	r28, r28
     fa4:	01 f1       	breq	.+64     	; 0xfe6 <printOnLCD+0x54>
     fa6:	62 e5       	ldi	r22, 0x52	; 82
     fa8:	80 e6       	ldi	r24, 0x60	; 96
     faa:	91 e0       	ldi	r25, 0x01	; 1
     fac:	11 dd       	rcall	.-1502   	; 0x9d0 <hd44780_l_write>
     fae:	66 e4       	ldi	r22, 0x46	; 70
     fb0:	80 e6       	ldi	r24, 0x60	; 96
     fb2:	91 e0       	ldi	r25, 0x01	; 1
     fb4:	0d dd       	rcall	.-1510   	; 0x9d0 <hd44780_l_write>
     fb6:	69 e4       	ldi	r22, 0x49	; 73
     fb8:	80 e6       	ldi	r24, 0x60	; 96
     fba:	91 e0       	ldi	r25, 0x01	; 1
     fbc:	09 dd       	rcall	.-1518   	; 0x9d0 <hd44780_l_write>
     fbe:	64 e4       	ldi	r22, 0x44	; 68
     fc0:	80 e6       	ldi	r24, 0x60	; 96
     fc2:	91 e0       	ldi	r25, 0x01	; 1
     fc4:	05 dd       	rcall	.-1526   	; 0x9d0 <hd44780_l_write>
     fc6:	6a e3       	ldi	r22, 0x3A	; 58
     fc8:	80 e6       	ldi	r24, 0x60	; 96
     fca:	91 e0       	ldi	r25, 0x01	; 1
     fcc:	01 dd       	rcall	.-1534   	; 0x9d0 <hd44780_l_write>
     fce:	c5 e2       	ldi	r28, 0x25	; 37
     fd0:	d1 e0       	ldi	r29, 0x01	; 1
     fd2:	0f e2       	ldi	r16, 0x2F	; 47
     fd4:	11 e0       	ldi	r17, 0x01	; 1
     fd6:	69 91       	ld	r22, Y+
     fd8:	80 e6       	ldi	r24, 0x60	; 96
     fda:	91 e0       	ldi	r25, 0x01	; 1
     fdc:	f9 dc       	rcall	.-1550   	; 0x9d0 <hd44780_l_write>
     fde:	c0 17       	cp	r28, r16
     fe0:	d1 07       	cpc	r29, r17
     fe2:	c9 f7       	brne	.-14     	; 0xfd6 <printOnLCD+0x44>
     fe4:	20 c0       	rjmp	.+64     	; 0x1026 <printOnLCD+0x94>
     fe6:	6e e4       	ldi	r22, 0x4E	; 78
     fe8:	80 e6       	ldi	r24, 0x60	; 96
     fea:	91 e0       	ldi	r25, 0x01	; 1
     fec:	f1 dc       	rcall	.-1566   	; 0x9d0 <hd44780_l_write>
     fee:	6f e4       	ldi	r22, 0x4F	; 79
     ff0:	80 e6       	ldi	r24, 0x60	; 96
     ff2:	91 e0       	ldi	r25, 0x01	; 1
     ff4:	ed dc       	rcall	.-1574   	; 0x9d0 <hd44780_l_write>
     ff6:	60 e2       	ldi	r22, 0x20	; 32
     ff8:	80 e6       	ldi	r24, 0x60	; 96
     ffa:	91 e0       	ldi	r25, 0x01	; 1
     ffc:	e9 dc       	rcall	.-1582   	; 0x9d0 <hd44780_l_write>
     ffe:	63 e4       	ldi	r22, 0x43	; 67
    1000:	80 e6       	ldi	r24, 0x60	; 96
    1002:	91 e0       	ldi	r25, 0x01	; 1
    1004:	e5 dc       	rcall	.-1590   	; 0x9d0 <hd44780_l_write>
    1006:	61 e4       	ldi	r22, 0x41	; 65
    1008:	80 e6       	ldi	r24, 0x60	; 96
    100a:	91 e0       	ldi	r25, 0x01	; 1
    100c:	e1 dc       	rcall	.-1598   	; 0x9d0 <hd44780_l_write>
    100e:	62 e5       	ldi	r22, 0x52	; 82
    1010:	80 e6       	ldi	r24, 0x60	; 96
    1012:	91 e0       	ldi	r25, 0x01	; 1
    1014:	dd dc       	rcall	.-1606   	; 0x9d0 <hd44780_l_write>
    1016:	67 e4       	ldi	r22, 0x47	; 71
    1018:	80 e6       	ldi	r24, 0x60	; 96
    101a:	91 e0       	ldi	r25, 0x01	; 1
    101c:	d9 dc       	rcall	.-1614   	; 0x9d0 <hd44780_l_write>
    101e:	6f e4       	ldi	r22, 0x4F	; 79
    1020:	80 e6       	ldi	r24, 0x60	; 96
    1022:	91 e0       	ldi	r25, 0x01	; 1
    1024:	d5 dc       	rcall	.-1622   	; 0x9d0 <hd44780_l_write>
    1026:	df 91       	pop	r29
    1028:	cf 91       	pop	r28
    102a:	1f 91       	pop	r17
    102c:	0f 91       	pop	r16
    102e:	08 95       	ret

00001030 <deliveryMode>:
    1030:	91 df       	rcall	.-222    	; 0xf54 <cargoEqualsNewStream>
    1032:	88 23       	and	r24, r24
    1034:	39 f1       	breq	.+78     	; 0x1084 <deliveryMode+0x54>
    1036:	e4 e2       	ldi	r30, 0x24	; 36
    1038:	f1 e0       	ldi	r31, 0x01	; 1
    103a:	80 91 8b 01 	lds	r24, 0x018B
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	dc 01       	movw	r26, r24
    1042:	aa 0f       	add	r26, r26
    1044:	bb 1f       	adc	r27, r27
    1046:	8a 0f       	add	r24, r26
    1048:	9b 1f       	adc	r25, r27
    104a:	dc 01       	movw	r26, r24
    104c:	aa 0f       	add	r26, r26
    104e:	bb 1f       	adc	r27, r27
    1050:	aa 0f       	add	r26, r26
    1052:	bb 1f       	adc	r27, r27
    1054:	a0 50       	subi	r26, 0x00	; 0
    1056:	bf 4f       	sbci	r27, 0xFF	; 255
    1058:	80 e3       	ldi	r24, 0x30	; 48
    105a:	91 e0       	ldi	r25, 0x01	; 1
    105c:	21 91       	ld	r18, Z+
    105e:	2d 93       	st	X+, r18
    1060:	e8 17       	cp	r30, r24
    1062:	f9 07       	cpc	r31, r25
    1064:	d9 f7       	brne	.-10     	; 0x105c <deliveryMode+0x2c>
    1066:	80 91 8b 01 	lds	r24, 0x018B
    106a:	8f 5f       	subi	r24, 0xFF	; 255
    106c:	80 93 8b 01 	sts	0x018B, r24
    1070:	29 df       	rcall	.-430    	; 0xec4 <waitForUserInputStartAbort>
    1072:	80 e0       	ldi	r24, 0x00	; 0
    1074:	8e df       	rcall	.-228    	; 0xf92 <printOnLCD>
    1076:	10 92 54 01 	sts	0x0154, r1
    107a:	80 91 5d 01 	lds	r24, 0x015D
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	01 df       	rcall	.-510    	; 0xe84 <TXDropItem>
    1082:	2e cf       	rjmp	.-420    	; 0xee0 <waitForFinishedDrop>
    1084:	08 95       	ret

00001086 <pickUpMode>:
    1086:	33 df       	rcall	.-410    	; 0xeee <itemInHistory>
    1088:	81 11       	cpse	r24, r1
    108a:	15 c0       	rjmp	.+42     	; 0x10b6 <pickUpMode+0x30>
    108c:	1b df       	rcall	.-458    	; 0xec4 <waitForUserInputStartAbort>
    108e:	80 91 58 01 	lds	r24, 0x0158
    1092:	88 23       	and	r24, r24
    1094:	81 f0       	breq	.+32     	; 0x10b6 <pickUpMode+0x30>
    1096:	e0 e3       	ldi	r30, 0x30	; 48
    1098:	f1 e0       	ldi	r31, 0x01	; 1
    109a:	a4 e2       	ldi	r26, 0x24	; 36
    109c:	b1 e0       	ldi	r27, 0x01	; 1
    109e:	8c e3       	ldi	r24, 0x3C	; 60
    10a0:	91 e0       	ldi	r25, 0x01	; 1
    10a2:	21 91       	ld	r18, Z+
    10a4:	2d 93       	st	X+, r18
    10a6:	e8 17       	cp	r30, r24
    10a8:	f9 07       	cpc	r31, r25
    10aa:	d9 f7       	brne	.-10     	; 0x10a2 <pickUpMode+0x1c>
    10ac:	81 e0       	ldi	r24, 0x01	; 1
    10ae:	80 93 54 01 	sts	0x0154, r24
    10b2:	6f df       	rcall	.-290    	; 0xf92 <printOnLCD>
    10b4:	0e cf       	rjmp	.-484    	; 0xed2 <waitForUserInputEndPickup>
    10b6:	08 95       	ret

000010b8 <stationMode>:
    10b8:	81 e0       	ldi	r24, 0x01	; 1
    10ba:	65 df       	rcall	.-310    	; 0xf86 <powerRFID>
    10bc:	80 91 57 01 	lds	r24, 0x0157
    10c0:	88 23       	and	r24, r24
    10c2:	e1 f3       	breq	.-8      	; 0x10bc <stationMode+0x4>
    10c4:	10 92 57 01 	sts	0x0157, r1
    10c8:	80 91 54 01 	lds	r24, 0x0154
    10cc:	81 11       	cpse	r24, r1
    10ce:	02 c0       	rjmp	.+4      	; 0x10d4 <stationMode+0x1c>
    10d0:	da df       	rcall	.-76     	; 0x1086 <pickUpMode>
    10d2:	01 c0       	rjmp	.+2      	; 0x10d6 <stationMode+0x1e>
    10d4:	ad df       	rcall	.-166    	; 0x1030 <deliveryMode>
    10d6:	e2 de       	rcall	.-572    	; 0xe9c <leaveStationMode>
    10d8:	10 92 4b 01 	sts	0x014B, r1
    10dc:	08 95       	ret

000010de <setupRFID>:
    10de:	e9 ec       	ldi	r30, 0xC9	; 201
    10e0:	f0 e0       	ldi	r31, 0x00	; 0
    10e2:	80 81       	ld	r24, Z
    10e4:	80 69       	ori	r24, 0x90	; 144
    10e6:	80 83       	st	Z, r24
    10e8:	ea ec       	ldi	r30, 0xCA	; 202
    10ea:	f0 e0       	ldi	r31, 0x00	; 0
    10ec:	80 81       	ld	r24, Z
    10ee:	86 60       	ori	r24, 0x06	; 6
    10f0:	80 83       	st	Z, r24
    10f2:	81 e0       	ldi	r24, 0x01	; 1
    10f4:	80 93 cd 00 	sts	0x00CD, r24
    10f8:	8f e7       	ldi	r24, 0x7F	; 127
    10fa:	80 93 cc 00 	sts	0x00CC, r24
    10fe:	55 9a       	sbi	0x0a, 5	; 10
    1100:	5d 9a       	sbi	0x0b, 5	; 11
    1102:	08 95       	ret

00001104 <setupWarehouse>:
    1104:	10 92 57 01 	sts	0x0157, r1
    1108:	10 92 54 01 	sts	0x0154, r1
    110c:	10 92 58 01 	sts	0x0158, r1
    1110:	10 92 5e 01 	sts	0x015E, r1
    1114:	10 92 8a 01 	sts	0x018A, r1
    1118:	10 92 40 01 	sts	0x0140, r1
    111c:	10 92 4b 01 	sts	0x014B, r1
    1120:	10 92 3e 01 	sts	0x013E, r1
    1124:	10 92 8b 01 	sts	0x018B, r1
    1128:	08 95       	ret

0000112a <setupLCD>:
    112a:	0f 93       	push	r16
    112c:	8f ef       	ldi	r24, 0xFF	; 255
    112e:	81 b9       	out	0x01, r24	; 1
    1130:	84 b1       	in	r24, 0x04	; 4
    1132:	83 60       	ori	r24, 0x03	; 3
    1134:	84 b9       	out	0x04, r24	; 4
    1136:	3e 9a       	sbi	0x07, 6	; 7
    1138:	21 e0       	ldi	r18, 0x01	; 1
    113a:	20 93 60 01 	sts	0x0160, r18
    113e:	10 92 61 01 	sts	0x0161, r1
    1142:	86 e0       	ldi	r24, 0x06	; 6
    1144:	80 93 62 01 	sts	0x0162, r24
    1148:	97 e0       	ldi	r25, 0x07	; 7
    114a:	90 93 63 01 	sts	0x0163, r25
    114e:	80 93 64 01 	sts	0x0164, r24
    1152:	85 e0       	ldi	r24, 0x05	; 5
    1154:	80 93 65 01 	sts	0x0165, r24
    1158:	84 e0       	ldi	r24, 0x04	; 4
    115a:	80 93 66 01 	sts	0x0166, r24
    115e:	83 e0       	ldi	r24, 0x03	; 3
    1160:	80 93 67 01 	sts	0x0167, r24
    1164:	82 e0       	ldi	r24, 0x02	; 2
    1166:	80 93 68 01 	sts	0x0168, r24
    116a:	20 93 69 01 	sts	0x0169, r18
    116e:	10 92 6a 01 	sts	0x016A, r1
    1172:	85 e2       	ldi	r24, 0x25	; 37
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	90 93 6c 01 	sts	0x016C, r25
    117a:	80 93 6b 01 	sts	0x016B, r24
    117e:	90 93 6e 01 	sts	0x016E, r25
    1182:	80 93 6d 01 	sts	0x016D, r24
    1186:	88 e2       	ldi	r24, 0x28	; 40
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	90 93 70 01 	sts	0x0170, r25
    118e:	80 93 6f 01 	sts	0x016F, r24
    1192:	82 e2       	ldi	r24, 0x22	; 34
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	90 93 72 01 	sts	0x0172, r25
    119a:	80 93 71 01 	sts	0x0171, r24
    119e:	90 93 74 01 	sts	0x0174, r25
    11a2:	80 93 73 01 	sts	0x0173, r24
    11a6:	90 93 76 01 	sts	0x0176, r25
    11aa:	80 93 75 01 	sts	0x0175, r24
    11ae:	90 93 78 01 	sts	0x0178, r25
    11b2:	80 93 77 01 	sts	0x0177, r24
    11b6:	90 93 7a 01 	sts	0x017A, r25
    11ba:	80 93 79 01 	sts	0x0179, r24
    11be:	90 93 7c 01 	sts	0x017C, r25
    11c2:	80 93 7b 01 	sts	0x017B, r24
    11c6:	90 93 7e 01 	sts	0x017E, r25
    11ca:	80 93 7d 01 	sts	0x017D, r24
    11ce:	90 93 80 01 	sts	0x0180, r25
    11d2:	80 93 7f 01 	sts	0x017F, r24
    11d6:	10 92 81 01 	sts	0x0181, r1
    11da:	80 e4       	ldi	r24, 0x40	; 64
    11dc:	80 93 82 01 	sts	0x0182, r24
    11e0:	20 93 83 01 	sts	0x0183, r18
    11e4:	00 e0       	ldi	r16, 0x00	; 0
    11e6:	40 e0       	ldi	r20, 0x00	; 0
    11e8:	61 e0       	ldi	r22, 0x01	; 1
    11ea:	80 e6       	ldi	r24, 0x60	; 96
    11ec:	91 e0       	ldi	r25, 0x01	; 1
    11ee:	fb db       	rcall	.-2058   	; 0x9e6 <hd44780_l_init>
    11f0:	20 e0       	ldi	r18, 0x00	; 0
    11f2:	40 e0       	ldi	r20, 0x00	; 0
    11f4:	61 e0       	ldi	r22, 0x01	; 1
    11f6:	80 e6       	ldi	r24, 0x60	; 96
    11f8:	91 e0       	ldi	r25, 0x01	; 1
    11fa:	bf db       	rcall	.-2178   	; 0x97a <hd44780_l_disp>
    11fc:	0f 91       	pop	r16
    11fe:	08 95       	ret

00001200 <_exit>:
    1200:	f8 94       	cli

00001202 <__stop_program>:
    1202:	ff cf       	rjmp	.-2      	; 0x1202 <__stop_program>
