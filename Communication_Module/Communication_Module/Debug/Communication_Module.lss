
Communication_Module.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  000011c6  0000125a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011c6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000055  0080013c  0080013c  00001296  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00001298  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000097  00000000  00000000  00001964  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  000019fb  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000208  00000000  00000000  00001a2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000311a  00000000  00000000  00001c32  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000007e6  00000000  00000000  00004d4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001529  00000000  00000000  00005532  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000624  00000000  00000000  00006a5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000791  00000000  00000000  00007080  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001b3b  00000000  00000000  00007811  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000208  00000000  00000000  0000934c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	8c c0       	rjmp	.+280    	; 0x122 <__vector_2>
       a:	00 00       	nop
       c:	04 c1       	rjmp	.+520    	; 0x216 <__vector_3>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	17 c1       	rjmp	.+558    	; 0x270 <__vector_16>
      42:	00 00       	nop
      44:	40 c1       	rjmp	.+640    	; 0x2c6 <__vector_17>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	d5 c1       	rjmp	.+938    	; 0x3fc <__vector_20>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	58 c1       	rjmp	.+688    	; 0x322 <__vector_28>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e6 ec       	ldi	r30, 0xC6	; 198
      a0:	f1 e1       	ldi	r31, 0x11	; 17
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	ac 33       	cpi	r26, 0x3C	; 60
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	21 e0       	ldi	r18, 0x01	; 1
      b4:	ac e3       	ldi	r26, 0x3C	; 60
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a1 39       	cpi	r26, 0x91	; 145
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	77 d1       	rcall	.+750    	; 0x3b2 <main>
      c4:	0c 94 e1 08 	jmp	0x11c2	; 0x11c2 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <handleData>:
#include "Master_communication.h"


void handleData(uint8_t temp)
{
	switch(temp) {
      ca:	82 30       	cpi	r24, 0x02	; 2
      cc:	49 f0       	breq	.+18     	; 0xe0 <handleData+0x16>
      ce:	83 30       	cpi	r24, 0x03	; 3
      d0:	59 f0       	breq	.+22     	; 0xe8 <handleData+0x1e>
      d2:	81 30       	cpi	r24, 0x01	; 1
      d4:	71 f4       	brne	.+28     	; 0xf2 <handleData+0x28>
		case 0x01: //START PICKUP button pressed
		pickUpItem = 1;
      d6:	80 93 58 01 	sts	0x0158, r24
		waitingForStartAbort = 1;
      da:	80 93 5e 01 	sts	0x015E, r24
		break;
      de:	08 95       	ret
		case 0x02: //END PICKUP button pressed
		waitingForEndPickup = 1;
      e0:	81 e0       	ldi	r24, 0x01	; 1
      e2:	80 93 8a 01 	sts	0x018A, r24
		break;
      e6:	08 95       	ret
		case 0x03: //ABORT PICKUP button pressed
		pickUpItem = 0;
      e8:	10 92 58 01 	sts	0x0158, r1
		waitingForStartAbort = 1;
      ec:	81 e0       	ldi	r24, 0x01	; 1
      ee:	80 93 5e 01 	sts	0x015E, r24
      f2:	08 95       	ret

000000f4 <bluetoothTX>:
}

void bluetoothTX(uint8_t txdata) {
	
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) );
      f4:	e0 ec       	ldi	r30, 0xC0	; 192
      f6:	f0 e0       	ldi	r31, 0x00	; 0
      f8:	90 81       	ld	r25, Z
      fa:	95 ff       	sbrs	r25, 5
      fc:	fd cf       	rjmp	.-6      	; 0xf8 <bluetoothTX+0x4>
	
	/* Put data into buffer, sends the data */
	UDR0 = txdata;
      fe:	80 93 c6 00 	sts	0x00C6, r24
     102:	08 95       	ret

00000104 <setupBluetoothRXTX>:
}

void setupBluetoothRXTX()
{
	waiting_for_instruction = 1;
     104:	81 e0       	ldi	r24, 0x01	; 1
     106:	80 93 84 01 	sts	0x0184, r24
	UCSR0B = (1<<RXEN0) | (1<<TXEN0) | (1 << RXCIE0); //Enable RX0, TX0 and RX complete interrupt
     10a:	88 e9       	ldi	r24, 0x98	; 152
     10c:	80 93 c1 00 	sts	0x00C1, r24
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); //set data length to 8-bit;
     110:	86 e0       	ldi	r24, 0x06	; 6
     112:	80 93 c2 00 	sts	0x00C2, r24
	UBRR0H = 0x00;
     116:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = 0x07; //Sets baudvalue in AVR to 7, which gives baude rate 115200. baudvalue = (Fcpu/baudrate*16)-1	
     11a:	87 e0       	ldi	r24, 0x07	; 7
     11c:	80 93 c4 00 	sts	0x00C4, r24
     120:	08 95       	ret

00000122 <__vector_2>:
#include "Bluetooth.h"
#include "warehouseMode.h"
#include "hd44780_low.h"

ISR(INT1_vect)			//Receive function. Data is transmitted from the sensor slave
{
     122:	1f 92       	push	r1
     124:	0f 92       	push	r0
     126:	0f b6       	in	r0, 0x3f	; 63
     128:	0f 92       	push	r0
     12a:	11 24       	eor	r1, r1
     12c:	0b b6       	in	r0, 0x3b	; 59
     12e:	0f 92       	push	r0
     130:	2f 93       	push	r18
     132:	3f 93       	push	r19
     134:	4f 93       	push	r20
     136:	5f 93       	push	r21
     138:	6f 93       	push	r22
     13a:	7f 93       	push	r23
     13c:	8f 93       	push	r24
     13e:	9f 93       	push	r25
     140:	af 93       	push	r26
     142:	bf 93       	push	r27
     144:	ef 93       	push	r30
     146:	ff 93       	push	r31
	Slave_Select(Sensor_Slave);	//slave select
     148:	80 91 86 01 	lds	r24, 0x0186
     14c:	f6 d5       	rcall	.+3052   	; 0xd3a <Slave_Select>
	sensor_data = Master_RX(0x01); //sending dummy
     14e:	81 e0       	ldi	r24, 0x01	; 1
     150:	e4 d5       	rcall	.+3016   	; 0xd1a <Master_RX>
     152:	80 93 3f 01 	sts	0x013F, r24
	
	if(sensor_data == 0b00001111 || sensor_data == 0b00011111)
     156:	80 91 3f 01 	lds	r24, 0x013F
     15a:	8f 30       	cpi	r24, 0x0F	; 15
     15c:	21 f0       	breq	.+8      	; 0x166 <__vector_2+0x44>
     15e:	80 91 3f 01 	lds	r24, 0x013F
     162:	8f 31       	cpi	r24, 0x1F	; 31
     164:	69 f4       	brne	.+26     	; 0x180 <__vector_2+0x5e>
	{
		stationLeftSensCounter++;
     166:	80 91 4f 01 	lds	r24, 0x014F
     16a:	8f 5f       	subi	r24, 0xFF	; 255
     16c:	80 93 4f 01 	sts	0x014F, r24
		if (stationLeftSensCounter == 10)
     170:	80 91 4f 01 	lds	r24, 0x014F
     174:	8a 30       	cpi	r24, 0x0A	; 10
     176:	e1 f5       	brne	.+120    	; 0x1f0 <__vector_2+0xce>
		{
			stationRightSide = 1;
     178:	81 e0       	ldi	r24, 0x01	; 1
     17a:	80 93 5d 01 	sts	0x015D, r24
     17e:	38 c0       	rjmp	.+112    	; 0x1f0 <__vector_2+0xce>
		}
	}	else if(sensor_data == 0b01111000 || sensor_data == 0b01111100)
     180:	80 91 3f 01 	lds	r24, 0x013F
     184:	88 37       	cpi	r24, 0x78	; 120
     186:	21 f0       	breq	.+8      	; 0x190 <__vector_2+0x6e>
     188:	80 91 3f 01 	lds	r24, 0x013F
     18c:	8c 37       	cpi	r24, 0x7C	; 124
     18e:	61 f4       	brne	.+24     	; 0x1a8 <__vector_2+0x86>
	{
		stationRightSensCounter++;
     190:	80 91 56 01 	lds	r24, 0x0156
     194:	8f 5f       	subi	r24, 0xFF	; 255
     196:	80 93 56 01 	sts	0x0156, r24
		if(stationRightSensCounter == 10)
     19a:	80 91 56 01 	lds	r24, 0x0156
     19e:	8a 30       	cpi	r24, 0x0A	; 10
     1a0:	39 f5       	brne	.+78     	; 0x1f0 <__vector_2+0xce>
		{
			stationRightSide = 0;
     1a2:	10 92 5d 01 	sts	0x015D, r1
     1a6:	24 c0       	rjmp	.+72     	; 0x1f0 <__vector_2+0xce>
		}
	} else
	{
		if(stationLeftSensCounter >= 10 || stationRightSensCounter >= 10)
     1a8:	80 91 4f 01 	lds	r24, 0x014F
     1ac:	8a 30       	cpi	r24, 0x0A	; 10
     1ae:	20 f4       	brcc	.+8      	; 0x1b8 <__vector_2+0x96>
     1b0:	80 91 56 01 	lds	r24, 0x0156
     1b4:	8a 30       	cpi	r24, 0x0A	; 10
     1b6:	c0 f0       	brcs	.+48     	; 0x1e8 <__vector_2+0xc6>
		{
			lineReadingCounter++;
     1b8:	80 91 4e 01 	lds	r24, 0x014E
     1bc:	8f 5f       	subi	r24, 0xFF	; 255
     1be:	80 93 4e 01 	sts	0x014E, r24
			if(lineReadingCounter == 150)
     1c2:	80 91 4e 01 	lds	r24, 0x014E
     1c6:	86 39       	cpi	r24, 0x96	; 150
     1c8:	99 f4       	brne	.+38     	; 0x1f0 <__vector_2+0xce>
			{
				TIMSK0 = 0;
     1ca:	10 92 6e 00 	sts	0x006E, r1
				wheel_steering_data = 0;
     1ce:	10 92 50 01 	sts	0x0150, r1
				TX_wheel_data();
     1d2:	28 d6       	rcall	.+3152   	; 0xe24 <TX_wheel_data>
				stationModeEnable = 1;
     1d4:	81 e0       	ldi	r24, 0x01	; 1
     1d6:	80 93 4a 01 	sts	0x014A, r24
				stationRightSensCounter = 0;
     1da:	10 92 56 01 	sts	0x0156, r1
				stationLeftSensCounter = 0;
     1de:	10 92 4f 01 	sts	0x014F, r1
				lineReadingCounter = 0;
     1e2:	10 92 4e 01 	sts	0x014E, r1
     1e6:	04 c0       	rjmp	.+8      	; 0x1f0 <__vector_2+0xce>
			}
		}
		else
		{
			stationLeftSensCounter = 0;
     1e8:	10 92 4f 01 	sts	0x014F, r1
			stationRightSensCounter = 0;
     1ec:	10 92 56 01 	sts	0x0156, r1
		}
		
	}
	//Slave_Select(Control_Slave);
}
     1f0:	ff 91       	pop	r31
     1f2:	ef 91       	pop	r30
     1f4:	bf 91       	pop	r27
     1f6:	af 91       	pop	r26
     1f8:	9f 91       	pop	r25
     1fa:	8f 91       	pop	r24
     1fc:	7f 91       	pop	r23
     1fe:	6f 91       	pop	r22
     200:	5f 91       	pop	r21
     202:	4f 91       	pop	r20
     204:	3f 91       	pop	r19
     206:	2f 91       	pop	r18
     208:	0f 90       	pop	r0
     20a:	0b be       	out	0x3b, r0	; 59
     20c:	0f 90       	pop	r0
     20e:	0f be       	out	0x3f, r0	; 63
     210:	0f 90       	pop	r0
     212:	1f 90       	pop	r1
     214:	18 95       	reti

00000216 <__vector_3>:

ISR(INT2_vect)
{
     216:	1f 92       	push	r1
     218:	0f 92       	push	r0
     21a:	0f b6       	in	r0, 0x3f	; 63
     21c:	0f 92       	push	r0
     21e:	11 24       	eor	r1, r1
     220:	0b b6       	in	r0, 0x3b	; 59
     222:	0f 92       	push	r0
     224:	2f 93       	push	r18
     226:	3f 93       	push	r19
     228:	4f 93       	push	r20
     22a:	5f 93       	push	r21
     22c:	6f 93       	push	r22
     22e:	7f 93       	push	r23
     230:	8f 93       	push	r24
     232:	9f 93       	push	r25
     234:	af 93       	push	r26
     236:	bf 93       	push	r27
     238:	ef 93       	push	r30
     23a:	ff 93       	push	r31
	Slave_Select(Control_Slave);
     23c:	80 91 90 01 	lds	r24, 0x0190
     240:	7c d5       	rcall	.+2808   	; 0xd3a <Slave_Select>
	finishedDrop = Master_RX(0x01);
     242:	81 e0       	ldi	r24, 0x01	; 1
     244:	6a d5       	rcall	.+2772   	; 0xd1a <Master_RX>
     246:	80 93 51 01 	sts	0x0151, r24
}
     24a:	ff 91       	pop	r31
     24c:	ef 91       	pop	r30
     24e:	bf 91       	pop	r27
     250:	af 91       	pop	r26
     252:	9f 91       	pop	r25
     254:	8f 91       	pop	r24
     256:	7f 91       	pop	r23
     258:	6f 91       	pop	r22
     25a:	5f 91       	pop	r21
     25c:	4f 91       	pop	r20
     25e:	3f 91       	pop	r19
     260:	2f 91       	pop	r18
     262:	0f 90       	pop	r0
     264:	0b be       	out	0x3b, r0	; 59
     266:	0f 90       	pop	r0
     268:	0f be       	out	0x3f, r0	; 63
     26a:	0f 90       	pop	r0
     26c:	1f 90       	pop	r1
     26e:	18 95       	reti

00000270 <__vector_16>:

/* Timer interrupt routine handling sensor data receive */
ISR(TIMER0_COMPA_vect)
{
     270:	1f 92       	push	r1
     272:	0f 92       	push	r0
     274:	0f b6       	in	r0, 0x3f	; 63
     276:	0f 92       	push	r0
     278:	11 24       	eor	r1, r1
     27a:	0b b6       	in	r0, 0x3b	; 59
     27c:	0f 92       	push	r0
     27e:	2f 93       	push	r18
     280:	3f 93       	push	r19
     282:	4f 93       	push	r20
     284:	5f 93       	push	r21
     286:	6f 93       	push	r22
     288:	7f 93       	push	r23
     28a:	8f 93       	push	r24
     28c:	9f 93       	push	r25
     28e:	af 93       	push	r26
     290:	bf 93       	push	r27
     292:	ef 93       	push	r30
     294:	ff 93       	push	r31
	if(stationModeEnable == 0)
     296:	80 91 4a 01 	lds	r24, 0x014A
     29a:	81 11       	cpse	r24, r1
     29c:	01 c0       	rjmp	.+2      	; 0x2a0 <__vector_16+0x30>
	{
		RX_sensor_data();
     29e:	b5 d5       	rcall	.+2922   	; 0xe0a <RX_sensor_data>
	}
}
     2a0:	ff 91       	pop	r31
     2a2:	ef 91       	pop	r30
     2a4:	bf 91       	pop	r27
     2a6:	af 91       	pop	r26
     2a8:	9f 91       	pop	r25
     2aa:	8f 91       	pop	r24
     2ac:	7f 91       	pop	r23
     2ae:	6f 91       	pop	r22
     2b0:	5f 91       	pop	r21
     2b2:	4f 91       	pop	r20
     2b4:	3f 91       	pop	r19
     2b6:	2f 91       	pop	r18
     2b8:	0f 90       	pop	r0
     2ba:	0b be       	out	0x3b, r0	; 59
     2bc:	0f 90       	pop	r0
     2be:	0f be       	out	0x3f, r0	; 63
     2c0:	0f 90       	pop	r0
     2c2:	1f 90       	pop	r1
     2c4:	18 95       	reti

000002c6 <__vector_17>:

/* Timer interrupt routine handling sensor data transmission*/
ISR(TIMER0_COMPB_vect)
{
     2c6:	1f 92       	push	r1
     2c8:	0f 92       	push	r0
     2ca:	0f b6       	in	r0, 0x3f	; 63
     2cc:	0f 92       	push	r0
     2ce:	11 24       	eor	r1, r1
     2d0:	0b b6       	in	r0, 0x3b	; 59
     2d2:	0f 92       	push	r0
     2d4:	2f 93       	push	r18
     2d6:	3f 93       	push	r19
     2d8:	4f 93       	push	r20
     2da:	5f 93       	push	r21
     2dc:	6f 93       	push	r22
     2de:	7f 93       	push	r23
     2e0:	8f 93       	push	r24
     2e2:	9f 93       	push	r25
     2e4:	af 93       	push	r26
     2e6:	bf 93       	push	r27
     2e8:	ef 93       	push	r30
     2ea:	ff 93       	push	r31
	if(stationModeEnable == 0)
     2ec:	80 91 4a 01 	lds	r24, 0x014A
     2f0:	81 11       	cpse	r24, r1
     2f2:	04 c0       	rjmp	.+8      	; 0x2fc <__vector_17+0x36>
	{
		TX_sensor_data();
     2f4:	7b d5       	rcall	.+2806   	; 0xdec <TX_sensor_data>
		bluetoothTX(sensor_data);
     2f6:	80 91 3f 01 	lds	r24, 0x013F
     2fa:	fc de       	rcall	.-520    	; 0xf4 <bluetoothTX>
	}
}
     2fc:	ff 91       	pop	r31
     2fe:	ef 91       	pop	r30
     300:	bf 91       	pop	r27
     302:	af 91       	pop	r26
     304:	9f 91       	pop	r25
     306:	8f 91       	pop	r24
     308:	7f 91       	pop	r23
     30a:	6f 91       	pop	r22
     30c:	5f 91       	pop	r21
     30e:	4f 91       	pop	r20
     310:	3f 91       	pop	r19
     312:	2f 91       	pop	r18
     314:	0f 90       	pop	r0
     316:	0b be       	out	0x3b, r0	; 59
     318:	0f 90       	pop	r0
     31a:	0f be       	out	0x3f, r0	; 63
     31c:	0f 90       	pop	r0
     31e:	1f 90       	pop	r1
     320:	18 95       	reti

00000322 <__vector_28>:
}

/*
When the receive of one byte is complete, this interrupt will run.
*/
ISR(USART1_RX_vect){
     322:	1f 92       	push	r1
     324:	0f 92       	push	r0
     326:	0f b6       	in	r0, 0x3f	; 63
     328:	0f 92       	push	r0
     32a:	11 24       	eor	r1, r1
     32c:	0b b6       	in	r0, 0x3b	; 59
     32e:	0f 92       	push	r0
     330:	2f 93       	push	r18
     332:	3f 93       	push	r19
     334:	4f 93       	push	r20
     336:	5f 93       	push	r21
     338:	6f 93       	push	r22
     33a:	7f 93       	push	r23
     33c:	8f 93       	push	r24
     33e:	9f 93       	push	r25
     340:	af 93       	push	r26
     342:	bf 93       	push	r27
     344:	ef 93       	push	r30
     346:	ff 93       	push	r31
	newStream[digit] = UDR1;
     348:	80 91 3e 01 	lds	r24, 0x013E
     34c:	90 91 ce 00 	lds	r25, 0x00CE
     350:	e8 2f       	mov	r30, r24
     352:	f0 e0       	ldi	r31, 0x00	; 0
     354:	e0 5d       	subi	r30, 0xD0	; 208
     356:	fe 4f       	sbci	r31, 0xFE	; 254
     358:	90 83       	st	Z, r25
	digit++;
     35a:	8f 5f       	subi	r24, 0xFF	; 255
	if (digit == 12) {
     35c:	8c 30       	cpi	r24, 0x0C	; 12
     35e:	19 f0       	breq	.+6      	; 0x366 <__vector_28+0x44>
/*
When the receive of one byte is complete, this interrupt will run.
*/
ISR(USART1_RX_vect){
	newStream[digit] = UDR1;
	digit++;
     360:	80 93 3e 01 	sts	0x013E, r24
     364:	07 c0       	rjmp	.+14     	; 0x374 <__vector_28+0x52>
	if (digit == 12) {
		digit = 0;
     366:	10 92 3e 01 	sts	0x013E, r1
		streamFilled = 1;
     36a:	81 e0       	ldi	r24, 0x01	; 1
     36c:	80 93 57 01 	sts	0x0157, r24
		powerRFID(0);
     370:	80 e0       	ldi	r24, 0x00	; 0
     372:	e6 d5       	rcall	.+3020   	; 0xf40 <powerRFID>
	}
}
     374:	ff 91       	pop	r31
     376:	ef 91       	pop	r30
     378:	bf 91       	pop	r27
     37a:	af 91       	pop	r26
     37c:	9f 91       	pop	r25
     37e:	8f 91       	pop	r24
     380:	7f 91       	pop	r23
     382:	6f 91       	pop	r22
     384:	5f 91       	pop	r21
     386:	4f 91       	pop	r20
     388:	3f 91       	pop	r19
     38a:	2f 91       	pop	r18
     38c:	0f 90       	pop	r0
     38e:	0b be       	out	0x3b, r0	; 59
     390:	0f 90       	pop	r0
     392:	0f be       	out	0x3f, r0	; 63
     394:	0f 90       	pop	r0
     396:	1f 90       	pop	r1
     398:	18 95       	reti

0000039a <initManualMode>:
/*Function that initiates manual mode*/
void initManualMode()
{
	//PCICR = 0x08; //sets PCINT31..24 as possible external interrupt port
	//PCMSK3 = 0x40; //enables external interrupt on PORT PCINT30   - pin 20
	automaticModeEnabled = 0;
     39a:	10 92 3d 01 	sts	0x013D, r1
	manualModeEnabled = 1;
     39e:	81 e0       	ldi	r24, 0x01	; 1
     3a0:	80 93 8e 01 	sts	0x018E, r24
	stationLeftSensCounter = 0;
     3a4:	10 92 4f 01 	sts	0x014F, r1
	stationRightSensCounter = 0;
     3a8:	10 92 56 01 	sts	0x0156, r1
	lineReadingCounter = 0;
     3ac:	10 92 4e 01 	sts	0x014E, r1
     3b0:	08 95       	ret

000003b2 <main>:
// }

int main(void)
{
	
	setupWarehouse();
     3b2:	86 d6       	rcall	.+3340   	; 0x10c0 <setupWarehouse>
	initManualMode();
     3b4:	f2 df       	rcall	.-28     	; 0x39a <initManualMode>
	SPI_Init_Master();
     3b6:	68 d4       	rcall	.+2256   	; 0xc88 <SPI_Init_Master>
	setupBluetoothRXTX();
     3b8:	a5 de       	rcall	.-694    	; 0x104 <setupBluetoothRXTX>
	setupRFID();
     3ba:	6f d6       	rcall	.+3294   	; 0x109a <setupRFID>
	setupLCD();
     3bc:	94 d6       	rcall	.+3368   	; 0x10e6 <setupLCD>
	
	
	while(1)
	{
		if(stationModeEnable == 1)
     3be:	80 91 4a 01 	lds	r24, 0x014A
     3c2:	88 23       	and	r24, r24
     3c4:	e1 f3       	breq	.-8      	; 0x3be <main+0xc>
		{
			stationMode();
     3c6:	54 d6       	rcall	.+3240   	; 0x1070 <stationMode>
     3c8:	fa cf       	rjmp	.-12     	; 0x3be <main+0xc>

000003ca <toggleMode>:
	lineReadingCounter = 0;
}

void toggleMode()
{
	if(automaticModeEnabled == 0)
     3ca:	80 91 3d 01 	lds	r24, 0x013D
     3ce:	81 11       	cpse	r24, r1
     3d0:	09 c0       	rjmp	.+18     	; 0x3e4 <toggleMode+0x1a>
	{
		automaticModeEnabled = 1;
     3d2:	81 e0       	ldi	r24, 0x01	; 1
     3d4:	80 93 3d 01 	sts	0x013D, r24
		manualModeEnabled = 0;
     3d8:	10 92 8e 01 	sts	0x018E, r1
		TIMSK0 = 0x06;
     3dc:	86 e0       	ldi	r24, 0x06	; 6
     3de:	80 93 6e 00 	sts	0x006E, r24
     3e2:	08 95       	ret
		
	} else if (manualModeEnabled == 0)
     3e4:	80 91 8e 01 	lds	r24, 0x018E
     3e8:	81 11       	cpse	r24, r1
     3ea:	07 c0       	rjmp	.+14     	; 0x3fa <toggleMode+0x30>
	{
		automaticModeEnabled = 0;
     3ec:	10 92 3d 01 	sts	0x013D, r1
		manualModeEnabled = 1;
     3f0:	81 e0       	ldi	r24, 0x01	; 1
     3f2:	80 93 8e 01 	sts	0x018E, r24
		TIMSK0 = 0;
     3f6:	10 92 6e 00 	sts	0x006E, r1
     3fa:	08 95       	ret

000003fc <__vector_20>:
}


/* Interrupt routine for receiving bluetooth data */
ISR(USART0_RX_vect)
{
     3fc:	1f 92       	push	r1
     3fe:	0f 92       	push	r0
     400:	0f b6       	in	r0, 0x3f	; 63
     402:	0f 92       	push	r0
     404:	11 24       	eor	r1, r1
     406:	0b b6       	in	r0, 0x3b	; 59
     408:	0f 92       	push	r0
     40a:	2f 93       	push	r18
     40c:	3f 93       	push	r19
     40e:	4f 93       	push	r20
     410:	5f 93       	push	r21
     412:	6f 93       	push	r22
     414:	7f 93       	push	r23
     416:	8f 93       	push	r24
     418:	9f 93       	push	r25
     41a:	af 93       	push	r26
     41c:	bf 93       	push	r27
     41e:	ef 93       	push	r30
     420:	ff 93       	push	r31
	btdata = UDR0;
     422:	80 91 c6 00 	lds	r24, 0x00C6
     426:	80 93 5c 01 	sts	0x015C, r24
	if (waiting_for_instruction == 1) {
     42a:	90 91 84 01 	lds	r25, 0x0184
     42e:	91 30       	cpi	r25, 0x01	; 1
     430:	39 f5       	brne	.+78     	; 0x480 <__vector_20+0x84>
		waiting_for_instruction = 0;
     432:	10 92 84 01 	sts	0x0184, r1
		if (btdata == 1) {
     436:	81 30       	cpi	r24, 0x01	; 1
     438:	19 f4       	brne	.+6      	; 0x440 <__vector_20+0x44>
			component = WHEEL;
     43a:	80 93 55 01 	sts	0x0155, r24
     43e:	50 c0       	rjmp	.+160    	; 0x4e0 <__vector_20+0xe4>
		}
		else if(btdata == 2) {
     440:	82 30       	cpi	r24, 0x02	; 2
     442:	19 f4       	brne	.+6      	; 0x44a <__vector_20+0x4e>
			component = ARM;
     444:	80 93 55 01 	sts	0x0155, r24
     448:	4b c0       	rjmp	.+150    	; 0x4e0 <__vector_20+0xe4>
		}
		else if(btdata == 3) {
     44a:	83 30       	cpi	r24, 0x03	; 3
     44c:	19 f4       	brne	.+6      	; 0x454 <__vector_20+0x58>
			component = CALINSTR;
     44e:	80 93 55 01 	sts	0x0155, r24
     452:	46 c0       	rjmp	.+140    	; 0x4e0 <__vector_20+0xe4>
		}
		else if(btdata == 4) {
     454:	84 30       	cpi	r24, 0x04	; 4
     456:	19 f4       	brne	.+6      	; 0x45e <__vector_20+0x62>
			component = PCONINSTR;
     458:	80 93 55 01 	sts	0x0155, r24
     45c:	41 c0       	rjmp	.+130    	; 0x4e0 <__vector_20+0xe4>
		}
		else if(btdata == 5) {
     45e:	85 30       	cpi	r24, 0x05	; 5
     460:	19 f4       	brne	.+6      	; 0x468 <__vector_20+0x6c>
			component = KPINSTR;
     462:	80 93 55 01 	sts	0x0155, r24
     466:	3c c0       	rjmp	.+120    	; 0x4e0 <__vector_20+0xe4>
		}
		else if(btdata == 6) {
     468:	86 30       	cpi	r24, 0x06	; 6
     46a:	19 f4       	brne	.+6      	; 0x472 <__vector_20+0x76>
			component = KDINSTR;
     46c:	80 93 55 01 	sts	0x0155, r24
     470:	37 c0       	rjmp	.+110    	; 0x4e0 <__vector_20+0xe4>
		}
		else if(btdata == 7) { //Toggle mode instruction
     472:	87 30       	cpi	r24, 0x07	; 7
     474:	a9 f5       	brne	.+106    	; 0x4e0 <__vector_20+0xe4>
			waiting_for_instruction = 1;
     476:	81 e0       	ldi	r24, 0x01	; 1
     478:	80 93 84 01 	sts	0x0184, r24
			toggleMode();
     47c:	a6 df       	rcall	.-180    	; 0x3ca <toggleMode>
     47e:	30 c0       	rjmp	.+96     	; 0x4e0 <__vector_20+0xe4>
		}
	}
	else {
		waiting_for_instruction = 1;
     480:	91 e0       	ldi	r25, 0x01	; 1
     482:	90 93 84 01 	sts	0x0184, r25
		if (component == WHEEL) {
     486:	90 91 55 01 	lds	r25, 0x0155
     48a:	91 30       	cpi	r25, 0x01	; 1
     48c:	41 f4       	brne	.+16     	; 0x49e <__vector_20+0xa2>
			if(manualModeEnabled == 1) {
     48e:	90 91 8e 01 	lds	r25, 0x018E
     492:	91 30       	cpi	r25, 0x01	; 1
     494:	29 f5       	brne	.+74     	; 0x4e0 <__vector_20+0xe4>
				wheel_steering_data = btdata;
     496:	80 93 50 01 	sts	0x0150, r24
				TX_wheel_data();
     49a:	c4 d4       	rcall	.+2440   	; 0xe24 <TX_wheel_data>
     49c:	21 c0       	rjmp	.+66     	; 0x4e0 <__vector_20+0xe4>
			}
		}
		else if (component == ARM) {
     49e:	90 91 55 01 	lds	r25, 0x0155
     4a2:	92 30       	cpi	r25, 0x02	; 2
     4a4:	21 f4       	brne	.+8      	; 0x4ae <__vector_20+0xb2>
			robot_arm_data = btdata;
     4a6:	80 93 3c 01 	sts	0x013C, r24
			TX_arm_data();
     4aa:	c8 d4       	rcall	.+2448   	; 0xe3c <TX_arm_data>
     4ac:	19 c0       	rjmp	.+50     	; 0x4e0 <__vector_20+0xe4>
		}
		else if (component == CALINSTR) {
     4ae:	90 91 55 01 	lds	r25, 0x0155
     4b2:	93 30       	cpi	r25, 0x03	; 3
     4b4:	a9 f0       	breq	.+42     	; 0x4e0 <__vector_20+0xe4>
			//calibration();
		}
		else if (component == PCONINSTR) {
     4b6:	90 91 55 01 	lds	r25, 0x0155
     4ba:	94 30       	cpi	r25, 0x04	; 4
     4bc:	11 f4       	brne	.+4      	; 0x4c2 <__vector_20+0xc6>
			handleData(btdata);
     4be:	05 de       	rcall	.-1014   	; 0xca <handleData>
     4c0:	0f c0       	rjmp	.+30     	; 0x4e0 <__vector_20+0xe4>
		}
		else if (component == KPINSTR) {
     4c2:	90 91 55 01 	lds	r25, 0x0155
     4c6:	95 30       	cpi	r25, 0x05	; 5
     4c8:	21 f4       	brne	.+8      	; 0x4d2 <__vector_20+0xd6>
			Kp = btdata;
     4ca:	80 93 87 01 	sts	0x0187, r24
			TXKpData();
     4ce:	bf d4       	rcall	.+2430   	; 0xe4e <TXKpData>
     4d0:	07 c0       	rjmp	.+14     	; 0x4e0 <__vector_20+0xe4>
		}
		else if (component == KDINSTR) {
     4d2:	90 91 55 01 	lds	r25, 0x0155
     4d6:	96 30       	cpi	r25, 0x06	; 6
     4d8:	19 f4       	brne	.+6      	; 0x4e0 <__vector_20+0xe4>
			Kd = btdata;
     4da:	80 93 85 01 	sts	0x0185, r24
			TXKpData();
     4de:	b7 d4       	rcall	.+2414   	; 0xe4e <TXKpData>
		}
	}
}
     4e0:	ff 91       	pop	r31
     4e2:	ef 91       	pop	r30
     4e4:	bf 91       	pop	r27
     4e6:	af 91       	pop	r26
     4e8:	9f 91       	pop	r25
     4ea:	8f 91       	pop	r24
     4ec:	7f 91       	pop	r23
     4ee:	6f 91       	pop	r22
     4f0:	5f 91       	pop	r21
     4f2:	4f 91       	pop	r20
     4f4:	3f 91       	pop	r19
     4f6:	2f 91       	pop	r18
     4f8:	0f 90       	pop	r0
     4fa:	0b be       	out	0x3b, r0	; 59
     4fc:	0f 90       	pop	r0
     4fe:	0f be       	out	0x3f, r0	; 63
     500:	0f 90       	pop	r0
     502:	1f 90       	pop	r1
     504:	18 95       	reti

00000506 <_hd44780_l_func>:
     506:	0f 93       	push	r16
     508:	1f 93       	push	r17
     50a:	cf 93       	push	r28
     50c:	df 93       	push	r29
     50e:	fc 01       	movw	r30, r24
     510:	90 81       	ld	r25, Z
     512:	a3 85       	ldd	r26, Z+11	; 0x0b
     514:	b4 85       	ldd	r27, Z+12	; 0x0c
     516:	61 11       	cpse	r22, r1
     518:	0e c0       	rjmp	.+28     	; 0x536 <_hd44780_l_func+0x30>
     51a:	3c 91       	ld	r19, X
     51c:	61 e0       	ldi	r22, 0x01	; 1
     51e:	70 e0       	ldi	r23, 0x00	; 0
     520:	eb 01       	movw	r28, r22
     522:	02 c0       	rjmp	.+4      	; 0x528 <_hd44780_l_func+0x22>
     524:	cc 0f       	add	r28, r28
     526:	dd 1f       	adc	r29, r29
     528:	9a 95       	dec	r25
     52a:	e2 f7       	brpl	.-8      	; 0x524 <_hd44780_l_func+0x1e>
     52c:	ce 01       	movw	r24, r28
     52e:	80 95       	com	r24
     530:	83 23       	and	r24, r19
     532:	8c 93       	st	X, r24
     534:	0c c0       	rjmp	.+24     	; 0x54e <_hd44780_l_func+0x48>
     536:	3c 91       	ld	r19, X
     538:	61 e0       	ldi	r22, 0x01	; 1
     53a:	70 e0       	ldi	r23, 0x00	; 0
     53c:	eb 01       	movw	r28, r22
     53e:	02 c0       	rjmp	.+4      	; 0x544 <_hd44780_l_func+0x3e>
     540:	cc 0f       	add	r28, r28
     542:	dd 1f       	adc	r29, r29
     544:	9a 95       	dec	r25
     546:	e2 f7       	brpl	.-8      	; 0x540 <_hd44780_l_func+0x3a>
     548:	ce 01       	movw	r24, r28
     54a:	83 2b       	or	r24, r19
     54c:	8c 93       	st	X, r24
     54e:	91 81       	ldd	r25, Z+1	; 0x01
     550:	a5 85       	ldd	r26, Z+13	; 0x0d
     552:	b6 85       	ldd	r27, Z+14	; 0x0e
     554:	41 11       	cpse	r20, r1
     556:	0e c0       	rjmp	.+28     	; 0x574 <_hd44780_l_func+0x6e>
     558:	3c 91       	ld	r19, X
     55a:	41 e0       	ldi	r20, 0x01	; 1
     55c:	50 e0       	ldi	r21, 0x00	; 0
     55e:	ba 01       	movw	r22, r20
     560:	02 c0       	rjmp	.+4      	; 0x566 <_hd44780_l_func+0x60>
     562:	66 0f       	add	r22, r22
     564:	77 1f       	adc	r23, r23
     566:	9a 95       	dec	r25
     568:	e2 f7       	brpl	.-8      	; 0x562 <_hd44780_l_func+0x5c>
     56a:	cb 01       	movw	r24, r22
     56c:	80 95       	com	r24
     56e:	83 23       	and	r24, r19
     570:	8c 93       	st	X, r24
     572:	0c c0       	rjmp	.+24     	; 0x58c <_hd44780_l_func+0x86>
     574:	3c 91       	ld	r19, X
     576:	41 e0       	ldi	r20, 0x01	; 1
     578:	50 e0       	ldi	r21, 0x00	; 0
     57a:	ea 01       	movw	r28, r20
     57c:	02 c0       	rjmp	.+4      	; 0x582 <_hd44780_l_func+0x7c>
     57e:	cc 0f       	add	r28, r28
     580:	dd 1f       	adc	r29, r29
     582:	9a 95       	dec	r25
     584:	e2 f7       	brpl	.-8      	; 0x57e <_hd44780_l_func+0x78>
     586:	ce 01       	movw	r24, r28
     588:	83 2b       	or	r24, r19
     58a:	8c 93       	st	X, r24
     58c:	93 81       	ldd	r25, Z+3	; 0x03
     58e:	a1 89       	ldd	r26, Z+17	; 0x11
     590:	b2 89       	ldd	r27, Z+18	; 0x12
     592:	22 23       	and	r18, r18
     594:	74 f0       	brlt	.+28     	; 0x5b2 <_hd44780_l_func+0xac>
     596:	3c 91       	ld	r19, X
     598:	41 e0       	ldi	r20, 0x01	; 1
     59a:	50 e0       	ldi	r21, 0x00	; 0
     59c:	ba 01       	movw	r22, r20
     59e:	02 c0       	rjmp	.+4      	; 0x5a4 <_hd44780_l_func+0x9e>
     5a0:	66 0f       	add	r22, r22
     5a2:	77 1f       	adc	r23, r23
     5a4:	9a 95       	dec	r25
     5a6:	e2 f7       	brpl	.-8      	; 0x5a0 <_hd44780_l_func+0x9a>
     5a8:	cb 01       	movw	r24, r22
     5aa:	80 95       	com	r24
     5ac:	83 23       	and	r24, r19
     5ae:	8c 93       	st	X, r24
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <_hd44780_l_func+0xc4>
     5b2:	3c 91       	ld	r19, X
     5b4:	41 e0       	ldi	r20, 0x01	; 1
     5b6:	50 e0       	ldi	r21, 0x00	; 0
     5b8:	ea 01       	movw	r28, r20
     5ba:	02 c0       	rjmp	.+4      	; 0x5c0 <_hd44780_l_func+0xba>
     5bc:	cc 0f       	add	r28, r28
     5be:	dd 1f       	adc	r29, r29
     5c0:	9a 95       	dec	r25
     5c2:	e2 f7       	brpl	.-8      	; 0x5bc <_hd44780_l_func+0xb6>
     5c4:	ce 01       	movw	r24, r28
     5c6:	83 2b       	or	r24, r19
     5c8:	8c 93       	st	X, r24
     5ca:	94 81       	ldd	r25, Z+4	; 0x04
     5cc:	a3 89       	ldd	r26, Z+19	; 0x13
     5ce:	b4 89       	ldd	r27, Z+20	; 0x14
     5d0:	26 fd       	sbrc	r18, 6
     5d2:	0e c0       	rjmp	.+28     	; 0x5f0 <_hd44780_l_func+0xea>
     5d4:	3c 91       	ld	r19, X
     5d6:	41 e0       	ldi	r20, 0x01	; 1
     5d8:	50 e0       	ldi	r21, 0x00	; 0
     5da:	ba 01       	movw	r22, r20
     5dc:	02 c0       	rjmp	.+4      	; 0x5e2 <_hd44780_l_func+0xdc>
     5de:	66 0f       	add	r22, r22
     5e0:	77 1f       	adc	r23, r23
     5e2:	9a 95       	dec	r25
     5e4:	e2 f7       	brpl	.-8      	; 0x5de <_hd44780_l_func+0xd8>
     5e6:	cb 01       	movw	r24, r22
     5e8:	80 95       	com	r24
     5ea:	83 23       	and	r24, r19
     5ec:	8c 93       	st	X, r24
     5ee:	0c c0       	rjmp	.+24     	; 0x608 <_hd44780_l_func+0x102>
     5f0:	3c 91       	ld	r19, X
     5f2:	41 e0       	ldi	r20, 0x01	; 1
     5f4:	50 e0       	ldi	r21, 0x00	; 0
     5f6:	ea 01       	movw	r28, r20
     5f8:	02 c0       	rjmp	.+4      	; 0x5fe <_hd44780_l_func+0xf8>
     5fa:	cc 0f       	add	r28, r28
     5fc:	dd 1f       	adc	r29, r29
     5fe:	9a 95       	dec	r25
     600:	e2 f7       	brpl	.-8      	; 0x5fa <_hd44780_l_func+0xf4>
     602:	ce 01       	movw	r24, r28
     604:	83 2b       	or	r24, r19
     606:	8c 93       	st	X, r24
     608:	95 81       	ldd	r25, Z+5	; 0x05
     60a:	a5 89       	ldd	r26, Z+21	; 0x15
     60c:	b6 89       	ldd	r27, Z+22	; 0x16
     60e:	25 fd       	sbrc	r18, 5
     610:	0e c0       	rjmp	.+28     	; 0x62e <_hd44780_l_func+0x128>
     612:	3c 91       	ld	r19, X
     614:	41 e0       	ldi	r20, 0x01	; 1
     616:	50 e0       	ldi	r21, 0x00	; 0
     618:	ba 01       	movw	r22, r20
     61a:	02 c0       	rjmp	.+4      	; 0x620 <_hd44780_l_func+0x11a>
     61c:	66 0f       	add	r22, r22
     61e:	77 1f       	adc	r23, r23
     620:	9a 95       	dec	r25
     622:	e2 f7       	brpl	.-8      	; 0x61c <_hd44780_l_func+0x116>
     624:	cb 01       	movw	r24, r22
     626:	80 95       	com	r24
     628:	83 23       	and	r24, r19
     62a:	8c 93       	st	X, r24
     62c:	0c c0       	rjmp	.+24     	; 0x646 <_hd44780_l_func+0x140>
     62e:	3c 91       	ld	r19, X
     630:	41 e0       	ldi	r20, 0x01	; 1
     632:	50 e0       	ldi	r21, 0x00	; 0
     634:	ea 01       	movw	r28, r20
     636:	02 c0       	rjmp	.+4      	; 0x63c <_hd44780_l_func+0x136>
     638:	cc 0f       	add	r28, r28
     63a:	dd 1f       	adc	r29, r29
     63c:	9a 95       	dec	r25
     63e:	e2 f7       	brpl	.-8      	; 0x638 <_hd44780_l_func+0x132>
     640:	ce 01       	movw	r24, r28
     642:	83 2b       	or	r24, r19
     644:	8c 93       	st	X, r24
     646:	96 81       	ldd	r25, Z+6	; 0x06
     648:	a7 89       	ldd	r26, Z+23	; 0x17
     64a:	b0 8d       	ldd	r27, Z+24	; 0x18
     64c:	24 fd       	sbrc	r18, 4
     64e:	0e c0       	rjmp	.+28     	; 0x66c <_hd44780_l_func+0x166>
     650:	3c 91       	ld	r19, X
     652:	41 e0       	ldi	r20, 0x01	; 1
     654:	50 e0       	ldi	r21, 0x00	; 0
     656:	ba 01       	movw	r22, r20
     658:	02 c0       	rjmp	.+4      	; 0x65e <_hd44780_l_func+0x158>
     65a:	66 0f       	add	r22, r22
     65c:	77 1f       	adc	r23, r23
     65e:	9a 95       	dec	r25
     660:	e2 f7       	brpl	.-8      	; 0x65a <_hd44780_l_func+0x154>
     662:	cb 01       	movw	r24, r22
     664:	80 95       	com	r24
     666:	83 23       	and	r24, r19
     668:	8c 93       	st	X, r24
     66a:	0c c0       	rjmp	.+24     	; 0x684 <_hd44780_l_func+0x17e>
     66c:	3c 91       	ld	r19, X
     66e:	41 e0       	ldi	r20, 0x01	; 1
     670:	50 e0       	ldi	r21, 0x00	; 0
     672:	ea 01       	movw	r28, r20
     674:	02 c0       	rjmp	.+4      	; 0x67a <_hd44780_l_func+0x174>
     676:	cc 0f       	add	r28, r28
     678:	dd 1f       	adc	r29, r29
     67a:	9a 95       	dec	r25
     67c:	e2 f7       	brpl	.-8      	; 0x676 <_hd44780_l_func+0x170>
     67e:	ce 01       	movw	r24, r28
     680:	83 2b       	or	r24, r19
     682:	8c 93       	st	X, r24
     684:	83 a1       	ldd	r24, Z+35	; 0x23
     686:	81 11       	cpse	r24, r1
     688:	1f c0       	rjmp	.+62     	; 0x6c8 <_hd44780_l_func+0x1c2>
     68a:	00 c0       	rjmp	.+0      	; 0x68c <_hd44780_l_func+0x186>
     68c:	a7 85       	ldd	r26, Z+15	; 0x0f
     68e:	b0 89       	ldd	r27, Z+16	; 0x10
     690:	3c 91       	ld	r19, X
     692:	81 e0       	ldi	r24, 0x01	; 1
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	ac 01       	movw	r20, r24
     698:	02 80       	ldd	r0, Z+2	; 0x02
     69a:	02 c0       	rjmp	.+4      	; 0x6a0 <_hd44780_l_func+0x19a>
     69c:	44 0f       	add	r20, r20
     69e:	55 1f       	adc	r21, r21
     6a0:	0a 94       	dec	r0
     6a2:	e2 f7       	brpl	.-8      	; 0x69c <_hd44780_l_func+0x196>
     6a4:	43 2b       	or	r20, r19
     6a6:	4c 93       	st	X, r20
     6a8:	00 c0       	rjmp	.+0      	; 0x6aa <_hd44780_l_func+0x1a4>
     6aa:	00 c0       	rjmp	.+0      	; 0x6ac <_hd44780_l_func+0x1a6>
     6ac:	a7 85       	ldd	r26, Z+15	; 0x0f
     6ae:	b0 89       	ldd	r27, Z+16	; 0x10
     6b0:	3c 91       	ld	r19, X
     6b2:	02 80       	ldd	r0, Z+2	; 0x02
     6b4:	02 c0       	rjmp	.+4      	; 0x6ba <_hd44780_l_func+0x1b4>
     6b6:	88 0f       	add	r24, r24
     6b8:	99 1f       	adc	r25, r25
     6ba:	0a 94       	dec	r0
     6bc:	e2 f7       	brpl	.-8      	; 0x6b6 <_hd44780_l_func+0x1b0>
     6be:	80 95       	com	r24
     6c0:	83 23       	and	r24, r19
     6c2:	8c 93       	st	X, r24
     6c4:	00 c0       	rjmp	.+0      	; 0x6c6 <_hd44780_l_func+0x1c0>
     6c6:	00 c0       	rjmp	.+0      	; 0x6c8 <_hd44780_l_func+0x1c2>
     6c8:	83 a1       	ldd	r24, Z+35	; 0x23
     6ca:	81 30       	cpi	r24, 0x01	; 1
     6cc:	09 f0       	breq	.+2      	; 0x6d0 <_hd44780_l_func+0x1ca>
     6ce:	7d c0       	rjmp	.+250    	; 0x7ca <_hd44780_l_func+0x2c4>
     6d0:	97 81       	ldd	r25, Z+7	; 0x07
     6d2:	a1 8d       	ldd	r26, Z+25	; 0x19
     6d4:	b2 8d       	ldd	r27, Z+26	; 0x1a
     6d6:	23 fd       	sbrc	r18, 3
     6d8:	0e c0       	rjmp	.+28     	; 0x6f6 <_hd44780_l_func+0x1f0>
     6da:	3c 91       	ld	r19, X
     6dc:	41 e0       	ldi	r20, 0x01	; 1
     6de:	50 e0       	ldi	r21, 0x00	; 0
     6e0:	ba 01       	movw	r22, r20
     6e2:	02 c0       	rjmp	.+4      	; 0x6e8 <_hd44780_l_func+0x1e2>
     6e4:	66 0f       	add	r22, r22
     6e6:	77 1f       	adc	r23, r23
     6e8:	9a 95       	dec	r25
     6ea:	e2 f7       	brpl	.-8      	; 0x6e4 <_hd44780_l_func+0x1de>
     6ec:	cb 01       	movw	r24, r22
     6ee:	80 95       	com	r24
     6f0:	83 23       	and	r24, r19
     6f2:	8c 93       	st	X, r24
     6f4:	0c c0       	rjmp	.+24     	; 0x70e <_hd44780_l_func+0x208>
     6f6:	3c 91       	ld	r19, X
     6f8:	41 e0       	ldi	r20, 0x01	; 1
     6fa:	50 e0       	ldi	r21, 0x00	; 0
     6fc:	ea 01       	movw	r28, r20
     6fe:	02 c0       	rjmp	.+4      	; 0x704 <_hd44780_l_func+0x1fe>
     700:	cc 0f       	add	r28, r28
     702:	dd 1f       	adc	r29, r29
     704:	9a 95       	dec	r25
     706:	e2 f7       	brpl	.-8      	; 0x700 <_hd44780_l_func+0x1fa>
     708:	ce 01       	movw	r24, r28
     70a:	83 2b       	or	r24, r19
     70c:	8c 93       	st	X, r24
     70e:	90 85       	ldd	r25, Z+8	; 0x08
     710:	a3 8d       	ldd	r26, Z+27	; 0x1b
     712:	b4 8d       	ldd	r27, Z+28	; 0x1c
     714:	22 fd       	sbrc	r18, 2
     716:	0e c0       	rjmp	.+28     	; 0x734 <_hd44780_l_func+0x22e>
     718:	3c 91       	ld	r19, X
     71a:	41 e0       	ldi	r20, 0x01	; 1
     71c:	50 e0       	ldi	r21, 0x00	; 0
     71e:	ba 01       	movw	r22, r20
     720:	02 c0       	rjmp	.+4      	; 0x726 <_hd44780_l_func+0x220>
     722:	66 0f       	add	r22, r22
     724:	77 1f       	adc	r23, r23
     726:	9a 95       	dec	r25
     728:	e2 f7       	brpl	.-8      	; 0x722 <_hd44780_l_func+0x21c>
     72a:	cb 01       	movw	r24, r22
     72c:	80 95       	com	r24
     72e:	83 23       	and	r24, r19
     730:	8c 93       	st	X, r24
     732:	0c c0       	rjmp	.+24     	; 0x74c <_hd44780_l_func+0x246>
     734:	3c 91       	ld	r19, X
     736:	41 e0       	ldi	r20, 0x01	; 1
     738:	50 e0       	ldi	r21, 0x00	; 0
     73a:	ea 01       	movw	r28, r20
     73c:	02 c0       	rjmp	.+4      	; 0x742 <_hd44780_l_func+0x23c>
     73e:	cc 0f       	add	r28, r28
     740:	dd 1f       	adc	r29, r29
     742:	9a 95       	dec	r25
     744:	e2 f7       	brpl	.-8      	; 0x73e <_hd44780_l_func+0x238>
     746:	ce 01       	movw	r24, r28
     748:	83 2b       	or	r24, r19
     74a:	8c 93       	st	X, r24
     74c:	91 85       	ldd	r25, Z+9	; 0x09
     74e:	a5 8d       	ldd	r26, Z+29	; 0x1d
     750:	b6 8d       	ldd	r27, Z+30	; 0x1e
     752:	21 fd       	sbrc	r18, 1
     754:	0e c0       	rjmp	.+28     	; 0x772 <_hd44780_l_func+0x26c>
     756:	3c 91       	ld	r19, X
     758:	41 e0       	ldi	r20, 0x01	; 1
     75a:	50 e0       	ldi	r21, 0x00	; 0
     75c:	ba 01       	movw	r22, r20
     75e:	02 c0       	rjmp	.+4      	; 0x764 <_hd44780_l_func+0x25e>
     760:	66 0f       	add	r22, r22
     762:	77 1f       	adc	r23, r23
     764:	9a 95       	dec	r25
     766:	e2 f7       	brpl	.-8      	; 0x760 <_hd44780_l_func+0x25a>
     768:	cb 01       	movw	r24, r22
     76a:	80 95       	com	r24
     76c:	83 23       	and	r24, r19
     76e:	8c 93       	st	X, r24
     770:	0c c0       	rjmp	.+24     	; 0x78a <_hd44780_l_func+0x284>
     772:	3c 91       	ld	r19, X
     774:	41 e0       	ldi	r20, 0x01	; 1
     776:	50 e0       	ldi	r21, 0x00	; 0
     778:	ea 01       	movw	r28, r20
     77a:	02 c0       	rjmp	.+4      	; 0x780 <_hd44780_l_func+0x27a>
     77c:	cc 0f       	add	r28, r28
     77e:	dd 1f       	adc	r29, r29
     780:	9a 95       	dec	r25
     782:	e2 f7       	brpl	.-8      	; 0x77c <_hd44780_l_func+0x276>
     784:	ce 01       	movw	r24, r28
     786:	83 2b       	or	r24, r19
     788:	8c 93       	st	X, r24
     78a:	92 85       	ldd	r25, Z+10	; 0x0a
     78c:	a7 8d       	ldd	r26, Z+31	; 0x1f
     78e:	b0 a1       	ldd	r27, Z+32	; 0x20
     790:	20 fd       	sbrc	r18, 0
     792:	0e c0       	rjmp	.+28     	; 0x7b0 <_hd44780_l_func+0x2aa>
     794:	4c 91       	ld	r20, X
     796:	21 e0       	ldi	r18, 0x01	; 1
     798:	30 e0       	ldi	r19, 0x00	; 0
     79a:	b9 01       	movw	r22, r18
     79c:	02 c0       	rjmp	.+4      	; 0x7a2 <_hd44780_l_func+0x29c>
     79e:	66 0f       	add	r22, r22
     7a0:	77 1f       	adc	r23, r23
     7a2:	9a 95       	dec	r25
     7a4:	e2 f7       	brpl	.-8      	; 0x79e <_hd44780_l_func+0x298>
     7a6:	cb 01       	movw	r24, r22
     7a8:	80 95       	com	r24
     7aa:	84 23       	and	r24, r20
     7ac:	8c 93       	st	X, r24
     7ae:	89 c0       	rjmp	.+274    	; 0x8c2 <_hd44780_l_func+0x3bc>
     7b0:	4c 91       	ld	r20, X
     7b2:	21 e0       	ldi	r18, 0x01	; 1
     7b4:	30 e0       	ldi	r19, 0x00	; 0
     7b6:	e9 01       	movw	r28, r18
     7b8:	02 c0       	rjmp	.+4      	; 0x7be <_hd44780_l_func+0x2b8>
     7ba:	cc 0f       	add	r28, r28
     7bc:	dd 1f       	adc	r29, r29
     7be:	9a 95       	dec	r25
     7c0:	e2 f7       	brpl	.-8      	; 0x7ba <_hd44780_l_func+0x2b4>
     7c2:	ce 01       	movw	r24, r28
     7c4:	84 2b       	or	r24, r20
     7c6:	8c 93       	st	X, r24
     7c8:	7c c0       	rjmp	.+248    	; 0x8c2 <_hd44780_l_func+0x3bc>
     7ca:	93 81       	ldd	r25, Z+3	; 0x03
     7cc:	a1 89       	ldd	r26, Z+17	; 0x11
     7ce:	b2 89       	ldd	r27, Z+18	; 0x12
     7d0:	23 fd       	sbrc	r18, 3
     7d2:	0e c0       	rjmp	.+28     	; 0x7f0 <_hd44780_l_func+0x2ea>
     7d4:	3c 91       	ld	r19, X
     7d6:	41 e0       	ldi	r20, 0x01	; 1
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	ba 01       	movw	r22, r20
     7dc:	02 c0       	rjmp	.+4      	; 0x7e2 <_hd44780_l_func+0x2dc>
     7de:	66 0f       	add	r22, r22
     7e0:	77 1f       	adc	r23, r23
     7e2:	9a 95       	dec	r25
     7e4:	e2 f7       	brpl	.-8      	; 0x7de <_hd44780_l_func+0x2d8>
     7e6:	cb 01       	movw	r24, r22
     7e8:	80 95       	com	r24
     7ea:	83 23       	and	r24, r19
     7ec:	8c 93       	st	X, r24
     7ee:	0c c0       	rjmp	.+24     	; 0x808 <_hd44780_l_func+0x302>
     7f0:	3c 91       	ld	r19, X
     7f2:	41 e0       	ldi	r20, 0x01	; 1
     7f4:	50 e0       	ldi	r21, 0x00	; 0
     7f6:	ea 01       	movw	r28, r20
     7f8:	02 c0       	rjmp	.+4      	; 0x7fe <_hd44780_l_func+0x2f8>
     7fa:	cc 0f       	add	r28, r28
     7fc:	dd 1f       	adc	r29, r29
     7fe:	9a 95       	dec	r25
     800:	e2 f7       	brpl	.-8      	; 0x7fa <_hd44780_l_func+0x2f4>
     802:	ce 01       	movw	r24, r28
     804:	83 2b       	or	r24, r19
     806:	8c 93       	st	X, r24
     808:	94 81       	ldd	r25, Z+4	; 0x04
     80a:	a3 89       	ldd	r26, Z+19	; 0x13
     80c:	b4 89       	ldd	r27, Z+20	; 0x14
     80e:	22 fd       	sbrc	r18, 2
     810:	0e c0       	rjmp	.+28     	; 0x82e <_hd44780_l_func+0x328>
     812:	3c 91       	ld	r19, X
     814:	41 e0       	ldi	r20, 0x01	; 1
     816:	50 e0       	ldi	r21, 0x00	; 0
     818:	ba 01       	movw	r22, r20
     81a:	02 c0       	rjmp	.+4      	; 0x820 <_hd44780_l_func+0x31a>
     81c:	66 0f       	add	r22, r22
     81e:	77 1f       	adc	r23, r23
     820:	9a 95       	dec	r25
     822:	e2 f7       	brpl	.-8      	; 0x81c <_hd44780_l_func+0x316>
     824:	cb 01       	movw	r24, r22
     826:	80 95       	com	r24
     828:	83 23       	and	r24, r19
     82a:	8c 93       	st	X, r24
     82c:	0c c0       	rjmp	.+24     	; 0x846 <_hd44780_l_func+0x340>
     82e:	3c 91       	ld	r19, X
     830:	41 e0       	ldi	r20, 0x01	; 1
     832:	50 e0       	ldi	r21, 0x00	; 0
     834:	ea 01       	movw	r28, r20
     836:	02 c0       	rjmp	.+4      	; 0x83c <_hd44780_l_func+0x336>
     838:	cc 0f       	add	r28, r28
     83a:	dd 1f       	adc	r29, r29
     83c:	9a 95       	dec	r25
     83e:	e2 f7       	brpl	.-8      	; 0x838 <_hd44780_l_func+0x332>
     840:	ce 01       	movw	r24, r28
     842:	83 2b       	or	r24, r19
     844:	8c 93       	st	X, r24
     846:	95 81       	ldd	r25, Z+5	; 0x05
     848:	a5 89       	ldd	r26, Z+21	; 0x15
     84a:	b6 89       	ldd	r27, Z+22	; 0x16
     84c:	21 fd       	sbrc	r18, 1
     84e:	0e c0       	rjmp	.+28     	; 0x86c <_hd44780_l_func+0x366>
     850:	3c 91       	ld	r19, X
     852:	41 e0       	ldi	r20, 0x01	; 1
     854:	50 e0       	ldi	r21, 0x00	; 0
     856:	ba 01       	movw	r22, r20
     858:	02 c0       	rjmp	.+4      	; 0x85e <_hd44780_l_func+0x358>
     85a:	66 0f       	add	r22, r22
     85c:	77 1f       	adc	r23, r23
     85e:	9a 95       	dec	r25
     860:	e2 f7       	brpl	.-8      	; 0x85a <_hd44780_l_func+0x354>
     862:	cb 01       	movw	r24, r22
     864:	80 95       	com	r24
     866:	83 23       	and	r24, r19
     868:	8c 93       	st	X, r24
     86a:	0c c0       	rjmp	.+24     	; 0x884 <_hd44780_l_func+0x37e>
     86c:	3c 91       	ld	r19, X
     86e:	41 e0       	ldi	r20, 0x01	; 1
     870:	50 e0       	ldi	r21, 0x00	; 0
     872:	ea 01       	movw	r28, r20
     874:	02 c0       	rjmp	.+4      	; 0x87a <_hd44780_l_func+0x374>
     876:	cc 0f       	add	r28, r28
     878:	dd 1f       	adc	r29, r29
     87a:	9a 95       	dec	r25
     87c:	e2 f7       	brpl	.-8      	; 0x876 <_hd44780_l_func+0x370>
     87e:	ce 01       	movw	r24, r28
     880:	83 2b       	or	r24, r19
     882:	8c 93       	st	X, r24
     884:	96 81       	ldd	r25, Z+6	; 0x06
     886:	a7 89       	ldd	r26, Z+23	; 0x17
     888:	b0 8d       	ldd	r27, Z+24	; 0x18
     88a:	20 fd       	sbrc	r18, 0
     88c:	0e c0       	rjmp	.+28     	; 0x8aa <_hd44780_l_func+0x3a4>
     88e:	4c 91       	ld	r20, X
     890:	21 e0       	ldi	r18, 0x01	; 1
     892:	30 e0       	ldi	r19, 0x00	; 0
     894:	b9 01       	movw	r22, r18
     896:	02 c0       	rjmp	.+4      	; 0x89c <_hd44780_l_func+0x396>
     898:	66 0f       	add	r22, r22
     89a:	77 1f       	adc	r23, r23
     89c:	9a 95       	dec	r25
     89e:	e2 f7       	brpl	.-8      	; 0x898 <_hd44780_l_func+0x392>
     8a0:	cb 01       	movw	r24, r22
     8a2:	80 95       	com	r24
     8a4:	84 23       	and	r24, r20
     8a6:	8c 93       	st	X, r24
     8a8:	0c c0       	rjmp	.+24     	; 0x8c2 <_hd44780_l_func+0x3bc>
     8aa:	4c 91       	ld	r20, X
     8ac:	21 e0       	ldi	r18, 0x01	; 1
     8ae:	30 e0       	ldi	r19, 0x00	; 0
     8b0:	e9 01       	movw	r28, r18
     8b2:	02 c0       	rjmp	.+4      	; 0x8b8 <_hd44780_l_func+0x3b2>
     8b4:	cc 0f       	add	r28, r28
     8b6:	dd 1f       	adc	r29, r29
     8b8:	9a 95       	dec	r25
     8ba:	e2 f7       	brpl	.-8      	; 0x8b4 <_hd44780_l_func+0x3ae>
     8bc:	ce 01       	movw	r24, r28
     8be:	84 2b       	or	r24, r20
     8c0:	8c 93       	st	X, r24
     8c2:	00 c0       	rjmp	.+0      	; 0x8c4 <_hd44780_l_func+0x3be>
     8c4:	a7 85       	ldd	r26, Z+15	; 0x0f
     8c6:	b0 89       	ldd	r27, Z+16	; 0x10
     8c8:	4c 91       	ld	r20, X
     8ca:	81 e0       	ldi	r24, 0x01	; 1
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	9c 01       	movw	r18, r24
     8d0:	02 80       	ldd	r0, Z+2	; 0x02
     8d2:	02 c0       	rjmp	.+4      	; 0x8d8 <_hd44780_l_func+0x3d2>
     8d4:	22 0f       	add	r18, r18
     8d6:	33 1f       	adc	r19, r19
     8d8:	0a 94       	dec	r0
     8da:	e2 f7       	brpl	.-8      	; 0x8d4 <_hd44780_l_func+0x3ce>
     8dc:	24 2b       	or	r18, r20
     8de:	2c 93       	st	X, r18
     8e0:	00 c0       	rjmp	.+0      	; 0x8e2 <_hd44780_l_func+0x3dc>
     8e2:	00 c0       	rjmp	.+0      	; 0x8e4 <_hd44780_l_func+0x3de>
     8e4:	a7 85       	ldd	r26, Z+15	; 0x0f
     8e6:	b0 89       	ldd	r27, Z+16	; 0x10
     8e8:	2c 91       	ld	r18, X
     8ea:	02 80       	ldd	r0, Z+2	; 0x02
     8ec:	02 c0       	rjmp	.+4      	; 0x8f2 <_hd44780_l_func+0x3ec>
     8ee:	88 0f       	add	r24, r24
     8f0:	99 1f       	adc	r25, r25
     8f2:	0a 94       	dec	r0
     8f4:	e2 f7       	brpl	.-8      	; 0x8ee <_hd44780_l_func+0x3e8>
     8f6:	80 95       	com	r24
     8f8:	82 23       	and	r24, r18
     8fa:	8c 93       	st	X, r24
     8fc:	00 c0       	rjmp	.+0      	; 0x8fe <_hd44780_l_func+0x3f8>
     8fe:	00 c0       	rjmp	.+0      	; 0x900 <_hd44780_l_func+0x3fa>
     900:	01 15       	cp	r16, r1
     902:	11 05       	cpc	r17, r1
     904:	49 f0       	breq	.+18     	; 0x918 <_hd44780_l_func+0x412>
     906:	80 e0       	ldi	r24, 0x00	; 0
     908:	90 e0       	ldi	r25, 0x00	; 0
     90a:	d5 e0       	ldi	r29, 0x05	; 5
     90c:	da 95       	dec	r29
     90e:	f1 f7       	brne	.-4      	; 0x90c <_hd44780_l_func+0x406>
     910:	01 96       	adiw	r24, 0x01	; 1
     912:	80 17       	cp	r24, r16
     914:	91 07       	cpc	r25, r17
     916:	c9 f7       	brne	.-14     	; 0x90a <_hd44780_l_func+0x404>
     918:	df 91       	pop	r29
     91a:	cf 91       	pop	r28
     91c:	1f 91       	pop	r17
     91e:	0f 91       	pop	r16
     920:	08 95       	ret

00000922 <hd44780_l_clear_disp>:
     922:	0f 93       	push	r16
     924:	1f 93       	push	r17
     926:	08 e6       	ldi	r16, 0x68	; 104
     928:	16 e0       	ldi	r17, 0x06	; 6
     92a:	21 e0       	ldi	r18, 0x01	; 1
     92c:	40 e0       	ldi	r20, 0x00	; 0
     92e:	60 e0       	ldi	r22, 0x00	; 0
     930:	ea dd       	rcall	.-1068   	; 0x506 <_hd44780_l_func>
     932:	1f 91       	pop	r17
     934:	0f 91       	pop	r16
     936:	08 95       	ret

00000938 <hd44780_l_ems>:
     938:	0f 93       	push	r16
     93a:	1f 93       	push	r17
     93c:	e6 2f       	mov	r30, r22
     93e:	f0 e0       	ldi	r31, 0x00	; 0
     940:	bf 01       	movw	r22, r30
     942:	66 0f       	add	r22, r22
     944:	77 1f       	adc	r23, r23
     946:	64 60       	ori	r22, 0x04	; 4
     948:	24 2f       	mov	r18, r20
     94a:	26 2b       	or	r18, r22
     94c:	08 e2       	ldi	r16, 0x28	; 40
     94e:	10 e0       	ldi	r17, 0x00	; 0
     950:	40 e0       	ldi	r20, 0x00	; 0
     952:	60 e0       	ldi	r22, 0x00	; 0
     954:	d8 dd       	rcall	.-1104   	; 0x506 <_hd44780_l_func>
     956:	1f 91       	pop	r17
     958:	0f 91       	pop	r16
     95a:	08 95       	ret

0000095c <hd44780_l_disp>:
     95c:	0f 93       	push	r16
     95e:	1f 93       	push	r17
     960:	e6 2f       	mov	r30, r22
     962:	f0 e0       	ldi	r31, 0x00	; 0
     964:	bf 01       	movw	r22, r30
     966:	66 0f       	add	r22, r22
     968:	77 1f       	adc	r23, r23
     96a:	66 0f       	add	r22, r22
     96c:	77 1f       	adc	r23, r23
     96e:	68 60       	ori	r22, 0x08	; 8
     970:	44 0f       	add	r20, r20
     972:	64 2b       	or	r22, r20
     974:	26 2b       	or	r18, r22
     976:	08 e2       	ldi	r16, 0x28	; 40
     978:	10 e0       	ldi	r17, 0x00	; 0
     97a:	40 e0       	ldi	r20, 0x00	; 0
     97c:	60 e0       	ldi	r22, 0x00	; 0
     97e:	c3 dd       	rcall	.-1146   	; 0x506 <_hd44780_l_func>
     980:	1f 91       	pop	r17
     982:	0f 91       	pop	r16
     984:	08 95       	ret

00000986 <hd44780_l_fs>:
     986:	0f 93       	push	r16
     988:	1f 93       	push	r17
     98a:	44 0f       	add	r20, r20
     98c:	44 0f       	add	r20, r20
     98e:	44 0f       	add	r20, r20
     990:	30 e1       	ldi	r19, 0x10	; 16
     992:	63 9f       	mul	r22, r19
     994:	b0 01       	movw	r22, r0
     996:	11 24       	eor	r1, r1
     998:	60 62       	ori	r22, 0x20	; 32
     99a:	64 2b       	or	r22, r20
     99c:	22 0f       	add	r18, r18
     99e:	22 0f       	add	r18, r18
     9a0:	26 2b       	or	r18, r22
     9a2:	08 e2       	ldi	r16, 0x28	; 40
     9a4:	10 e0       	ldi	r17, 0x00	; 0
     9a6:	40 e0       	ldi	r20, 0x00	; 0
     9a8:	60 e0       	ldi	r22, 0x00	; 0
     9aa:	ad dd       	rcall	.-1190   	; 0x506 <_hd44780_l_func>
     9ac:	1f 91       	pop	r17
     9ae:	0f 91       	pop	r16
     9b0:	08 95       	ret

000009b2 <hd44780_l_write>:
     9b2:	0f 93       	push	r16
     9b4:	1f 93       	push	r17
     9b6:	26 2f       	mov	r18, r22
     9b8:	0d e2       	ldi	r16, 0x2D	; 45
     9ba:	10 e0       	ldi	r17, 0x00	; 0
     9bc:	40 e0       	ldi	r20, 0x00	; 0
     9be:	61 e0       	ldi	r22, 0x01	; 1
     9c0:	a2 dd       	rcall	.-1212   	; 0x506 <_hd44780_l_func>
     9c2:	1f 91       	pop	r17
     9c4:	0f 91       	pop	r16
     9c6:	08 95       	ret

000009c8 <hd44780_l_init>:
     9c8:	0f 93       	push	r16
     9ca:	1f 93       	push	r17
     9cc:	cf 93       	push	r28
     9ce:	df 93       	push	r29
     9d0:	ec 01       	movw	r28, r24
     9d2:	12 2f       	mov	r17, r18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9d4:	8f ef       	ldi	r24, 0xFF	; 255
     9d6:	97 ed       	ldi	r25, 0xD7	; 215
     9d8:	01 97       	sbiw	r24, 0x01	; 1
     9da:	f1 f7       	brne	.-4      	; 0x9d8 <hd44780_l_init+0x10>
     9dc:	00 c0       	rjmp	.+0      	; 0x9de <hd44780_l_init+0x16>
     9de:	00 00       	nop
     9e0:	eb 85       	ldd	r30, Y+11	; 0x0b
     9e2:	fc 85       	ldd	r31, Y+12	; 0x0c
     9e4:	50 81       	ld	r21, Z
     9e6:	81 e0       	ldi	r24, 0x01	; 1
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	9c 01       	movw	r18, r24
     9ec:	08 80       	ld	r0, Y
     9ee:	02 c0       	rjmp	.+4      	; 0x9f4 <hd44780_l_init+0x2c>
     9f0:	22 0f       	add	r18, r18
     9f2:	33 1f       	adc	r19, r19
     9f4:	0a 94       	dec	r0
     9f6:	e2 f7       	brpl	.-8      	; 0x9f0 <hd44780_l_init+0x28>
     9f8:	20 95       	com	r18
     9fa:	25 23       	and	r18, r21
     9fc:	20 83       	st	Z, r18
     9fe:	ed 85       	ldd	r30, Y+13	; 0x0d
     a00:	fe 85       	ldd	r31, Y+14	; 0x0e
     a02:	50 81       	ld	r21, Z
     a04:	9c 01       	movw	r18, r24
     a06:	09 80       	ldd	r0, Y+1	; 0x01
     a08:	02 c0       	rjmp	.+4      	; 0xa0e <hd44780_l_init+0x46>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	0a 94       	dec	r0
     a10:	e2 f7       	brpl	.-8      	; 0xa0a <hd44780_l_init+0x42>
     a12:	20 95       	com	r18
     a14:	25 23       	and	r18, r21
     a16:	20 83       	st	Z, r18
     a18:	ef 85       	ldd	r30, Y+15	; 0x0f
     a1a:	f8 89       	ldd	r31, Y+16	; 0x10
     a1c:	50 81       	ld	r21, Z
     a1e:	9c 01       	movw	r18, r24
     a20:	0a 80       	ldd	r0, Y+2	; 0x02
     a22:	02 c0       	rjmp	.+4      	; 0xa28 <hd44780_l_init+0x60>
     a24:	22 0f       	add	r18, r18
     a26:	33 1f       	adc	r19, r19
     a28:	0a 94       	dec	r0
     a2a:	e2 f7       	brpl	.-8      	; 0xa24 <hd44780_l_init+0x5c>
     a2c:	20 95       	com	r18
     a2e:	25 23       	and	r18, r21
     a30:	20 83       	st	Z, r18
     a32:	e9 89       	ldd	r30, Y+17	; 0x11
     a34:	fa 89       	ldd	r31, Y+18	; 0x12
     a36:	50 81       	ld	r21, Z
     a38:	9c 01       	movw	r18, r24
     a3a:	0b 80       	ldd	r0, Y+3	; 0x03
     a3c:	02 c0       	rjmp	.+4      	; 0xa42 <hd44780_l_init+0x7a>
     a3e:	22 0f       	add	r18, r18
     a40:	33 1f       	adc	r19, r19
     a42:	0a 94       	dec	r0
     a44:	e2 f7       	brpl	.-8      	; 0xa3e <hd44780_l_init+0x76>
     a46:	20 95       	com	r18
     a48:	25 23       	and	r18, r21
     a4a:	20 83       	st	Z, r18
     a4c:	eb 89       	ldd	r30, Y+19	; 0x13
     a4e:	fc 89       	ldd	r31, Y+20	; 0x14
     a50:	50 81       	ld	r21, Z
     a52:	9c 01       	movw	r18, r24
     a54:	0c 80       	ldd	r0, Y+4	; 0x04
     a56:	02 c0       	rjmp	.+4      	; 0xa5c <hd44780_l_init+0x94>
     a58:	22 0f       	add	r18, r18
     a5a:	33 1f       	adc	r19, r19
     a5c:	0a 94       	dec	r0
     a5e:	e2 f7       	brpl	.-8      	; 0xa58 <hd44780_l_init+0x90>
     a60:	20 95       	com	r18
     a62:	25 23       	and	r18, r21
     a64:	20 83       	st	Z, r18
     a66:	ed 89       	ldd	r30, Y+21	; 0x15
     a68:	fe 89       	ldd	r31, Y+22	; 0x16
     a6a:	50 81       	ld	r21, Z
     a6c:	9c 01       	movw	r18, r24
     a6e:	0d 80       	ldd	r0, Y+5	; 0x05
     a70:	02 c0       	rjmp	.+4      	; 0xa76 <hd44780_l_init+0xae>
     a72:	22 0f       	add	r18, r18
     a74:	33 1f       	adc	r19, r19
     a76:	0a 94       	dec	r0
     a78:	e2 f7       	brpl	.-8      	; 0xa72 <hd44780_l_init+0xaa>
     a7a:	20 95       	com	r18
     a7c:	25 23       	and	r18, r21
     a7e:	20 83       	st	Z, r18
     a80:	ef 89       	ldd	r30, Y+23	; 0x17
     a82:	f8 8d       	ldd	r31, Y+24	; 0x18
     a84:	20 81       	ld	r18, Z
     a86:	0e 80       	ldd	r0, Y+6	; 0x06
     a88:	02 c0       	rjmp	.+4      	; 0xa8e <hd44780_l_init+0xc6>
     a8a:	88 0f       	add	r24, r24
     a8c:	99 1f       	adc	r25, r25
     a8e:	0a 94       	dec	r0
     a90:	e2 f7       	brpl	.-8      	; 0xa8a <hd44780_l_init+0xc2>
     a92:	80 95       	com	r24
     a94:	82 23       	and	r24, r18
     a96:	80 83       	st	Z, r24
     a98:	8b a1       	ldd	r24, Y+35	; 0x23
     a9a:	81 30       	cpi	r24, 0x01	; 1
     a9c:	a9 f5       	brne	.+106    	; 0xb08 <hd44780_l_init+0x140>
     a9e:	e9 8d       	ldd	r30, Y+25	; 0x19
     aa0:	fa 8d       	ldd	r31, Y+26	; 0x1a
     aa2:	50 81       	ld	r21, Z
     aa4:	81 e0       	ldi	r24, 0x01	; 1
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	9c 01       	movw	r18, r24
     aaa:	0f 80       	ldd	r0, Y+7	; 0x07
     aac:	02 c0       	rjmp	.+4      	; 0xab2 <hd44780_l_init+0xea>
     aae:	22 0f       	add	r18, r18
     ab0:	33 1f       	adc	r19, r19
     ab2:	0a 94       	dec	r0
     ab4:	e2 f7       	brpl	.-8      	; 0xaae <hd44780_l_init+0xe6>
     ab6:	20 95       	com	r18
     ab8:	25 23       	and	r18, r21
     aba:	20 83       	st	Z, r18
     abc:	eb 8d       	ldd	r30, Y+27	; 0x1b
     abe:	fc 8d       	ldd	r31, Y+28	; 0x1c
     ac0:	50 81       	ld	r21, Z
     ac2:	9c 01       	movw	r18, r24
     ac4:	08 84       	ldd	r0, Y+8	; 0x08
     ac6:	02 c0       	rjmp	.+4      	; 0xacc <hd44780_l_init+0x104>
     ac8:	22 0f       	add	r18, r18
     aca:	33 1f       	adc	r19, r19
     acc:	0a 94       	dec	r0
     ace:	e2 f7       	brpl	.-8      	; 0xac8 <hd44780_l_init+0x100>
     ad0:	20 95       	com	r18
     ad2:	25 23       	and	r18, r21
     ad4:	20 83       	st	Z, r18
     ad6:	ed 8d       	ldd	r30, Y+29	; 0x1d
     ad8:	fe 8d       	ldd	r31, Y+30	; 0x1e
     ada:	50 81       	ld	r21, Z
     adc:	9c 01       	movw	r18, r24
     ade:	09 84       	ldd	r0, Y+9	; 0x09
     ae0:	02 c0       	rjmp	.+4      	; 0xae6 <hd44780_l_init+0x11e>
     ae2:	22 0f       	add	r18, r18
     ae4:	33 1f       	adc	r19, r19
     ae6:	0a 94       	dec	r0
     ae8:	e2 f7       	brpl	.-8      	; 0xae2 <hd44780_l_init+0x11a>
     aea:	20 95       	com	r18
     aec:	25 23       	and	r18, r21
     aee:	20 83       	st	Z, r18
     af0:	ef 8d       	ldd	r30, Y+31	; 0x1f
     af2:	f8 a1       	ldd	r31, Y+32	; 0x20
     af4:	20 81       	ld	r18, Z
     af6:	0a 84       	ldd	r0, Y+10	; 0x0a
     af8:	02 c0       	rjmp	.+4      	; 0xafe <hd44780_l_init+0x136>
     afa:	88 0f       	add	r24, r24
     afc:	99 1f       	adc	r25, r25
     afe:	0a 94       	dec	r0
     b00:	e2 f7       	brpl	.-8      	; 0xafa <hd44780_l_init+0x132>
     b02:	80 95       	com	r24
     b04:	82 23       	and	r24, r18
     b06:	80 83       	st	Z, r24
     b08:	ed 89       	ldd	r30, Y+21	; 0x15
     b0a:	fe 89       	ldd	r31, Y+22	; 0x16
     b0c:	50 81       	ld	r21, Z
     b0e:	81 e0       	ldi	r24, 0x01	; 1
     b10:	90 e0       	ldi	r25, 0x00	; 0
     b12:	9c 01       	movw	r18, r24
     b14:	0d 80       	ldd	r0, Y+5	; 0x05
     b16:	02 c0       	rjmp	.+4      	; 0xb1c <hd44780_l_init+0x154>
     b18:	22 0f       	add	r18, r18
     b1a:	33 1f       	adc	r19, r19
     b1c:	0a 94       	dec	r0
     b1e:	e2 f7       	brpl	.-8      	; 0xb18 <hd44780_l_init+0x150>
     b20:	25 2b       	or	r18, r21
     b22:	20 83       	st	Z, r18
     b24:	ef 89       	ldd	r30, Y+23	; 0x17
     b26:	f8 8d       	ldd	r31, Y+24	; 0x18
     b28:	50 81       	ld	r21, Z
     b2a:	9c 01       	movw	r18, r24
     b2c:	0e 80       	ldd	r0, Y+6	; 0x06
     b2e:	02 c0       	rjmp	.+4      	; 0xb34 <hd44780_l_init+0x16c>
     b30:	22 0f       	add	r18, r18
     b32:	33 1f       	adc	r19, r19
     b34:	0a 94       	dec	r0
     b36:	e2 f7       	brpl	.-8      	; 0xb30 <hd44780_l_init+0x168>
     b38:	25 2b       	or	r18, r21
     b3a:	20 83       	st	Z, r18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b3c:	00 c0       	rjmp	.+0      	; 0xb3e <hd44780_l_init+0x176>
     b3e:	ef 85       	ldd	r30, Y+15	; 0x0f
     b40:	f8 89       	ldd	r31, Y+16	; 0x10
     b42:	50 81       	ld	r21, Z
     b44:	9c 01       	movw	r18, r24
     b46:	0a 80       	ldd	r0, Y+2	; 0x02
     b48:	02 c0       	rjmp	.+4      	; 0xb4e <hd44780_l_init+0x186>
     b4a:	22 0f       	add	r18, r18
     b4c:	33 1f       	adc	r19, r19
     b4e:	0a 94       	dec	r0
     b50:	e2 f7       	brpl	.-8      	; 0xb4a <hd44780_l_init+0x182>
     b52:	25 2b       	or	r18, r21
     b54:	20 83       	st	Z, r18
     b56:	00 c0       	rjmp	.+0      	; 0xb58 <hd44780_l_init+0x190>
     b58:	00 c0       	rjmp	.+0      	; 0xb5a <hd44780_l_init+0x192>
     b5a:	ef 85       	ldd	r30, Y+15	; 0x0f
     b5c:	f8 89       	ldd	r31, Y+16	; 0x10
     b5e:	50 81       	ld	r21, Z
     b60:	9c 01       	movw	r18, r24
     b62:	0a 80       	ldd	r0, Y+2	; 0x02
     b64:	02 c0       	rjmp	.+4      	; 0xb6a <hd44780_l_init+0x1a2>
     b66:	22 0f       	add	r18, r18
     b68:	33 1f       	adc	r19, r19
     b6a:	0a 94       	dec	r0
     b6c:	e2 f7       	brpl	.-8      	; 0xb66 <hd44780_l_init+0x19e>
     b6e:	20 95       	com	r18
     b70:	25 23       	and	r18, r21
     b72:	20 83       	st	Z, r18
     b74:	00 c0       	rjmp	.+0      	; 0xb76 <hd44780_l_init+0x1ae>
     b76:	00 c0       	rjmp	.+0      	; 0xb78 <hd44780_l_init+0x1b0>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b78:	ea e0       	ldi	r30, 0x0A	; 10
     b7a:	fb e3       	ldi	r31, 0x3B	; 59
     b7c:	31 97       	sbiw	r30, 0x01	; 1
     b7e:	f1 f7       	brne	.-4      	; 0xb7c <hd44780_l_init+0x1b4>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b80:	00 c0       	rjmp	.+0      	; 0xb82 <hd44780_l_init+0x1ba>
     b82:	ef 85       	ldd	r30, Y+15	; 0x0f
     b84:	f8 89       	ldd	r31, Y+16	; 0x10
     b86:	50 81       	ld	r21, Z
     b88:	9c 01       	movw	r18, r24
     b8a:	0a 80       	ldd	r0, Y+2	; 0x02
     b8c:	02 c0       	rjmp	.+4      	; 0xb92 <hd44780_l_init+0x1ca>
     b8e:	22 0f       	add	r18, r18
     b90:	33 1f       	adc	r19, r19
     b92:	0a 94       	dec	r0
     b94:	e2 f7       	brpl	.-8      	; 0xb8e <hd44780_l_init+0x1c6>
     b96:	25 2b       	or	r18, r21
     b98:	20 83       	st	Z, r18
     b9a:	00 c0       	rjmp	.+0      	; 0xb9c <hd44780_l_init+0x1d4>
     b9c:	00 c0       	rjmp	.+0      	; 0xb9e <hd44780_l_init+0x1d6>
     b9e:	ef 85       	ldd	r30, Y+15	; 0x0f
     ba0:	f8 89       	ldd	r31, Y+16	; 0x10
     ba2:	50 81       	ld	r21, Z
     ba4:	9c 01       	movw	r18, r24
     ba6:	0a 80       	ldd	r0, Y+2	; 0x02
     ba8:	02 c0       	rjmp	.+4      	; 0xbae <hd44780_l_init+0x1e6>
     baa:	22 0f       	add	r18, r18
     bac:	33 1f       	adc	r19, r19
     bae:	0a 94       	dec	r0
     bb0:	e2 f7       	brpl	.-8      	; 0xbaa <hd44780_l_init+0x1e2>
     bb2:	20 95       	com	r18
     bb4:	25 23       	and	r18, r21
     bb6:	20 83       	st	Z, r18
     bb8:	00 c0       	rjmp	.+0      	; 0xbba <hd44780_l_init+0x1f2>
     bba:	00 c0       	rjmp	.+0      	; 0xbbc <hd44780_l_init+0x1f4>
     bbc:	e0 e7       	ldi	r30, 0x70	; 112
     bbe:	f1 e0       	ldi	r31, 0x01	; 1
     bc0:	31 97       	sbiw	r30, 0x01	; 1
     bc2:	f1 f7       	brne	.-4      	; 0xbc0 <hd44780_l_init+0x1f8>
     bc4:	00 c0       	rjmp	.+0      	; 0xbc6 <hd44780_l_init+0x1fe>
     bc6:	00 c0       	rjmp	.+0      	; 0xbc8 <hd44780_l_init+0x200>
     bc8:	ef 85       	ldd	r30, Y+15	; 0x0f
     bca:	f8 89       	ldd	r31, Y+16	; 0x10
     bcc:	50 81       	ld	r21, Z
     bce:	9c 01       	movw	r18, r24
     bd0:	0a 80       	ldd	r0, Y+2	; 0x02
     bd2:	02 c0       	rjmp	.+4      	; 0xbd8 <hd44780_l_init+0x210>
     bd4:	22 0f       	add	r18, r18
     bd6:	33 1f       	adc	r19, r19
     bd8:	0a 94       	dec	r0
     bda:	e2 f7       	brpl	.-8      	; 0xbd4 <hd44780_l_init+0x20c>
     bdc:	25 2b       	or	r18, r21
     bde:	20 83       	st	Z, r18
     be0:	00 c0       	rjmp	.+0      	; 0xbe2 <hd44780_l_init+0x21a>
     be2:	00 c0       	rjmp	.+0      	; 0xbe4 <hd44780_l_init+0x21c>
     be4:	ef 85       	ldd	r30, Y+15	; 0x0f
     be6:	f8 89       	ldd	r31, Y+16	; 0x10
     be8:	20 81       	ld	r18, Z
     bea:	0a 80       	ldd	r0, Y+2	; 0x02
     bec:	02 c0       	rjmp	.+4      	; 0xbf2 <hd44780_l_init+0x22a>
     bee:	88 0f       	add	r24, r24
     bf0:	99 1f       	adc	r25, r25
     bf2:	0a 94       	dec	r0
     bf4:	e2 f7       	brpl	.-8      	; 0xbee <hd44780_l_init+0x226>
     bf6:	80 95       	com	r24
     bf8:	82 23       	and	r24, r18
     bfa:	80 83       	st	Z, r24
     bfc:	00 c0       	rjmp	.+0      	; 0xbfe <hd44780_l_init+0x236>
     bfe:	00 c0       	rjmp	.+0      	; 0xc00 <hd44780_l_init+0x238>
     c00:	8b a1       	ldd	r24, Y+35	; 0x23
     c02:	81 11       	cpse	r24, r1
     c04:	2c c0       	rjmp	.+88     	; 0xc5e <hd44780_l_init+0x296>
     c06:	ef 89       	ldd	r30, Y+23	; 0x17
     c08:	f8 8d       	ldd	r31, Y+24	; 0x18
     c0a:	50 81       	ld	r21, Z
     c0c:	81 e0       	ldi	r24, 0x01	; 1
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	9c 01       	movw	r18, r24
     c12:	0e 80       	ldd	r0, Y+6	; 0x06
     c14:	02 c0       	rjmp	.+4      	; 0xc1a <hd44780_l_init+0x252>
     c16:	22 0f       	add	r18, r18
     c18:	33 1f       	adc	r19, r19
     c1a:	0a 94       	dec	r0
     c1c:	e2 f7       	brpl	.-8      	; 0xc16 <hd44780_l_init+0x24e>
     c1e:	20 95       	com	r18
     c20:	25 23       	and	r18, r21
     c22:	20 83       	st	Z, r18
     c24:	00 c0       	rjmp	.+0      	; 0xc26 <hd44780_l_init+0x25e>
     c26:	ef 85       	ldd	r30, Y+15	; 0x0f
     c28:	f8 89       	ldd	r31, Y+16	; 0x10
     c2a:	50 81       	ld	r21, Z
     c2c:	9c 01       	movw	r18, r24
     c2e:	0a 80       	ldd	r0, Y+2	; 0x02
     c30:	02 c0       	rjmp	.+4      	; 0xc36 <hd44780_l_init+0x26e>
     c32:	22 0f       	add	r18, r18
     c34:	33 1f       	adc	r19, r19
     c36:	0a 94       	dec	r0
     c38:	e2 f7       	brpl	.-8      	; 0xc32 <hd44780_l_init+0x26a>
     c3a:	25 2b       	or	r18, r21
     c3c:	20 83       	st	Z, r18
     c3e:	00 c0       	rjmp	.+0      	; 0xc40 <hd44780_l_init+0x278>
     c40:	00 c0       	rjmp	.+0      	; 0xc42 <hd44780_l_init+0x27a>
     c42:	ef 85       	ldd	r30, Y+15	; 0x0f
     c44:	f8 89       	ldd	r31, Y+16	; 0x10
     c46:	20 81       	ld	r18, Z
     c48:	0a 80       	ldd	r0, Y+2	; 0x02
     c4a:	02 c0       	rjmp	.+4      	; 0xc50 <hd44780_l_init+0x288>
     c4c:	88 0f       	add	r24, r24
     c4e:	99 1f       	adc	r25, r25
     c50:	0a 94       	dec	r0
     c52:	e2 f7       	brpl	.-8      	; 0xc4c <hd44780_l_init+0x284>
     c54:	80 95       	com	r24
     c56:	82 23       	and	r24, r18
     c58:	80 83       	st	Z, r24
     c5a:	00 c0       	rjmp	.+0      	; 0xc5c <hd44780_l_init+0x294>
     c5c:	00 c0       	rjmp	.+0      	; 0xc5e <hd44780_l_init+0x296>
     c5e:	24 2f       	mov	r18, r20
     c60:	46 2f       	mov	r20, r22
     c62:	6b a1       	ldd	r22, Y+35	; 0x23
     c64:	ce 01       	movw	r24, r28
     c66:	8f de       	rcall	.-738    	; 0x986 <hd44780_l_fs>
     c68:	20 e0       	ldi	r18, 0x00	; 0
     c6a:	40 e0       	ldi	r20, 0x00	; 0
     c6c:	60 e0       	ldi	r22, 0x00	; 0
     c6e:	ce 01       	movw	r24, r28
     c70:	75 de       	rcall	.-790    	; 0x95c <hd44780_l_disp>
     c72:	ce 01       	movw	r24, r28
     c74:	56 de       	rcall	.-852    	; 0x922 <hd44780_l_clear_disp>
     c76:	40 2f       	mov	r20, r16
     c78:	61 2f       	mov	r22, r17
     c7a:	ce 01       	movw	r24, r28
     c7c:	5d de       	rcall	.-838    	; 0x938 <hd44780_l_ems>
     c7e:	df 91       	pop	r29
     c80:	cf 91       	pop	r28
     c82:	1f 91       	pop	r17
     c84:	0f 91       	pop	r16
     c86:	08 95       	ret

00000c88 <SPI_Init_Master>:
     c88:	88 eb       	ldi	r24, 0xB8	; 184
     c8a:	84 b9       	out	0x04, r24	; 4
     c8c:	53 98       	cbi	0x0a, 3	; 10
     c8e:	85 b1       	in	r24, 0x05	; 5
     c90:	88 61       	ori	r24, 0x18	; 24
     c92:	85 b9       	out	0x05, r24	; 5
     c94:	8c b5       	in	r24, 0x2c	; 44
     c96:	83 65       	ori	r24, 0x53	; 83
     c98:	8c bd       	out	0x2c, r24	; 44
     c9a:	8c e3       	ldi	r24, 0x3C	; 60
     c9c:	80 93 69 00 	sts	0x0069, r24
     ca0:	86 e0       	ldi	r24, 0x06	; 6
     ca2:	8d bb       	out	0x1d, r24	; 29
     ca4:	78 94       	sei
     ca6:	14 bc       	out	0x24, r1	; 36
     ca8:	94 e0       	ldi	r25, 0x04	; 4
     caa:	95 bd       	out	0x25, r25	; 37
     cac:	31 e0       	ldi	r19, 0x01	; 1
     cae:	30 93 86 01 	sts	0x0186, r19
     cb2:	22 e0       	ldi	r18, 0x02	; 2
     cb4:	20 93 90 01 	sts	0x0190, r18
     cb8:	10 92 8d 01 	sts	0x018D, r1
     cbc:	30 93 4d 01 	sts	0x014D, r19
     cc0:	20 93 8f 01 	sts	0x018F, r18
     cc4:	23 e0       	ldi	r18, 0x03	; 3
     cc6:	20 93 4c 01 	sts	0x014C, r18
     cca:	90 93 88 01 	sts	0x0188, r25
     cce:	95 e0       	ldi	r25, 0x05	; 5
     cd0:	90 93 5f 01 	sts	0x015F, r25
     cd4:	80 93 89 01 	sts	0x0189, r24
     cd8:	87 e0       	ldi	r24, 0x07	; 7
     cda:	80 93 53 01 	sts	0x0153, r24
     cde:	88 e0       	ldi	r24, 0x08	; 8
     ce0:	80 93 59 01 	sts	0x0159, r24
     ce4:	89 e0       	ldi	r24, 0x09	; 9
     ce6:	80 93 52 01 	sts	0x0152, r24
     cea:	8a e0       	ldi	r24, 0x0A	; 10
     cec:	80 93 8c 01 	sts	0x018C, r24
     cf0:	8a e7       	ldi	r24, 0x7A	; 122
     cf2:	87 bd       	out	0x27, r24	; 39
     cf4:	8d e7       	ldi	r24, 0x7D	; 125
     cf6:	88 bd       	out	0x28, r24	; 40
     cf8:	16 bc       	out	0x26, r1	; 38
     cfa:	08 95       	ret

00000cfc <Master_TX>:
     cfc:	cf 93       	push	r28
     cfe:	df 93       	push	r29
     d00:	1f 92       	push	r1
     d02:	cd b7       	in	r28, 0x3d	; 61
     d04:	de b7       	in	r29, 0x3e	; 62
     d06:	89 83       	std	Y+1, r24	; 0x01
     d08:	89 81       	ldd	r24, Y+1	; 0x01
     d0a:	8e bd       	out	0x2e, r24	; 46
     d0c:	0d b4       	in	r0, 0x2d	; 45
     d0e:	07 fe       	sbrs	r0, 7
     d10:	fd cf       	rjmp	.-6      	; 0xd0c <Master_TX+0x10>
     d12:	0f 90       	pop	r0
     d14:	df 91       	pop	r29
     d16:	cf 91       	pop	r28
     d18:	08 95       	ret

00000d1a <Master_RX>:
     d1a:	cf 93       	push	r28
     d1c:	df 93       	push	r29
     d1e:	1f 92       	push	r1
     d20:	cd b7       	in	r28, 0x3d	; 61
     d22:	de b7       	in	r29, 0x3e	; 62
     d24:	89 83       	std	Y+1, r24	; 0x01
     d26:	89 81       	ldd	r24, Y+1	; 0x01
     d28:	8e bd       	out	0x2e, r24	; 46
     d2a:	0d b4       	in	r0, 0x2d	; 45
     d2c:	07 fe       	sbrs	r0, 7
     d2e:	fd cf       	rjmp	.-6      	; 0xd2a <Master_RX+0x10>
     d30:	8e b5       	in	r24, 0x2e	; 46
     d32:	0f 90       	pop	r0
     d34:	df 91       	pop	r29
     d36:	cf 91       	pop	r28
     d38:	08 95       	ret

00000d3a <Slave_Select>:
     d3a:	cf 93       	push	r28
     d3c:	df 93       	push	r29
     d3e:	1f 92       	push	r1
     d40:	cd b7       	in	r28, 0x3d	; 61
     d42:	de b7       	in	r29, 0x3e	; 62
     d44:	89 83       	std	Y+1, r24	; 0x01
     d46:	99 81       	ldd	r25, Y+1	; 0x01
     d48:	80 91 90 01 	lds	r24, 0x0190
     d4c:	98 13       	cpse	r25, r24
     d4e:	03 c0       	rjmp	.+6      	; 0xd56 <Slave_Select+0x1c>
     d50:	2b 9a       	sbi	0x05, 3	; 5
     d52:	2c 98       	cbi	0x05, 4	; 5
     d54:	0a c0       	rjmp	.+20     	; 0xd6a <Slave_Select+0x30>
     d56:	99 81       	ldd	r25, Y+1	; 0x01
     d58:	80 91 86 01 	lds	r24, 0x0186
     d5c:	98 13       	cpse	r25, r24
     d5e:	03 c0       	rjmp	.+6      	; 0xd66 <Slave_Select+0x2c>
     d60:	2c 9a       	sbi	0x05, 4	; 5
     d62:	2b 98       	cbi	0x05, 3	; 5
     d64:	02 c0       	rjmp	.+4      	; 0xd6a <Slave_Select+0x30>
     d66:	2c 9a       	sbi	0x05, 4	; 5
     d68:	2b 9a       	sbi	0x05, 3	; 5
     d6a:	0f 90       	pop	r0
     d6c:	df 91       	pop	r29
     d6e:	cf 91       	pop	r28
     d70:	08 95       	ret

00000d72 <TX_Protocol>:
     d72:	90 91 4d 01 	lds	r25, 0x014D
     d76:	89 13       	cpse	r24, r25
     d78:	02 c0       	rjmp	.+4      	; 0xd7e <TX_Protocol+0xc>
     d7a:	84 e8       	ldi	r24, 0x84	; 132
     d7c:	bf cf       	rjmp	.-130    	; 0xcfc <Master_TX>
     d7e:	90 91 4c 01 	lds	r25, 0x014C
     d82:	89 13       	cpse	r24, r25
     d84:	02 c0       	rjmp	.+4      	; 0xd8a <TX_Protocol+0x18>
     d86:	85 e8       	ldi	r24, 0x85	; 133
     d88:	b9 cf       	rjmp	.-142    	; 0xcfc <Master_TX>
     d8a:	90 91 5f 01 	lds	r25, 0x015F
     d8e:	89 13       	cpse	r24, r25
     d90:	02 c0       	rjmp	.+4      	; 0xd96 <TX_Protocol+0x24>
     d92:	86 e8       	ldi	r24, 0x86	; 134
     d94:	b3 cf       	rjmp	.-154    	; 0xcfc <Master_TX>
     d96:	90 91 8f 01 	lds	r25, 0x018F
     d9a:	89 13       	cpse	r24, r25
     d9c:	02 c0       	rjmp	.+4      	; 0xda2 <TX_Protocol+0x30>
     d9e:	84 e0       	ldi	r24, 0x04	; 4
     da0:	ad cf       	rjmp	.-166    	; 0xcfc <Master_TX>
     da2:	90 91 88 01 	lds	r25, 0x0188
     da6:	89 13       	cpse	r24, r25
     da8:	02 c0       	rjmp	.+4      	; 0xdae <TX_Protocol+0x3c>
     daa:	85 e0       	ldi	r24, 0x05	; 5
     dac:	a7 cf       	rjmp	.-178    	; 0xcfc <Master_TX>
     dae:	90 91 89 01 	lds	r25, 0x0189
     db2:	89 13       	cpse	r24, r25
     db4:	02 c0       	rjmp	.+4      	; 0xdba <TX_Protocol+0x48>
     db6:	86 e0       	ldi	r24, 0x06	; 6
     db8:	a1 cf       	rjmp	.-190    	; 0xcfc <Master_TX>
     dba:	90 91 53 01 	lds	r25, 0x0153
     dbe:	89 13       	cpse	r24, r25
     dc0:	02 c0       	rjmp	.+4      	; 0xdc6 <TX_Protocol+0x54>
     dc2:	8b ea       	ldi	r24, 0xAB	; 171
     dc4:	9b cf       	rjmp	.-202    	; 0xcfc <Master_TX>
     dc6:	90 91 59 01 	lds	r25, 0x0159
     dca:	89 13       	cpse	r24, r25
     dcc:	02 c0       	rjmp	.+4      	; 0xdd2 <TX_Protocol+0x60>
     dce:	87 e8       	ldi	r24, 0x87	; 135
     dd0:	95 cf       	rjmp	.-214    	; 0xcfc <Master_TX>
     dd2:	90 91 52 01 	lds	r25, 0x0152
     dd6:	89 13       	cpse	r24, r25
     dd8:	02 c0       	rjmp	.+4      	; 0xdde <TX_Protocol+0x6c>
     dda:	8b e8       	ldi	r24, 0x8B	; 139
     ddc:	8f cf       	rjmp	.-226    	; 0xcfc <Master_TX>
     dde:	90 91 8c 01 	lds	r25, 0x018C
     de2:	89 13       	cpse	r24, r25
     de4:	02 c0       	rjmp	.+4      	; 0xdea <TX_Protocol+0x78>
     de6:	8f e8       	ldi	r24, 0x8F	; 143
     de8:	89 cf       	rjmp	.-238    	; 0xcfc <Master_TX>
     dea:	08 95       	ret

00000dec <TX_sensor_data>:
     dec:	80 91 90 01 	lds	r24, 0x0190
     df0:	a4 df       	rcall	.-184    	; 0xd3a <Slave_Select>
     df2:	80 91 4d 01 	lds	r24, 0x014D
     df6:	bd df       	rcall	.-134    	; 0xd72 <TX_Protocol>
     df8:	80 91 8d 01 	lds	r24, 0x018D
     dfc:	9e df       	rcall	.-196    	; 0xd3a <Slave_Select>
     dfe:	80 91 90 01 	lds	r24, 0x0190
     e02:	9b df       	rcall	.-202    	; 0xd3a <Slave_Select>
     e04:	80 91 3f 01 	lds	r24, 0x013F
     e08:	79 cf       	rjmp	.-270    	; 0xcfc <Master_TX>

00000e0a <RX_sensor_data>:
     e0a:	80 91 8f 01 	lds	r24, 0x018F
     e0e:	80 93 4b 01 	sts	0x014B, r24
     e12:	80 91 86 01 	lds	r24, 0x0186
     e16:	91 df       	rcall	.-222    	; 0xd3a <Slave_Select>
     e18:	80 91 8f 01 	lds	r24, 0x018F
     e1c:	aa df       	rcall	.-172    	; 0xd72 <TX_Protocol>
     e1e:	80 91 8d 01 	lds	r24, 0x018D
     e22:	8b cf       	rjmp	.-234    	; 0xd3a <Slave_Select>

00000e24 <TX_wheel_data>:
     e24:	80 91 90 01 	lds	r24, 0x0190
     e28:	88 df       	rcall	.-240    	; 0xd3a <Slave_Select>
     e2a:	80 91 4c 01 	lds	r24, 0x014C
     e2e:	a1 df       	rcall	.-190    	; 0xd72 <TX_Protocol>
     e30:	80 91 50 01 	lds	r24, 0x0150
     e34:	63 df       	rcall	.-314    	; 0xcfc <Master_TX>
     e36:	80 91 8d 01 	lds	r24, 0x018D
     e3a:	7f cf       	rjmp	.-258    	; 0xd3a <Slave_Select>

00000e3c <TX_arm_data>:
     e3c:	80 91 90 01 	lds	r24, 0x0190
     e40:	7c df       	rcall	.-264    	; 0xd3a <Slave_Select>
     e42:	80 91 5f 01 	lds	r24, 0x015F
     e46:	95 df       	rcall	.-214    	; 0xd72 <TX_Protocol>
     e48:	80 91 3c 01 	lds	r24, 0x013C
     e4c:	57 cf       	rjmp	.-338    	; 0xcfc <Master_TX>

00000e4e <TXKpData>:
     e4e:	80 91 90 01 	lds	r24, 0x0190
     e52:	73 df       	rcall	.-282    	; 0xd3a <Slave_Select>
     e54:	80 91 59 01 	lds	r24, 0x0159
     e58:	8c df       	rcall	.-232    	; 0xd72 <TX_Protocol>
     e5a:	80 91 87 01 	lds	r24, 0x0187
     e5e:	4e df       	rcall	.-356    	; 0xcfc <Master_TX>
     e60:	80 91 8d 01 	lds	r24, 0x018D
     e64:	6a cf       	rjmp	.-300    	; 0xd3a <Slave_Select>

00000e66 <TXDropItem>:
     e66:	80 91 90 01 	lds	r24, 0x0190
     e6a:	67 df       	rcall	.-306    	; 0xd3a <Slave_Select>
     e6c:	80 91 8c 01 	lds	r24, 0x018C
     e70:	80 df       	rcall	.-256    	; 0xd72 <TX_Protocol>
     e72:	80 91 5d 01 	lds	r24, 0x015D
     e76:	42 df       	rcall	.-380    	; 0xcfc <Master_TX>
     e78:	80 91 8d 01 	lds	r24, 0x018D
     e7c:	5e cf       	rjmp	.-324    	; 0xd3a <Slave_Select>

00000e7e <waitForUserInputStartAbort>:
     e7e:	80 91 5e 01 	lds	r24, 0x015E
     e82:	88 23       	and	r24, r24
     e84:	e1 f3       	breq	.-8      	; 0xe7e <waitForUserInputStartAbort>
     e86:	10 92 5e 01 	sts	0x015E, r1
     e8a:	08 95       	ret

00000e8c <waitForUserInputEndPickup>:
     e8c:	80 91 8a 01 	lds	r24, 0x018A
     e90:	88 23       	and	r24, r24
     e92:	e1 f3       	breq	.-8      	; 0xe8c <waitForUserInputEndPickup>
     e94:	10 92 8a 01 	sts	0x018A, r1
     e98:	08 95       	ret

00000e9a <waitForFinishedDrop>:
     e9a:	80 91 51 01 	lds	r24, 0x0151
     e9e:	88 23       	and	r24, r24
     ea0:	e1 f3       	breq	.-8      	; 0xe9a <waitForFinishedDrop>
     ea2:	10 92 51 01 	sts	0x0151, r1
     ea6:	08 95       	ret

00000ea8 <itemInHistory>:
     ea8:	1f 93       	push	r17
     eaa:	cf 93       	push	r28
     eac:	df 93       	push	r29
     eae:	d0 91 8b 01 	lds	r29, 0x018B
     eb2:	d1 11       	cpse	r29, r1
     eb4:	12 c0       	rjmp	.+36     	; 0xeda <itemInHistory+0x32>
     eb6:	80 e0       	ldi	r24, 0x00	; 0
     eb8:	26 c0       	rjmp	.+76     	; 0xf06 <itemInHistory+0x5e>
     eba:	71 91       	ld	r23, Z+
     ebc:	6d 91       	ld	r22, X+
     ebe:	76 13       	cpse	r23, r22
     ec0:	01 c0       	rjmp	.+2      	; 0xec4 <itemInHistory+0x1c>
     ec2:	cf 5f       	subi	r28, 0xFF	; 255
     ec4:	cc 30       	cpi	r28, 0x0C	; 12
     ec6:	f1 f0       	breq	.+60     	; 0xf04 <itemInHistory+0x5c>
     ec8:	e8 17       	cp	r30, r24
     eca:	f9 07       	cpc	r31, r25
     ecc:	b1 f7       	brne	.-20     	; 0xeba <itemInHistory+0x12>
     ece:	2f 5f       	subi	r18, 0xFF	; 255
     ed0:	3f 4f       	sbci	r19, 0xFF	; 255
     ed2:	2d 17       	cp	r18, r29
     ed4:	48 f0       	brcs	.+18     	; 0xee8 <itemInHistory+0x40>
     ed6:	80 e0       	ldi	r24, 0x00	; 0
     ed8:	16 c0       	rjmp	.+44     	; 0xf06 <itemInHistory+0x5e>
     eda:	20 e0       	ldi	r18, 0x00	; 0
     edc:	30 e0       	ldi	r19, 0x00	; 0
     ede:	40 e3       	ldi	r20, 0x30	; 48
     ee0:	51 e0       	ldi	r21, 0x01	; 1
     ee2:	8c e3       	ldi	r24, 0x3C	; 60
     ee4:	91 e0       	ldi	r25, 0x01	; 1
     ee6:	10 e0       	ldi	r17, 0x00	; 0
     ee8:	fa 01       	movw	r30, r20
     eea:	d9 01       	movw	r26, r18
     eec:	aa 0f       	add	r26, r26
     eee:	bb 1f       	adc	r27, r27
     ef0:	a2 0f       	add	r26, r18
     ef2:	b3 1f       	adc	r27, r19
     ef4:	aa 0f       	add	r26, r26
     ef6:	bb 1f       	adc	r27, r27
     ef8:	aa 0f       	add	r26, r26
     efa:	bb 1f       	adc	r27, r27
     efc:	a0 50       	subi	r26, 0x00	; 0
     efe:	bf 4f       	sbci	r27, 0xFF	; 255
     f00:	c1 2f       	mov	r28, r17
     f02:	db cf       	rjmp	.-74     	; 0xeba <itemInHistory+0x12>
     f04:	81 e0       	ldi	r24, 0x01	; 1
     f06:	df 91       	pop	r29
     f08:	cf 91       	pop	r28
     f0a:	1f 91       	pop	r17
     f0c:	08 95       	ret

00000f0e <cargoEqualsNewStream>:
     f0e:	90 91 24 01 	lds	r25, 0x0124
     f12:	80 91 30 01 	lds	r24, 0x0130
     f16:	98 13       	cpse	r25, r24
     f18:	0f c0       	rjmp	.+30     	; 0xf38 <cargoEqualsNewStream+0x2a>
     f1a:	e5 e2       	ldi	r30, 0x25	; 37
     f1c:	f1 e0       	ldi	r31, 0x01	; 1
     f1e:	a1 e3       	ldi	r26, 0x31	; 49
     f20:	b1 e0       	ldi	r27, 0x01	; 1
     f22:	80 e3       	ldi	r24, 0x30	; 48
     f24:	91 e0       	ldi	r25, 0x01	; 1
     f26:	31 91       	ld	r19, Z+
     f28:	2d 91       	ld	r18, X+
     f2a:	32 13       	cpse	r19, r18
     f2c:	07 c0       	rjmp	.+14     	; 0xf3c <cargoEqualsNewStream+0x2e>
     f2e:	e8 17       	cp	r30, r24
     f30:	f9 07       	cpc	r31, r25
     f32:	c9 f7       	brne	.-14     	; 0xf26 <cargoEqualsNewStream+0x18>
     f34:	81 e0       	ldi	r24, 0x01	; 1
     f36:	08 95       	ret
     f38:	80 e0       	ldi	r24, 0x00	; 0
     f3a:	08 95       	ret
     f3c:	80 e0       	ldi	r24, 0x00	; 0
     f3e:	08 95       	ret

00000f40 <powerRFID>:
     f40:	88 23       	and	r24, r24
     f42:	11 f0       	breq	.+4      	; 0xf48 <powerRFID+0x8>
     f44:	5d 98       	cbi	0x0b, 5	; 11
     f46:	08 95       	ret
     f48:	5d 9a       	sbi	0x0b, 5	; 11
     f4a:	08 95       	ret

00000f4c <printOnLCD>:
     f4c:	0f 93       	push	r16
     f4e:	1f 93       	push	r17
     f50:	cf 93       	push	r28
     f52:	df 93       	push	r29
     f54:	c8 2f       	mov	r28, r24
     f56:	80 e6       	ldi	r24, 0x60	; 96
     f58:	91 e0       	ldi	r25, 0x01	; 1
     f5a:	e3 dc       	rcall	.-1594   	; 0x922 <hd44780_l_clear_disp>
     f5c:	cc 23       	and	r28, r28
     f5e:	01 f1       	breq	.+64     	; 0xfa0 <printOnLCD+0x54>
     f60:	62 e5       	ldi	r22, 0x52	; 82
     f62:	80 e6       	ldi	r24, 0x60	; 96
     f64:	91 e0       	ldi	r25, 0x01	; 1
     f66:	25 dd       	rcall	.-1462   	; 0x9b2 <hd44780_l_write>
     f68:	66 e4       	ldi	r22, 0x46	; 70
     f6a:	80 e6       	ldi	r24, 0x60	; 96
     f6c:	91 e0       	ldi	r25, 0x01	; 1
     f6e:	21 dd       	rcall	.-1470   	; 0x9b2 <hd44780_l_write>
     f70:	69 e4       	ldi	r22, 0x49	; 73
     f72:	80 e6       	ldi	r24, 0x60	; 96
     f74:	91 e0       	ldi	r25, 0x01	; 1
     f76:	1d dd       	rcall	.-1478   	; 0x9b2 <hd44780_l_write>
     f78:	64 e4       	ldi	r22, 0x44	; 68
     f7a:	80 e6       	ldi	r24, 0x60	; 96
     f7c:	91 e0       	ldi	r25, 0x01	; 1
     f7e:	19 dd       	rcall	.-1486   	; 0x9b2 <hd44780_l_write>
     f80:	6a e3       	ldi	r22, 0x3A	; 58
     f82:	80 e6       	ldi	r24, 0x60	; 96
     f84:	91 e0       	ldi	r25, 0x01	; 1
     f86:	15 dd       	rcall	.-1494   	; 0x9b2 <hd44780_l_write>
     f88:	c5 e2       	ldi	r28, 0x25	; 37
     f8a:	d1 e0       	ldi	r29, 0x01	; 1
     f8c:	0f e2       	ldi	r16, 0x2F	; 47
     f8e:	11 e0       	ldi	r17, 0x01	; 1
     f90:	69 91       	ld	r22, Y+
     f92:	80 e6       	ldi	r24, 0x60	; 96
     f94:	91 e0       	ldi	r25, 0x01	; 1
     f96:	0d dd       	rcall	.-1510   	; 0x9b2 <hd44780_l_write>
     f98:	c0 17       	cp	r28, r16
     f9a:	d1 07       	cpc	r29, r17
     f9c:	c9 f7       	brne	.-14     	; 0xf90 <printOnLCD+0x44>
     f9e:	20 c0       	rjmp	.+64     	; 0xfe0 <printOnLCD+0x94>
     fa0:	6e e4       	ldi	r22, 0x4E	; 78
     fa2:	80 e6       	ldi	r24, 0x60	; 96
     fa4:	91 e0       	ldi	r25, 0x01	; 1
     fa6:	05 dd       	rcall	.-1526   	; 0x9b2 <hd44780_l_write>
     fa8:	6f e4       	ldi	r22, 0x4F	; 79
     faa:	80 e6       	ldi	r24, 0x60	; 96
     fac:	91 e0       	ldi	r25, 0x01	; 1
     fae:	01 dd       	rcall	.-1534   	; 0x9b2 <hd44780_l_write>
     fb0:	60 e2       	ldi	r22, 0x20	; 32
     fb2:	80 e6       	ldi	r24, 0x60	; 96
     fb4:	91 e0       	ldi	r25, 0x01	; 1
     fb6:	fd dc       	rcall	.-1542   	; 0x9b2 <hd44780_l_write>
     fb8:	63 e4       	ldi	r22, 0x43	; 67
     fba:	80 e6       	ldi	r24, 0x60	; 96
     fbc:	91 e0       	ldi	r25, 0x01	; 1
     fbe:	f9 dc       	rcall	.-1550   	; 0x9b2 <hd44780_l_write>
     fc0:	61 e4       	ldi	r22, 0x41	; 65
     fc2:	80 e6       	ldi	r24, 0x60	; 96
     fc4:	91 e0       	ldi	r25, 0x01	; 1
     fc6:	f5 dc       	rcall	.-1558   	; 0x9b2 <hd44780_l_write>
     fc8:	62 e5       	ldi	r22, 0x52	; 82
     fca:	80 e6       	ldi	r24, 0x60	; 96
     fcc:	91 e0       	ldi	r25, 0x01	; 1
     fce:	f1 dc       	rcall	.-1566   	; 0x9b2 <hd44780_l_write>
     fd0:	67 e4       	ldi	r22, 0x47	; 71
     fd2:	80 e6       	ldi	r24, 0x60	; 96
     fd4:	91 e0       	ldi	r25, 0x01	; 1
     fd6:	ed dc       	rcall	.-1574   	; 0x9b2 <hd44780_l_write>
     fd8:	6f e4       	ldi	r22, 0x4F	; 79
     fda:	80 e6       	ldi	r24, 0x60	; 96
     fdc:	91 e0       	ldi	r25, 0x01	; 1
     fde:	e9 dc       	rcall	.-1582   	; 0x9b2 <hd44780_l_write>
     fe0:	df 91       	pop	r29
     fe2:	cf 91       	pop	r28
     fe4:	1f 91       	pop	r17
     fe6:	0f 91       	pop	r16
     fe8:	08 95       	ret

00000fea <deliveryMode>:
     fea:	91 df       	rcall	.-222    	; 0xf0e <cargoEqualsNewStream>
     fec:	88 23       	and	r24, r24
     fee:	31 f1       	breq	.+76     	; 0x103c <deliveryMode+0x52>
     ff0:	e4 e2       	ldi	r30, 0x24	; 36
     ff2:	f1 e0       	ldi	r31, 0x01	; 1
     ff4:	80 91 8b 01 	lds	r24, 0x018B
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	dc 01       	movw	r26, r24
     ffc:	aa 0f       	add	r26, r26
     ffe:	bb 1f       	adc	r27, r27
    1000:	8a 0f       	add	r24, r26
    1002:	9b 1f       	adc	r25, r27
    1004:	dc 01       	movw	r26, r24
    1006:	aa 0f       	add	r26, r26
    1008:	bb 1f       	adc	r27, r27
    100a:	aa 0f       	add	r26, r26
    100c:	bb 1f       	adc	r27, r27
    100e:	a0 50       	subi	r26, 0x00	; 0
    1010:	bf 4f       	sbci	r27, 0xFF	; 255
    1012:	80 e3       	ldi	r24, 0x30	; 48
    1014:	91 e0       	ldi	r25, 0x01	; 1
    1016:	21 91       	ld	r18, Z+
    1018:	2d 93       	st	X+, r18
    101a:	e8 17       	cp	r30, r24
    101c:	f9 07       	cpc	r31, r25
    101e:	d9 f7       	brne	.-10     	; 0x1016 <deliveryMode+0x2c>
    1020:	80 91 8b 01 	lds	r24, 0x018B
    1024:	8f 5f       	subi	r24, 0xFF	; 255
    1026:	80 93 8b 01 	sts	0x018B, r24
    102a:	80 e0       	ldi	r24, 0x00	; 0
    102c:	8f df       	rcall	.-226    	; 0xf4c <printOnLCD>
    102e:	10 92 54 01 	sts	0x0154, r1
    1032:	80 91 5d 01 	lds	r24, 0x015D
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	16 df       	rcall	.-468    	; 0xe66 <TXDropItem>
    103a:	2f cf       	rjmp	.-418    	; 0xe9a <waitForFinishedDrop>
    103c:	08 95       	ret

0000103e <pickUpMode>:
    103e:	34 df       	rcall	.-408    	; 0xea8 <itemInHistory>
    1040:	81 11       	cpse	r24, r1
    1042:	15 c0       	rjmp	.+42     	; 0x106e <pickUpMode+0x30>
    1044:	1c df       	rcall	.-456    	; 0xe7e <waitForUserInputStartAbort>
    1046:	80 91 58 01 	lds	r24, 0x0158
    104a:	88 23       	and	r24, r24
    104c:	81 f0       	breq	.+32     	; 0x106e <pickUpMode+0x30>
    104e:	e0 e3       	ldi	r30, 0x30	; 48
    1050:	f1 e0       	ldi	r31, 0x01	; 1
    1052:	a4 e2       	ldi	r26, 0x24	; 36
    1054:	b1 e0       	ldi	r27, 0x01	; 1
    1056:	8c e3       	ldi	r24, 0x3C	; 60
    1058:	91 e0       	ldi	r25, 0x01	; 1
    105a:	21 91       	ld	r18, Z+
    105c:	2d 93       	st	X+, r18
    105e:	e8 17       	cp	r30, r24
    1060:	f9 07       	cpc	r31, r25
    1062:	d9 f7       	brne	.-10     	; 0x105a <pickUpMode+0x1c>
    1064:	81 e0       	ldi	r24, 0x01	; 1
    1066:	80 93 54 01 	sts	0x0154, r24
    106a:	70 df       	rcall	.-288    	; 0xf4c <printOnLCD>
    106c:	0f cf       	rjmp	.-482    	; 0xe8c <waitForUserInputEndPickup>
    106e:	08 95       	ret

00001070 <stationMode>:
    1070:	81 e0       	ldi	r24, 0x01	; 1
    1072:	66 df       	rcall	.-308    	; 0xf40 <powerRFID>
    1074:	80 91 57 01 	lds	r24, 0x0157
    1078:	88 23       	and	r24, r24
    107a:	e1 f3       	breq	.-8      	; 0x1074 <stationMode+0x4>
    107c:	10 92 57 01 	sts	0x0157, r1
    1080:	80 91 54 01 	lds	r24, 0x0154
    1084:	81 11       	cpse	r24, r1
    1086:	02 c0       	rjmp	.+4      	; 0x108c <stationMode+0x1c>
    1088:	da df       	rcall	.-76     	; 0x103e <pickUpMode>
    108a:	01 c0       	rjmp	.+2      	; 0x108e <stationMode+0x1e>
    108c:	ae df       	rcall	.-164    	; 0xfea <deliveryMode>
    108e:	10 92 4a 01 	sts	0x014A, r1
    1092:	86 e0       	ldi	r24, 0x06	; 6
    1094:	80 93 6e 00 	sts	0x006E, r24
    1098:	08 95       	ret

0000109a <setupRFID>:
    109a:	e9 ec       	ldi	r30, 0xC9	; 201
    109c:	f0 e0       	ldi	r31, 0x00	; 0
    109e:	80 81       	ld	r24, Z
    10a0:	80 69       	ori	r24, 0x90	; 144
    10a2:	80 83       	st	Z, r24
    10a4:	ea ec       	ldi	r30, 0xCA	; 202
    10a6:	f0 e0       	ldi	r31, 0x00	; 0
    10a8:	80 81       	ld	r24, Z
    10aa:	86 60       	ori	r24, 0x06	; 6
    10ac:	80 83       	st	Z, r24
    10ae:	81 e0       	ldi	r24, 0x01	; 1
    10b0:	80 93 cd 00 	sts	0x00CD, r24
    10b4:	8f e7       	ldi	r24, 0x7F	; 127
    10b6:	80 93 cc 00 	sts	0x00CC, r24
    10ba:	55 9a       	sbi	0x0a, 5	; 10
    10bc:	5d 9a       	sbi	0x0b, 5	; 11
    10be:	08 95       	ret

000010c0 <setupWarehouse>:
    10c0:	10 92 57 01 	sts	0x0157, r1
    10c4:	10 92 54 01 	sts	0x0154, r1
    10c8:	10 92 58 01 	sts	0x0158, r1
    10cc:	10 92 5e 01 	sts	0x015E, r1
    10d0:	10 92 8a 01 	sts	0x018A, r1
    10d4:	10 92 4a 01 	sts	0x014A, r1
    10d8:	10 92 3e 01 	sts	0x013E, r1
    10dc:	10 92 8b 01 	sts	0x018B, r1
    10e0:	10 92 51 01 	sts	0x0151, r1
    10e4:	08 95       	ret

000010e6 <setupLCD>:
    10e6:	0f 93       	push	r16
    10e8:	8f ef       	ldi	r24, 0xFF	; 255
    10ea:	81 b9       	out	0x01, r24	; 1
    10ec:	84 b1       	in	r24, 0x04	; 4
    10ee:	83 60       	ori	r24, 0x03	; 3
    10f0:	84 b9       	out	0x04, r24	; 4
    10f2:	3e 9a       	sbi	0x07, 6	; 7
    10f4:	21 e0       	ldi	r18, 0x01	; 1
    10f6:	20 93 60 01 	sts	0x0160, r18
    10fa:	10 92 61 01 	sts	0x0161, r1
    10fe:	86 e0       	ldi	r24, 0x06	; 6
    1100:	80 93 62 01 	sts	0x0162, r24
    1104:	97 e0       	ldi	r25, 0x07	; 7
    1106:	90 93 63 01 	sts	0x0163, r25
    110a:	80 93 64 01 	sts	0x0164, r24
    110e:	85 e0       	ldi	r24, 0x05	; 5
    1110:	80 93 65 01 	sts	0x0165, r24
    1114:	84 e0       	ldi	r24, 0x04	; 4
    1116:	80 93 66 01 	sts	0x0166, r24
    111a:	83 e0       	ldi	r24, 0x03	; 3
    111c:	80 93 67 01 	sts	0x0167, r24
    1120:	82 e0       	ldi	r24, 0x02	; 2
    1122:	80 93 68 01 	sts	0x0168, r24
    1126:	20 93 69 01 	sts	0x0169, r18
    112a:	10 92 6a 01 	sts	0x016A, r1
    112e:	85 e2       	ldi	r24, 0x25	; 37
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	90 93 6c 01 	sts	0x016C, r25
    1136:	80 93 6b 01 	sts	0x016B, r24
    113a:	90 93 6e 01 	sts	0x016E, r25
    113e:	80 93 6d 01 	sts	0x016D, r24
    1142:	88 e2       	ldi	r24, 0x28	; 40
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	90 93 70 01 	sts	0x0170, r25
    114a:	80 93 6f 01 	sts	0x016F, r24
    114e:	82 e2       	ldi	r24, 0x22	; 34
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	90 93 72 01 	sts	0x0172, r25
    1156:	80 93 71 01 	sts	0x0171, r24
    115a:	90 93 74 01 	sts	0x0174, r25
    115e:	80 93 73 01 	sts	0x0173, r24
    1162:	90 93 76 01 	sts	0x0176, r25
    1166:	80 93 75 01 	sts	0x0175, r24
    116a:	90 93 78 01 	sts	0x0178, r25
    116e:	80 93 77 01 	sts	0x0177, r24
    1172:	90 93 7a 01 	sts	0x017A, r25
    1176:	80 93 79 01 	sts	0x0179, r24
    117a:	90 93 7c 01 	sts	0x017C, r25
    117e:	80 93 7b 01 	sts	0x017B, r24
    1182:	90 93 7e 01 	sts	0x017E, r25
    1186:	80 93 7d 01 	sts	0x017D, r24
    118a:	90 93 80 01 	sts	0x0180, r25
    118e:	80 93 7f 01 	sts	0x017F, r24
    1192:	10 92 81 01 	sts	0x0181, r1
    1196:	80 e4       	ldi	r24, 0x40	; 64
    1198:	80 93 82 01 	sts	0x0182, r24
    119c:	20 93 83 01 	sts	0x0183, r18
    11a0:	00 e0       	ldi	r16, 0x00	; 0
    11a2:	40 e0       	ldi	r20, 0x00	; 0
    11a4:	61 e0       	ldi	r22, 0x01	; 1
    11a6:	80 e6       	ldi	r24, 0x60	; 96
    11a8:	91 e0       	ldi	r25, 0x01	; 1
    11aa:	0e dc       	rcall	.-2020   	; 0x9c8 <hd44780_l_init>
    11ac:	20 e0       	ldi	r18, 0x00	; 0
    11ae:	40 e0       	ldi	r20, 0x00	; 0
    11b0:	61 e0       	ldi	r22, 0x01	; 1
    11b2:	80 e6       	ldi	r24, 0x60	; 96
    11b4:	91 e0       	ldi	r25, 0x01	; 1
    11b6:	d2 db       	rcall	.-2140   	; 0x95c <hd44780_l_disp>
    11b8:	80 e6       	ldi	r24, 0x60	; 96
    11ba:	91 e0       	ldi	r25, 0x01	; 1
    11bc:	b2 db       	rcall	.-2204   	; 0x922 <hd44780_l_clear_disp>
    11be:	0f 91       	pop	r16
    11c0:	08 95       	ret

000011c2 <_exit>:
    11c2:	f8 94       	cli

000011c4 <__stop_program>:
    11c4:	ff cf       	rjmp	.-2      	; 0x11c4 <__stop_program>
