
Servo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000154  000001c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000154  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         000006cc  00000000  00000000  000001c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  00000894  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  0000092b  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  0000095a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000064d  00000000  00000000  000009aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001bd  00000000  00000000  00000ff7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000330  00000000  00000000  000011b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c4  00000000  00000000  000014e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000018d  00000000  00000000  000015a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000038b  00000000  00000000  00001735  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00001ac0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	4e d0       	rcall	.+156    	; 0x136 <main>
  9a:	5a c0       	rjmp	.+180    	; 0x150 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <USART_Init>:
	move_Double_Servo(0x00, 0x00, 0x50, 0x00, 0x04, 0x05);
	move_Double_Servo(0xAA, 0x03, 0x50, 0x00, 0x02, 0x03);
	move_Single_Servo(0xFF, 0x01, 0x20, 0x00, 0x01);
	
	
}
  9e:	84 e0       	ldi	r24, 0x04	; 4
  a0:	8a b9       	out	0x0a, r24	; 10
  a2:	10 92 c5 00 	sts	0x00C5, r1
  a6:	10 92 c4 00 	sts	0x00C4, r1
  aa:	88 e1       	ldi	r24, 0x18	; 24
  ac:	80 93 c1 00 	sts	0x00C1, r24
  b0:	86 e0       	ldi	r24, 0x06	; 6
  b2:	80 93 c2 00 	sts	0x00C2, r24
  b6:	08 95       	ret

000000b8 <USART_Transmit>:
  b8:	5a 9a       	sbi	0x0b, 2	; 11
  ba:	e0 ec       	ldi	r30, 0xC0	; 192
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	90 81       	ld	r25, Z
  c0:	95 ff       	sbrs	r25, 5
  c2:	fd cf       	rjmp	.-6      	; 0xbe <USART_Transmit+0x6>
  c4:	80 93 c6 00 	sts	0x00C6, r24
  c8:	08 95       	ret

000000ca <move_Double_Servo>:
  ca:	ef 92       	push	r14
  cc:	0f 93       	push	r16
  ce:	cf 93       	push	r28
  d0:	df 93       	push	r29
  d2:	d4 2f       	mov	r29, r20
  d4:	c2 2f       	mov	r28, r18
  d6:	8f ef       	ldi	r24, 0xFF	; 255
  d8:	ef df       	rcall	.-34     	; 0xb8 <USART_Transmit>
  da:	8f ef       	ldi	r24, 0xFF	; 255
  dc:	ed df       	rcall	.-38     	; 0xb8 <USART_Transmit>
  de:	8e ef       	ldi	r24, 0xFE	; 254
  e0:	eb df       	rcall	.-42     	; 0xb8 <USART_Transmit>
  e2:	8e e0       	ldi	r24, 0x0E	; 14
  e4:	e9 df       	rcall	.-46     	; 0xb8 <USART_Transmit>
  e6:	83 e8       	ldi	r24, 0x83	; 131
  e8:	e7 df       	rcall	.-50     	; 0xb8 <USART_Transmit>
  ea:	8e e1       	ldi	r24, 0x1E	; 30
  ec:	e5 df       	rcall	.-54     	; 0xb8 <USART_Transmit>
  ee:	84 e0       	ldi	r24, 0x04	; 4
  f0:	e3 df       	rcall	.-58     	; 0xb8 <USART_Transmit>
  f2:	80 2f       	mov	r24, r16
  f4:	e1 df       	rcall	.-62     	; 0xb8 <USART_Transmit>
  f6:	82 ed       	ldi	r24, 0xD2	; 210
  f8:	df df       	rcall	.-66     	; 0xb8 <USART_Transmit>
  fa:	80 e0       	ldi	r24, 0x00	; 0
  fc:	dd df       	rcall	.-70     	; 0xb8 <USART_Transmit>
  fe:	8d 2f       	mov	r24, r29
 100:	db df       	rcall	.-74     	; 0xb8 <USART_Transmit>
 102:	8c 2f       	mov	r24, r28
 104:	d9 df       	rcall	.-78     	; 0xb8 <USART_Transmit>
 106:	8e 2d       	mov	r24, r14
 108:	d7 df       	rcall	.-82     	; 0xb8 <USART_Transmit>
 10a:	8a e2       	ldi	r24, 0x2A	; 42
 10c:	d5 df       	rcall	.-86     	; 0xb8 <USART_Transmit>
 10e:	83 e0       	ldi	r24, 0x03	; 3
 110:	d3 df       	rcall	.-90     	; 0xb8 <USART_Transmit>
 112:	8d 2f       	mov	r24, r29
 114:	d1 df       	rcall	.-94     	; 0xb8 <USART_Transmit>
 116:	8c 2f       	mov	r24, r28
 118:	cf df       	rcall	.-98     	; 0xb8 <USART_Transmit>
 11a:	dd 0f       	add	r29, r29
 11c:	d0 55       	subi	r29, 0x50	; 80
 11e:	dc 0f       	add	r29, r28
 120:	cd 0f       	add	r28, r29
 122:	0c 0f       	add	r16, r28
 124:	80 2f       	mov	r24, r16
 126:	8e 0d       	add	r24, r14
 128:	80 95       	com	r24
 12a:	c6 df       	rcall	.-116    	; 0xb8 <USART_Transmit>
 12c:	df 91       	pop	r29
 12e:	cf 91       	pop	r28
 130:	0f 91       	pop	r16
 132:	ef 90       	pop	r14
 134:	08 95       	ret

00000136 <main>:

int main(void)
{
	 		
	USART_Init();
 136:	b3 df       	rcall	.-154    	; 0x9e <USART_Init>
	
	//default_Position();
	
	move_Double_Servo(0xFF, 0x01, 0x40, 0x00, 0x02, 0x03);
 138:	0f 2e       	mov	r0, r31
 13a:	f3 e0       	ldi	r31, 0x03	; 3
 13c:	ef 2e       	mov	r14, r31
 13e:	f1 2c       	mov	r15, r1
 140:	f0 2d       	mov	r31, r0
 142:	02 e0       	ldi	r16, 0x02	; 2
 144:	20 e0       	ldi	r18, 0x00	; 0
 146:	40 e4       	ldi	r20, 0x40	; 64
 148:	61 e0       	ldi	r22, 0x01	; 1
 14a:	8f ef       	ldi	r24, 0xFF	; 255
 14c:	be df       	rcall	.-132    	; 0xca <move_Double_Servo>
 14e:	ff cf       	rjmp	.-2      	; 0x14e <main+0x18>

00000150 <_exit>:
 150:	f8 94       	cli

00000152 <__stop_program>:
 152:	ff cf       	rjmp	.-2      	; 0x152 <__stop_program>
